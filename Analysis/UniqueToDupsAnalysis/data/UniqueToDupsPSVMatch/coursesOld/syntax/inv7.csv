"all",1
"all p",1
"all s: Student",3
"all s1: Student",4
"all s: Student |",1
"lone s : Student",1
"lone Student.projects.c",1
"all p:Project, s:Student |",2
"all s: Student, c: Course |",1
"all s:Student | s.projects = no",1
"all s.Student | one s <: Project",1
"all s : Course| lone (c.projects)",1
"all s : Student | lone p.projects",1
"s.projects in s.enrolled.projects",1
"all s : Student | #s.projects.p < 2",1
"all s:Student | lone s.course.projects",1
"all s : Student, p : s.projects | lone",2
"all s : Student | all p : s.projects |",1
"s : Student | lone s.projects.projects",1
"all s: Student | one (s & s.projects.)",1
"all s:Student | one Course <: projects.p",1
"all s:Students | one Course <: projects.p",1
"all s.Student c:Course | one Project <: c",1
"all s.Student | one s <: projects.Project",1
"all s.Student | one s <: projects.Projects",1
"all s.Student c:Course | one s <: c.Project",1
"all s : Students | lone s.enrolled.projects",2
"all s:Student| lone s.projects and c.projects",1
"all p:Person | p.projects in p.enroled.projects",1
"all s: Student, c: Course | lone s in c.projects",1
"all s : Student, c : Course | lone p : Project |",1
"all s: Student, p: Project | lone s in c.projects",1
"all s:Student p:Project | one Course <: projects.p",1
"all s : Student | lone Course.projects.(project.s)",1
"all s.Student c:Course | one s <: c.Project.projects",2
"all s: Student, some p: project | lone s.(projects.p)",1
"all s: Student, some p: Project | lone s.(projects.p)",1
"all s:Student | lone projects.s implies Course.person",1
"all s:Student | lone projects.s implies person.Course",1
"all s : Student | lone projects.(s.projects) <: COurse",1
"all s:Student,c:Course | one p:Project | p in s.project",1
"all s: Student, all c:Course | lone s.enrolled.c.Project",1
"all s : Student | lone (s.enrolled.(Course<:projects).p)",1
"all s: Student, all c:Course | lone projects.c.enrolled.s",1
"all s: Student, all c:Course | lone projects.c.enrolled in s",1
"all s1 : Student |one s.Person<:projects.~(Course<:projects)",1
"all s1 : Student, c : Course | lone s1.projects.(c.<:projects)",1
"all s : Student, all c : Course | lone s.projects & c.projects",1
"all s:Student , c:Course | lone(s.projects) & lone(c.projects)",2
"all s : Student, all c : Course | lone s.projects && c.projects",1
"all s: Student, some p: Project | lone (s.enrolled & projects.p)",1
"all s:Student, c:s.courses | lone p:s.projects | p in c.projects",1
"all s : Student | all c : s.enrolled | lone p.projects.c.projects",1
"all s:Student | (some c:Course | c in p.enrolled) | lone s.projects",2
"all s: Student | c in s.enrolled implies lone s.projects&c.projects",1
"all s: Student, p: Project | one (p in s.projects and p in s.course)",1
"all s1 : Student, c : Course | lone s1.projets.~(Course<:projects).c",1
"all s : Student, c : s.enrolled | lone p in (s.projects)+(c.projects)",1
"all s: Student, c: Course | lone s.projects&( all s.enrolled.projects)",2
"all s : Student, all c : Course | lone projects.(c.projects <: Course)",1
"all s : Student | all c : s.enrolled | lone (s.enrolled & c.projects))",1
"all: s:Student | some c:Course | c in s.enrolled implies lone s.projects",2
"all s:Student | (some c:Course | c in p.enrolled) implies lone s.projects",1
"all per : Person | per in Student => lone pro : Project | s->p in projects",1
"all s:Person, c:Course | one p : Project | p in s.project and p in c.course",1
"all c: Component | some d : Dangerous | c->d in parts implies c in Dangerous",2
"all s : Student | all c : Course | one p : Project | s in person.(c.projects)",1
"all s: Student, c : Course | c in s.enrolled => #(p.projects & c.projects) = 1",1
"all s : Student, p : Project | p in s.projects => p in one s.enrolled.projects",1
"all s:Student, c:Courses | c in s.enrolled implies lone s.projects & c.projects",1
"all p : Person, c : Course | c in p.enrolled implies lone p.projects & c.course",2
"all s : Student, all c : Course | lone projects.(c.projects <: Course) <: Person",1
"all s: Student, c:Course | some p: Projects | (s.enrolled).projects in s.projects",1
"all p : Person, c : Course | c in p.enrolled implies lone (p.projects & c.course)",1
"all s: Student, c: Course | one p: Project | s->p in project and s->c in enrolled",1
"all s : Student, c : course | c in s.enrolled implies lone c.projects & s.projects",1
"all s: Student, c:Course | c->s in enrolled implies (some p: c.projects&s.projects)",1
"all s : Student, C : Course | lone p : Project | p in s.projects and p in c.projects",1
"all s:Student | all c:Course | c in p.enrolled implies lone (c.projects & s.projects)",1
"all s: Student, disj x,j : s.projects | (Course <: projects).x != (Course <: projects).y",1
"all s : Student, p : Project, c : Course | no no (p & c.projects) implies p in s.projects",1
"all s: Student, proj: Project, c: Course | proj in s.projects implies one (Couse <: projects).p",1
"all s : Student | all p1, p2 : Project | (p in s.projects and p in s.projects) implies (p1 = p2)",1
"all s:Person, c:Course | one p : Project | p in s.projects and p in c.projects and c in s.enroled",1
"all s: Student, proj: Project, c: Course | proj in s.projects implies lone (Course <: projects).p",1
"all s:Person, c:Course | one p : Project | p in s.projects and p in c.projects and c in s.enrroled",1
"all p1,p2: Project, s: Student, c: Course | ((p1 in c.projects) and (p2 in c.projects)implies p1=p2",1
"all p1,p2: Project, s: Student, c: Course | (s in p1.projects) and (s in p2.projects)) implies p1=p2",1
"all s: Student, c:Course lone p:Project | s in enrolled.c and c in projects.p implies s in projects.p",1
"all s: Student, c:Course, lone p:Project | s in enrolled.c and c in projects.p implies s in projects.p",2
"all s : Student | all c : course | c in s.enrolled implies one p : Project | s.projects and c.projects",1
"all s: Student, c: Course | lone p: Projects | c in s.enrolled and p in s.projects and p in c.projects",1
"all p1 : Student | all pr1 : Project | all c1 : Course | (p1->pr1 in project) and (c1->pr1 in projects)",1
"all s : Student | all c : Course | lone pro : Project | 
  			c->pro in projects && per->pro in projects",1
"all s:Student, c1,c2:Course, p:Project | (s->c in enrolled and c->p in projects) implies s->p in projects",1
"all s:Student | all p1,p2:Projects | p1 in s.enrolled.projects and p2 in s.enrolled.projects implies p1=p2",1
"all s:Students | all c:Course | c in s.enrolled implies some p:Project | p in s.projects and p in c.projects",1
"all s: Student, c:Course | c->s in enrolled implies (some p: Projects | c->p in projects and s->p in projects)",1
"all s: Student | one Project | s->p in projects implies (all c: Course | c->p in projects and s->c in enrolled)",1
"all s: Student | ((all c : Course, p1 : Project, p2 : Project | s -> p1 in projects and c -> p1 in projects) => ())",2
"all s : Student | all p1, p2 : Project | all c : Course | (p1+p2) in s.projects and p1+p2 in c.projects) implies (p1 = p2)",1
"all s : Student | all p1, p2 : Project | all c : Course | (p1+p2) in s.projects and (p1+p2) in c.projects) implies (p1 = p2)",1
"all s : Student | all c : Courses | | all p : Project | p in s.projects and p in c.projects implies no s.projects & c.projects",1
"all s : Student | all c : Courses | all p : Project | p in s.projects and p in c.projects implies no s.projects & c.projects-p",1
"all s : Student | all c : Courses | | all p : Project | p in s.projects and p in c.projects implies no s.projects & c.projects.p",1
"all s : Student | all c : Courses | | all p : Project | p in s.projects and p in c.projects implies no s.projects & c.projects-p",1
"all s : Student | one p : Project | all c : Courses | p in s.projects implies p in c.projects and s.students -p not in c.projects",1
"all s1 : Student | all p1,p2 : Project | all c1 : Course |
    (s1->p1,p2 in projects) and (c1->p1,p2 in projects)
  	implies p1=p2",1
"all s: Student, p1, p2: Project |  s in projects.p1 and s in projects.p2 implies c1 = projects.p1 and  c2 = projects.p2 and c1 != c2",1
"all s1 : Student | all p1,p2 : Project | all c1 : Course |
    ((s1->p1,p2 in projects) and (c1->p1,p2 in projects))
  	implies p1=p2",1
"all s:Student, c:Course | lone p:Project | c in s.enrolled and p in c.projects implies p in c.projects",1
"all s:Student, c:Course | lone p:Project | p in c.projects and p in s.projects implies c in s.enrolled",2
"all s:Student, c:Course | lone p:Project | c in s.enrolled and p in c.projects implies p in s.enrolled",1
"all s : Student, c : Course |lone p : Project | s->c in enrolled and 
  s->p in Person<:projects and 
  c->p in Course<:projects",2
"all  s : Student, c : Course, p : Project | 
    lone p_act : Project | 
    some (c & s.enrolled) and (p & c.course) implies p_act in s.projects",1
"all u : Student, c1,c2 : Course, p1,p2 : Project | p1 in u.projects and p2 in u.project and p1 in c1.projects and p2 in c2.projects implies c1!=c2",1
"/ll stud:Student, c:Course | stud->c in enrolled implies ((all proj:Project | not stud->c in projects) or (one proj:Project | stud->c in projects))",1
"all  s : Student, c : Course, p : Project | 
    lone p_act : Project | 
    all (p in c.projects) and all (c in s.enrolled) implies p in s.projects",1
"all s : Student | lone p : Project | all c : Course | p in c.projects and c in s.enrolled implies p in s.projects",2
"all s : Student | one p1,p2 : Project | all c : Courses | p1 in s.projects and p2 in s.projects and p1 in c.projects and p2 in c.projects implies p1 = p2",1
"all s: Student, p1, p2: Project| one c1, c2: Course | s in projects.p1 and s in projects.p2 and c1 = projects.p1 and  c2 = projects.p2 implies c1 != c2 j",1
"all s : Student | all p1,p2 : Projects | all c : Course | (c->p1 in projects and s->p1 in projects) and  (c->p2 in projects and s->p2 in projects) implies p1=p2",1
"all p1,p2 : Projects | all c : Course | c->p1 in projects and c->p2 in projects implies (all s1 : Student | s1->p1 in projects and s1->p2 in projects implies p1=p2)",1
"all s: Student | all c : Course, p1 : Project, p2 : Project | (s -> p1 in projects and c -> p1 in projects 
  		and s -> p2 in projects and c -> p2 in projects => (p2 = p1)",1
"all s: Student | ((all c : Course, p1 : Project, p2 : Project | s -> p1 in projects and c -> p1 in projects 
  		s -> p2 in projects and c -> p2 in projects) => (p2 == p1))",1
"some p1, p2: Project | all c1,c2: Course | all s: Student| ((p1+p2) in s.projects and (p1 in c1.projects) and (p2 in c2.projects) and (c1+c2) in s.enrolls ) implies c1 != c2",1
"all s: Student | ((all c : Course, p1 : Project, p2 : Project | s -> p1 in projects and c -> p1 in projects 
  		and s -> p2 in projects and c -> p2 in projects) => (p2 = p1))",1
"all s: Student | ((all c : Course, p1 : Project, p2 : Project | s -> p1 in projects and c -> p1 in projects 
  		and s -> p2 in projects and c -> p2 in projects) => (p2 == p1))",1
"all s: Student | ((all c : Course, p1 : Project, p2 : Project | (s -> p1 in projects and c -> p1 in projects 
  		and s -> p2 in projects and c -> p2 in projects) => (p2 = p1))",1
"all s: Student | ((all c : Course, p1 : Project, p2 : Project | (s -> p1 in projects and c -> p1 in projects 
  		and s -> p2 in projects and c -> p2 in projects)) => (p2 = p1))",1
"all s: Student | ((all c : Course, p1 : Project, p2 : Project | s -> p1 in projects and c -> p1 in projects 
  		s -> p2 in projects and c -> p2 in projects
  
  ) => (p2 == p1))",1
"all s:Students | some pr1, pr2: Project| one c: Course | s->pr1 in Person <: projects and s->pr2 in Person <: projects and pr1->c in projects and pr2->c in projects implies pr1 = pr2",1
"some p1, p2: Project, c1,c2: Course| all s: Student| ((p1+p2) in s.projects and (p1 in c1.projects) and (p2 in c2.projects)) implies c1 != c2
  
  
  s.projects in s.enrolled.projects",1
"all s1 : Student | all p1,p2 : Project | all c1 : Course
  (
    (s1->p1 in projects) and (c1->p2 in projects)
  	and (s1->p1 in projects) and (c1->p2 in projects)
  )
  	implies p1=p2",1
"some p1, p2: Project, c1,c2: Course| all stu: Student| ((p1+p2) in stu.projects and (p1 in c1.projects) and (p2 in c2.projects)) implies c1 != c2
  
  
  s.projects in s.enrolled.projects",1
"all s : Student, c : Course, p1, p2 : Project | s->c in enrolled and 
  s->p1 in Person<:projects and 
  c->p1 in Course<:projects and 
  s->p2 in Person<:projects and 
  c->p2 in Course<:projects implies p1 = p2",1
"some p1, p2: Project, 
         c1,c2: Course| 
    all s: Student| (p1+p2) in s.projects and 
  					p1 in c1.projects and p2 in c2.projects
  					implies c1 != c2
  
  
  s.projects in s.enrolled.projects",2
"some p1, p2: Project, 
         c1,c2: course| 
    all s: Student| (p1+p2) in s.projects and 
  					p1 in c1.projects and p2 in c2.projects
  					implies c1 != c2
  
  
  s.projects in s.enrolled.projects",1
"some p1, p2: Projects, 
         c1,c2: course| 
    all s: Student| (p1+p2) in s.projects and 
  					p1 in c1.projects and p2 in c2.projects
  					implies c1 != c2
  
  
  s.projects in s.enrolled.projects",1
"all s: Student, c: Course, p1: Project, P2: Project | c in s.(Person <: enrolled) and p1 in s.(Person <: projects) and p2 in s.(Person <: projects) implies (p1 in c.(Course <: projects) and p2 not in c.(Course <: projects)) or (p2 in c.(Course <: projects) and p1 not in c.(Course <: projects))",1
