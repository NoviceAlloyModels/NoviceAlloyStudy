"all e:Event |",2
"all e: Event |",9
"s.trans in State",1
"all e : Event | some State(trans.e)",2
"all e:Event| e in (State.Trans).State",1
"all e : Event | some s.trans.State <: e",1
"all e:Event| some s.State | s in trans.e",1
"all e: Event, some s: State | some s.trans[e]",1
"all e: Event, some s: State | e in getEventsOfState[s]",2
"all e : Event | some s1 : State | e1 in s1.trans.State",1
"all e: Event | some s: State | e in getEventsOfState[s]",1
"all e: Event | some State.trans[e]
}

/*
The LTS is reversible, ie, from a reacheable state it is always possible 
to return to an initial state.
*/
fun edge : State -> State {
  s1, s2: State | some s1.trans.s2",1
