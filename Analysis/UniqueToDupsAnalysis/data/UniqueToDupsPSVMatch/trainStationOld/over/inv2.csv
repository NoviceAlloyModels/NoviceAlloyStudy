"eventually Signal = Green",5
"eventually Green = Signal",3
"eventually Signal in Green",5
"eventually no(Signal-Green)",2
"always(eventually Green = Signal)",1
"always(eventually Signal = Green)",1
"eventually Signal in (Signal&Green)",2
"eventually historically Green = Signal",2
"eventually historically Signal in Green",1
"historically eventually Signal in Green",1
"all g : Signal | eventually g = Green",1
"all s : Signal | eventually s=Green",1
"eventually all s:Signal | s in Green",10
"eventually(all t:Track | t.signal = Green)",1
"all g : Track.signal | eventually g = Green",1
"all g : Signal |always( eventually g = Green )",1
"always all s: Signal | eventually s = Green",2
"always ( all g : Signal | eventually g=Green)",1
"always all s: Signal | eventually s in Green",6
"always eventually all s: Signal | s in Green",1
"always all s: Signal | eventually Signal = Green",1
"always ( all s : Track.signal | eventually s=Green)",1
"always(all t:Track | eventually t.signal = Green)",1
"always all s: Signal | eventually always s in Green",1
"eventually(all t:Track | eventually t.signal = Green)",1
"all g : Track.signal | no (g & Green) implies eventually g = Green",1
