"some Trash",1
"after some File",1
"eventually no File",3
"eventually no Trash",7
"always File in Trash",1
"eventually no File'",1
"eventually some Trash",24
"eventually File in Trash",3
"eventually File' in File",2
"no Trash until some Trash",1
"eventually File' not in File",2
"eventually (Trash' in Trash)",1
"some File until some Trash",2
"eventually (no File - Trash)",1
"eventually (no Trash + File)",1
"eventually always some Trash",1
"always (eventually some Trash)",1
"eventually some File & Trash",5
"some Trash releases some File",1
"eventually #File < #File'",1
"some File releases some Trash",1
"eventually File.link in Trash",1
"eventually Trash.link in Trash",1
"eventually (Trash + File = Trash)",1
"eventually some File-Protected",1
"eventually File' = File-Trash",3
"Trash' = Trash + (File' - File)",1
"no Trash and eventually some Trash",4
"some Trash implies eventually no Trash",1
"some Trash eventually no Trash",2
"some File implies eventually some Trash",2
"some File eventually some Trash",2
"some t: Trash | once t in File",1
"some File eventually File in Trash",2
"some t: Trash | once t in Trash",1
"some f: File | after f in Trash",1
"some f: File | after f not in Trash",1
"no Trash and no Trash until some Trash",1
"eventually some File
after no File",2
"eventually some ((File-Protected) & Trash)",1
"eventually all f:File | f not in File",2
"all f:File | eventually f not in File",3
"some f:File | eventually some Trash",1
"eventually some f:File | f in Trash",11
"some f:File | eventually f in Trash",18
"all f : Trash | eventually f not in File",2
"some f : File | eventually f not  in Trash",1
"eventually (Trash' = Trash + (File' - File))",1
"all f:File | eventually no f & File",1
"eventually (File in File' and File != File')",2
"eventually ( some f:File | f' in Trash)",1
"some f:Trash | eventually no Trash & f",2
"always all f : File | File' = File - f",1
"eventually (
some f: Trash | f not in Trash'
)",1
"some f : File | eventually some File - f",1
"eventually ( some f:File | f' in Trash')",4
"some File and some Trash and eventually no Trash",1
"all f : File | f in File until f not in File",1
"all f : Trash | f in File until f not in File",1
"always all f : File | eventually f in Trash",1
"always all f: File | eventually f not in File",2
"eventually (some f:File | after f in Trash)",2
"all f : File | always eventually f not in File",1
"some f: File | f not in Trash until f in Trash",1
"all f : Trash | always eventually f not in File",2
"some f : File | eventually always f in Trash",1
"no File & Trash and eventually some File & Trash",1
"eventually (all t: File | File' = File - t)",1
"always all f : Trash | eventually f not in File",1
"always some f : File | eventually f in Trash",4
"always (all f:File | eventually no f&File)",1
"eventually (all t: Trash | Trash' = Trash - t)",1
"all f:File | eventually some (f.link & Trash)",1
"some f:File | eventually Trash' = Trash + f",1
"eventually (some f : Trash | Trash' = Trash - f)",1
"some f : File | eventually (f+f.link) in Trash",1
"eventually some Trash
some File until some Trash",1
"some f : File | eventually f+link.f in Trash",2
"eventually (some f : File-Protected | f in Trash)",2
"some f:File-Protected | eventually f in Trash",1
"some f: File | f not in Trash implies after f in Trash",1
"always all f : Trash | f in File until f not in File",1
"some f: File | no Trash and eventually f in Trash",2
"no Trash and some f: File | eventually (f in Trash)",1
"all f : Trash | f in File until always f not in File",1
"all f : File | f in Trash => eventually f not in File",1
"all f : File | f not in Trash and eventually f in Trash",1
"always all f : File | eventually File' = File - f",1
"some f:Trash-Protected | eventually no Trash & f",2
"some f: File | f not in Trash and eventually f in Trash",3
"always some f : Trash | f in Trash releases f in File",1
"always eventually #File' < #File || #File' = #File",1
"eventually some f:File | f in File-Trash-Protected",1
"always (some f: File | f not in Trash implies after f in Trash)",1
"eventually some f:File | f not in Trash and f not in Protected",1
"some f : File | eventually f in Trash and link.f in Trash",1
"some f:File | eventually f in Trash and f.link in Trash",1
"all f : File | always f in Trash => eventually f not in File",1
"eventually (some f: File | f not in Trash implies after f in Trash)",1
"some f:File | eventually f in Trash and f.~link in Trash",2
"some f : File | f in Trash implies eventually File' = File - f",1
"always (some f:Trash-Protected | eventually no Trash & f)",1
"some f: File | eventually always f not in File since f in Trash",1
"all f : File | always eventually f not in File + Protected + Trash",1
"some f : File - Protected | f not in Trash and eventually f in Trash",1
"all f : Trash | always eventually f not in File + Protected + Trash",1
