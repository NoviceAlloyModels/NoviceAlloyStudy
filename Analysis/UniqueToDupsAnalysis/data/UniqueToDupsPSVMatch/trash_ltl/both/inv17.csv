"always Trash not in File'",3
"always File & Trash not in File'",1
"always (Trash-Trash' not in File')",1
"all f : Trash | File' = File - f",1
"always File & Trash not in File' & Trash'",1
"always (all f : File | after f in Trash)",2
"all f : File | f in Trash implies f not in File",1
"all f : File | f not in File since f in Trash",1
"always (some f:Trash | after no File&f)",1
"always (some f:Trash | after no Trash&f)",2
"all f:File | f in Trash implies after f not in File'",1
"always all f : File | f not in File since f in Trash",1
"always some f:File | f in Trash implies f not in File'",1
"all f: File |(always f' not in File since f in Trash)",1
"all f: File | once f in Trash releases f' in File",1
"all f: File | once f in Trash releases f' not in File",1
"all f: File | always f in Trash releases f' in File",1
"always all f:File | f in Trash implies after f in Trash",1
"all f: File | always f in Trash releases f' not in File",1
"all f: File | once f in Trash implies always f' not in File",1
"all f: File |always ( f in Trash implies File' = File - f)",1
"always (all f:File | f in Trash implies after f not in File')",1
"all f: File | always (File' = File - f since f in Trash)",1
"all f: File | once f in Trash releases always f' in File",1
"all f: File | once f in Trash implies always after f not in File",1
"all f: File |always  (once f in Trash releases f' not in File)",1
"all f: File | once f in Trash releases always f' not in File",1
"all f: File | (File' = File - f since eventually f in Trash)",1
"all f: File |(always f' not in File since eventually f in Trash)",1
"all f: File |eventually (always f' not in File since f in Trash)",1
"all f: File |eventually (once f in Trash implies always f not in File)",1
"all f: File |always (eventually f in Trash) implies after f not in File",1
"all f: File |eventually (once f in Trash implies File' = File - f)",1
"all f: File |always (eventually f in Trash releases f' in File)",1
"all f: File |always (eventually f in Trash releases f' not in File)",1
"all f: File |always (eventually f in Trash) implies File' = File-f",2
"all f: File |always ((eventually f in Trash) implies File' = File - f)",2
"all f: File |always (eventually f in Trash implies always f' not in File)",1
"all f: File |(always File' = File - f since eventually f in Trash)",1
"all f: File |always (File' = File - f since eventually f in Trash)",2
"all f: File |always (eventually f in Trash) implies after File = File-f",1
"all f: File | always eventually f in Trash implies always after f not in File",2
"all f: File |always ((eventually f in Trash) triggered File' = File - f)",1
"all f: File |always (eventually f in Trash) implies after File' = File-f",1
"all f: File |always ((eventually f in Trash) implies always File' = File - f)",1
"always all f:File | f not in Trash and eventually f in Trash implies f not in File",1
"always all f : File | f not in File since f in Trash and eventually f in Trash",1
"always all f:File | f not in Trash and eventually f in Trash implies after f not in File''",1
"all f: File |once f in Trash implies always f' not in File and f' not in Trash and f' not in Protected",1
"all f: File |always (once f in Trash ) implies always f' not in File and f' not in Trash and f' not in Protected",1
"all f: File |always (eventually f in Trash ) implies always f' not in File and f' not in Trash and f' not in Protected",1
"all f: File |always (eventually f in Trash) implies always after f not in File and f' not in Trash and f' not in Protected",1
