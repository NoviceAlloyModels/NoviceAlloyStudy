"eventually File after no File",2
"eventually no (File && File')",1
"eventually some File in Trash",2
"some f:Trash | eventually File",4
"some f:File | eventually File-f",1
"some f:Trash | eventually File-f",1
"eventually some File not in File",1
"after no (eventually some Trash)",1
"eventually some Trash not in File",2
"eventually some (no Trash + File)",1
"some f: File | after no f in File",1
"eventually (some f:File | File'-f)",1
"eventually ( some File' in Trash')",1
"eventually some (Trash and no File)",1
"eventually some (Trash not in File)",1
"some f: File | f eventually no File",1
"some f:File | eventually no f in File",1
"all f:File | eventually (not f & File)",1
"some f: File | eventually no f in File",2
"some f : File | eventually no f in File",1
"all f:File|eventually f after f in Trash",2
"eventually some File
after some (no File)",1
"some f: File | eventually (always no f in File)",1
"some f: File | eventually (always no f in Trash)",1
"some f : File | eventually some File' = File - f",1
"some f: File | always no f in File since eventually f in Trash",1
"some f: File | eventually no f in Trash and always no f in File",1
"some f: File | always no f in File since eventually no f in Trash",1
"some f: File | eventually no f in Trash implies always no f in File",1
"some f: File | eventually (always no f in Trash implies no f in File)",1
"some f: File | eventually (always no f in Trash implies always no f in File)",1
