"always Trash",1
"all f:Trash |  f",1
"always always Trash",1
"all f:Trash | always f",1
"eventually always Trash",1
"always some Trash in Trash'",1
"all f: Trash | always Trash",1
"some Trash and always Trash",1
"always (some Trash in Trash')",1
"some Trash after always Trash",1
"let x = File & Trash | always x",1
"some File in Trash always Trash",1
"always File in Trash & File' in Trash",1
"some File in Trash since File in Trash",1
"(always Trash) releases (File in Trash)",1
"all f: eventually Trash | always f in Trash",1
"(always Trash) releases some (File in Trash)",1
"always (some f : File in Trash | f in Trash)",1
"some File in Trash implies always File in Trash",1
"all f:File | f in Trash implies (always Trash[f])",1
"all f: File | some f in Trash implies always f in Trash",1
"always some Trash implies (always some Trash in Trash')",1
"all f: File | some f in Trash implies always (f in Trash)",1
