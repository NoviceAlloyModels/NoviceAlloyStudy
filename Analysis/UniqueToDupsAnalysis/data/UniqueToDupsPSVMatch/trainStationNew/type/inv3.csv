"Exit.Track",1
"Exit.succs",1
"none Exit.succs",1
"no succs in Exit",1
"succs not in Exit",1
"no Exit.succs.Track",1
"all e:Exit | succs.e",1
"all x:Exit | succs.x",1
"Exit implies no succs",1
"Exit & succs.none",1
"no succs.Track = Exit",1
"not some succs in Exit",1
"Exit => no Track.succs",1
"some (Track-Exit).Exit",1
"no Track.succs in Exit",1
"all t: Track | t.Entry",1
"no Exit in succs.Track",1
"Exit = none Track.succs",2
"none Track.succs in Exit",1
"all ex:Exit | ex.succs={}",1
"all e : Exit | not e.succs",3
"all t : Exit | not t.succs",1
"all x: Exit | none x.succs",1
"all e:Exit | not e.^(succs)",1
"all e : Exit | none e.succs",6
"all e:Exit | e not in succs",1
"all e : Exit | none succs.e",2
"all exit : univ | exit.succs",1
"all e1:Exit | e1 not in succs",1
"all e : Exit | none (e.succs)",1
"all et : Exit | none et.succs",1
"all y: Track | no Exit.succs.y",1
"no Exit.succs and Exit.signals",1
"all ex:Exit | no Track.succs[ex]",1
"all e:Exit | no Track in e.succs",1
"all t: Track | no t.succs in Exit",2
"all e:Exit | no Track in e->succs",1
"no (Track-Exit) & (no Track.succs)",1
"all t : Track | no t.succs in Exit",1
"all x:Exit, y:Track | no x.succs.y",1
"all t : Track in Exit | no t.succs",1
"all ex:Exit | no Track.succs[ex+1]",1
"all t : Track - Exit | set succs.t",1
"all t:Track | succs.t iff t in Exit",1
"all t: Track | none t.succs in Exit",1
"all t:Track| t in Exit iff t.^succs",1
"all x:Track | no x.succs => x & Exit",1
"all t : Track | #t.succs && t in Exit",1
"all x:Track | no x.succs => x is Exit",1
"all t : Track | no t.succs not in Exit",1
"all t:Track | t in Exit <=> t.^(succs)",2
"all t: Track | t is Exit => no t.succs",1
"all t:Track | t in Exit implies t.succs",1
"all t: Track | t.succs implies Exit in t",1
"all t : Track | not t.succs implies Exit",1
"all e : Exit | no e.succs and e in succs",1
"all t:Track | t in Exit implies t.^succs",1
"all t,a:Track| t in Exit implies t.succs",1
"all t: Track | t in Exit implies t.succs",1
"all t:Track| t in Exit iff not t.^(succs)",1
"all e:Exit, t:Track | no t not in e.succs",1
"all t: Track | t in Exit iff t.succs none",1
"all t: Track | t in Exit iff t.succs = {}",1
"all t: Track | t in Exit iff none t.succs",1
"all t : Exit | t implies t not in t.(succ)",1
"all t : Track | t in Exit iff none t.succs",1
"all t : Track | not t.succs implies t=Exit",1
"all t : Track | t in Exit iff none succs.t",1
"all e : Track | e in Exit iff none e.succs",1
"all t : Track | t.succs=0 implies t & Exit",1
"all t:Track | t in Exit implies (t.^succs)",1
"all t : Track | no t.succs in  (t in Exit)",1
"all t : Track | #t.succs=0 implies t & Exit",3
"all t : Track | no t.succs implies t & Exit",2
"all t:Track | (t& Exit) implies no(t.succs)",1
"all e:Exit | all t:Track | no e->t in succs",1
"all t: Track | (t & Exit) implies no t.succs",1
"all t : Track | t in succs implies t in Exit",1
"all t : Track | not t.succs implies t = Exit",1
"all t: Track | Exit implies t not in t.succs",1
"all t:Track | t in Exit implies none t.succs",1
"all e:Exit | all t:Track | no (e->t in succs)",1
"all t : Track | not t.succs implies t in Exit",2
"all t: Track | t.succs none implies t in Exit",1
"all t: Track | none t.succs implies t in Exit",2
"all t : Track | none t.succs implies t in Exit",2
"all t : Track | t in Exit implies none t.succs",2
"all t:Track | succs.t in signals iff t in Exit",1
"all t,t1 : Track | not succs implies t in Exit",1
"all x:Track-(Junction + Entry)| no x.succs.Track",1
"all t : Track | t not in succs implies t in Exit",1
"all exit : univ | exit in Exit implies none ^exit",1
"all x,y:Track| x in Exit implies no x->y in succs",1
"all t,t2: Track | t2 not in succs implies t in Exit",2
"all x,y:Track| x in Exit implies no (x->y in succs)",1
"all track : Track | no track.succs -> track in Exit",1
"all t,t2:Track | Exit in t implies no t in t2.^succs",1
"all exit : univ | exit in Exit implies none in succs",1
"all t1,t2:Track | t2 in t1.succs implies (t1 & Exit)",1
"all exit : univ | exit in Exit implies exit.*(succs)",1
"all exit : univ | exit in Exit implies exit.^(succs)",1
"all t,a:Track| t in Exit implies t.succs not in succs",1
"all track : Track | none track.succs => track in Exit",1
"all track : Track | none succs.track => track in Exit",1
"all exit : univ | exit in Exit implies none exit.succs",2
"all e:Track,z:Track-e| e not in succs implies e in Exit",1
"all exit : univ | exit in Exit implies none ^exit.succs",1
"all t : Track | t in Exit implies no t not in Track.succs",1
"all exit : univ | exit in Exit implies none exit.^(succs)",1
"all track : univ | none track.succs implies track in Exit",1
"all exit : univ | exit in Exit implies none exit.*(succs)",2
"all track : univ | track in Track implies none track.succs",1
"all e : Exit | no ((e.succs) and (e&Junction) and (e&Entry))",1
"all t : Track | some t&Exit implies no (t.succs and t.signals)",1
"Exit = Track-(all t : Track | some t.succs)





no Exit.succs",1
"all exit : univ | exit in Exit implies none Track in exit.succs",1
"all t1,t2:Track | t1->t2 not in succs implies t1 and t2 not in Exit",1
"all t: Track| #t.succs=0 implies t in Exit
all t: Exit | no t in Entry",1
"all t:Track | t not in t.succs^
all t:Track | no t.succs implies t in Exit",1
"all track : univ | track in Track and none track.succs implies track in Exit",3
"all exit : Exit | all entry : Entry | all junction : Junction | entry and junction not in exit.succs",1
"all t1,t2:Track | t2 in t1.succs implies Exit not in t1
all t1:Track | (Exit & t1) implies no t1.succs",1
"all t1,t2:Track | t2 in t1.succs implies Exit not in t1
all t1:Track | (Exit & t1) implies (Exit & t1)",1
"all t1,t2:Track | t2 in t1.succs implies no (t1 & Exit)
all t1:Track | some t2:Track | (t1 & Exit) implies t2 in t1.succs",1
"all t1,t2:Track | t2 in t1.succs implies no (t1 & Exit)
all t1:Track | (t1 & Exit) implies (some t2:Track | t2 in t1.succs)",1
"all exit, entry, junction : univ | exit in Exit and entry in Entry and junction in Junction implies (entry and junction) not in exit.succs",1
