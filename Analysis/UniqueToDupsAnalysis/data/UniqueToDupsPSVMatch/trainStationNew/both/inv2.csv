"one Track",1
"lone signals",1
"one Track.signals",1
"one signals.Signal",3
"lone signals.Signal",1
"~signals . signals in iden",1
"one Signal & Track.signals",1
"signals in Track -> one Signal",2
"all s:Signal | one Track",3
"all t : Track | lone signals",1
"~signals in Signal one -> lone Track",1
"all t:Track|one signals.t",1
"all t:Track|one t.signals",1
"all t : Track | lone t.signals",2
"one t: Track | some t.signals",1
"one t : Track | t.signals in Track",1
"all s:Signal | one Track.signals",1
"some x: Signal | x in Track.signals",1
"one t : Track | t.signals in Track.signals",1
"all t,u : Track | no (t.signals & u.signals)",1
"all t1, t2: Track | no (t1.succs & t2.succs)",1
"all t : Track, s : Signal | lone t.signals",1
"all x: Signal, y : Track | x in y.signals",1
"all s: Signal, t : Track | s in t.signals",3
"all s : Signal | s in Track.(^succs).signals",1
"all s:Signal, t:Track| t->s in signals",1
"all t1,t2: Track | no (t1.signals & t2.signals)",2
"one t : Track | all s : Signal | s in t.signals",2
"all s: Signal| some t: Track| one t.signals",1
"all t : Track | one s : Signal | s in t.signals",1
"all s:Signal | all t:Track | t->s in signals",1
"all s:Signal | all t:Track | s->t in signals",1
"some s:Signal|one t:Track| t->s in signals",1
"one t1:Track | all s:Signal | t1->s in signals",2
"all t1, t2 : Track | no t1.signals & t2.signals and t1 != t2",1
"all s:Signal, t1:Track | s not in Track.signals - t1.signals",2
"all s:Signal, t1,t2:Track | s in t1.signals => s not in t2.signals",2
"all s : Signal, t : Track | s in t.signals implies s not in t.succs.signals",1
"all s : Signal, t : Track | s in t.signals implies s not in t.^(succs).signals",1
"all s : Signal, t : Track | s in t.signals implies s not in t.*(succs).signals",1
"all s:Signal, t1:Track | s in t1.signals and s not in Track.signals - t1",1
"all s:Signal, t1:Track | s in t1.signals => s not in Track.signals - t1",1
"all s : Signal, t1, t2 : Track | s in t1.signals and s in t2.signals and t1 = t2",1
"all s, s1: Signal, t: Track | t->s in signals and t->s1 in signals implies s = s1",2
"all t1 : Track, t2: Track, s : Signal | (s in t1.signals) implies (s not in t2.signals)",1
"all s : Signal, t1, t2 : Track | t1->s in signals and t2->s in signals and t1 = t2",1
"all s1,s2 : Signal, t : Track | t -> s1 in signals and t -> s2 in signals implies s1=s2",1
"all s:Signal, t1:Track | s in t1.signals and s not in Track.signals - t1.signals",1
"all x : Signal | all t,m : Track | x in t.signals and x in m.signals implies t!=m",1
"all x : Signal | all t,m : Track | (x in t.signals and x in m.signals) implies x!=x",1
"all x,y : Signal | all t,m : Track | x in t.signals and y in m.signals implies y!=x",1
"all t, t1: Track | some s: Signal | s in t.signals && s in t1.signals => t=t1",1
"all s : Signal | all t1, t2 : Track | s in t1.signals and s in t2.signals and t1 = t2",1
"all t1,t2:Track | some s:Signal | t1->s in signals and t2->s in signals implies t1=t2",1
"all t1,t2: Track | no ((t1.signals + t1.^succs.signals) & (t2.signals + t2.^succs.signals))",1
"all t1,t2: Track | lone ((t1.signals + t1.^succs.signals) & (t2.signals + t2.^succs.signals))",1
"all t1 : Track | all t2: Track | all s : Signal | (s in t1.signals) implies (s not in t2.signals)",1
"all t1, t2: Track,
s: Signal |
((s in t1.(^succs.signals)) and (s in t2.(^succs.signals))) implies t1 = t2",1
