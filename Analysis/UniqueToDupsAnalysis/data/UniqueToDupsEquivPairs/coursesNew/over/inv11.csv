Pairs,6
,,"no grades",1
,,"no grades.Grade",1
,,"Course.grades.Grade in Student.enrolled",1
,,"all c: Course | all grade: Person.(c.grades) | no univ",1
,,"all c:Course,p:Person,g:Grade | p->g in c.grades => g in p.enrolled",1
,,"all c : Course | all g: Grade, p: Person | p->g in c.grades implies c in c.enrolled",1

Pairs,3
,,"all p: Person, c: Course | some c.grades => c in p.enrolled",3

Pairs,1
,,"all p: Person, c: Course | some c.grades <=> c in p.enrolled",1

Pairs,1
,,"all p: Person, c: Course | (c.grades[p] in Grade) => (c in p.enrolled)",1

Pairs,7
,,"all c:Course, p:Person, g:Grade | p->g in c.grades implies p in Student and c in p.enrolled",1
,,"all c: Course, p:Person, g: Grade | p->g in c.grades implies (c in p.enrolled and p in Student)",1
,,"all c:Course, p:Person, g:Grade | c->p->g in grades implies p in Student and p in enrolled.c",2
,,"all p:Person, c:Course, g:Grade | c->p->g in grades implies p in Student and p in enrolled.c",1
,,"all u:Person, c:Course, g:Grade| c->u->g in grades implies u in Student and u->c in enrolled",1
,,"all p:Person, g:Grade, c:Course| c->p->g in grades implies p in Student and p->c in enrolled",1

Pairs,1
,,"all st :Student, c:st.enrolled, g : Grade | st->g in c.grades
    all c: Course | (all p: Person, g: Grade | p->g in c.grades implies c in p.enrolled)",1

