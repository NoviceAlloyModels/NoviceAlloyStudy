Pairs,52
,,"State.(State.trans) in Event",1
,,"State.~(State.trans) in Event",2
,,"State.trans.State = State.trans.State",1
,,"all x : State | (x.trans.x) in Event",1
,,"all s : State | s.trans.s in Event",1
,,"all x : State | (x.trans).Event in Event",1
,,"all x : State | State.(x.trans) in Event",2
,,"all s:State | State.(s.trans) in Event",1
,,"all s : State | s.trans.State in Event",1
,,"all x : State | x.trans in State.trans",6
,,"all x : State | (x.trans.State) in Event",1
,,"all x : State | Event.(trans.x) in Event",2
,,"all s : State | Event = s.(State->Event)",1
,,"all x : State, e : Event | some x->e",1
,,"all s : State | s.trans in State.trans",1
,,"all s : State | Event in s.(State->Event)",1
,,"all x, y : State | x.trans in State.trans",1
,,"all s:State | Event.~(s.trans) in Event",1
,,"all s:State | State.~(s.trans) in Event",4
,,"all s:State | s.~(State.trans) in Event",1
,,"all x : State, e : Event | some x->Event",1
,,"all s: State | Event <: s.trans = s.trans",1
,,"all x : State, e : Event | some x->e->State",3
,,"all x : State, e : Event | some State->e->State",1
,,"all x, y : State | some x->Event implies some y->Event",4
,,"all s : State | Event.(s.trans) in Event.(State.trans)",1
,,"all s1,s2:State | State.(s1.trans) = State.(s2.trans)",1
,,"all s1,s2:State | s1.trans.Event = s2.trans.Event",2
,,"all x : State, e : Event | some State->Event->State",1
,,"all x, y : State, e : Event | some x->e implies some y->e",2
,,"all s : State, e : Event | e.(s.trans) in Event.(State.trans)",1
,,"all x, y : State | all e : Event | some x->e->y implies some y->e->y",1
,,"all e:Event, s1,s2:State | e in (Init.trans)[s1] implies e in (Init.trans)[s2]",1
,,"all disj s1, s2: State | all e: Event |some n: State| e->n in s1.trans and e->n in s2.trans implies e=e",1

Pairs,5
,,"all s,s1:State,e:Event|some s2,s3:State | s->e->s2 in trans implies s1->e->s2 in trans",1
,,"all s,s1:State,e:Event|some s2,s3:State | s->e->s2 in trans implies s1->e->s3 in trans",3
,,"all disj s1, s2: State | all e: Event |some n: State| e->n in s1.trans implies e->n in s2.trans",1

