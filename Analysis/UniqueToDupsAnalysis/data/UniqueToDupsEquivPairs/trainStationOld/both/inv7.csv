Pairs,1
,,"eventually all t : Train | no t.pos",1

Pairs,1
,,"eventually all t : Train | t.pos = Exit",1

Pairs,1
,,"always all t : Train | eventually t.pos != t.pos'",1

Pairs,2
,,"all t : Train | always (eventually t.pos not in Entry)",1
,,"always all t : Train | t.pos in Entry => eventually t.pos not in Entry",1

Pairs,1
,,"all t : Train | always (eventually t.pos not in Entry + Exit)",1

Pairs,1
,,"eventually all t : Train | (t.pos = Exit) implies (no t.pos')",1

Pairs,1
,,"all t : Train | one t.pos implies (eventually always no t.pos')",1

Pairs,2
,,"all t:Train | some (t.pos & Entry ) implies eventually some (t.pos & Exit)",2

Pairs,1
,,"all t:Train | t.pos in (Entry + Exit) implies eventually t.pos not in (Entry + Exit)",1

Pairs,2
,,"always (all t:Train | some (t.pos & Entry ) implies eventually some (t.pos & Exit) )",2

Pairs,1
,,"always (all t:Train | some (t.pos & Entry ) implies  always (eventually some (t.pos & Exit) ))",1

