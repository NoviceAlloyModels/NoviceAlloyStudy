NA H: THEME UPDATE
inv1 S: Workers = Human + Robot
inv1 C: Worker = Human + Robot
inv2 U: all w: Workstation | some workers	all w: Worker | (one work : Workstation | w in work.workers)
inv3 E: 
inv2 C: all w: Workstation | some w.workers	all w: Worker | (one work : Workstation | w in work.workers)
inv3 C: all c: Component | one c.workstation
inv3 C: all c: Component | one c.workstation
inv4 C: all c: Component | some c.parts	all c: Material | no c.parts
inv5 U: all w: Workstation | no (w.workers & Human & Robot)
inv6 E: 
inv5 C: all w: Workstation | no (w.workers & Robot) or no (w.workers & Human)
inv6 U: all c: Component | not c in c.parts
inv6 O: all c: Component | not c in c.*parts
inv6 C: all c: Component | not c in c.^parts
inv7 B: all c: Component | Dangerous in c.^parts implies Dangerous in c
inv7 B: all c: Component | Dangerous in c.*parts implies Dangerous in c
inv7 B: all c: Component | Dangerous in c.^parts implies Dangerous in c
inv7 B: all c: Dangerous | Dangerous in c.^parts
inv7 B: all c: Component | Dangerous in c.^parts implies some c & Dangerous
inv7 B: all c: Component | Dangerous in c.^parts implies (some c & Dangerous)
inv8 O: all c: Component & Dangerous | all x : Workstation | no (x.workers & Human)
inv8 C: all c: Component & Dangerous | all x : c.workstation | no (x.workers & Human)
inv7 B: all c: Component | Dangerous in c.^parts implies (some c & Dangerous)
inv7 T: all c: Component | Dangerous in c.^parts implies (c & Dangerous)
inv7 B: all c: Component | Dangerous in c.^parts implies some (c & Dangerous)
inv7 B: all c: Component | Dangerous in c.^parts implies no (c & Dangerous)
inv7 B: all c: Component | Dangerous in c.^parts implies some (c & Dangerous & Component)
NA H: THEME UPDATE
inv1 S: all w in Worker | w in Human or w in Robot
inv1 C: all w : Worker | w in Human or w in Robot
inv2 C: all w: Workstation | some w.workers	all w: Worker | (one work : Workstation | w in work.workers)
inv2 S: all w: Workstation | some wo : Workers | wo in w.workers	all w: Worker | (one work : Workstation | w in work.workers)
inv2 C: all w: Workstation | some wo : Worker | wo in w.workers	all w: Worker | (one work : Workstation | w in work.workers)
inv3 C: all c: Component | #c.workstation = 1
inv4 S: all c: Component | some p : Parts | p in c.parts	all c: Material | no c.parts
inv4 C: all c: Component | some p : Product | p in c.parts	all c: Material | no c.parts
inv5 O: all w: Workstation | all wo : w.workers | wo in Human
inv5 T: all w: Workstation | #(w.workers in Human) = 0 or #(w.workers in Robot) = 0
inv5 T: all w: Workstation | #w.workers in Human = 0 or #w.workers in Robot = 0
inv5 T: all w: Workstation | #(w.workers in Human) = 0 or #(w.workers in Robot) = 0
inv5 T: all w: Workstation | (#w.workers in Human) = 0 or (#w.workers in Robot) = 0
inv5 S: all w: Workstation | (#w.workers in Human) == 0 or (#w.workers in Robot) == 0
inv5 T: all w: Workstation | (#w.workers in Human) =0 or (#w.workers in Robot) = 0
inv5 C: all w: Workstation | no (w.workers & Robot) or no (w.workers & Human)
inv6 C: all c: Component | not c in c.^parts
inv6 U: all c: Component | not c in c.parts
inv6 C: all c: Component | not c in c.^parts
inv7 T: all c: Component | some c.^parts in Dangerous => c in Dangerous
inv7 S: all c: Component | some c.^parts: Dangerous | c in Dangerous
inv7 S: all c: Component | c.^parts: Dangerous => c in Dangerous
inv7 S: all c: Component | c.^parts: Dangerous implies c in Dangerous
inv7 B: all c: Component | c.^parts in Dangerous => c in Dangerous
inv7 B: all c: Component | Dangerous in c.^parts implies some (c & Dangerous & Component)
inv8 C: all c: Component| all x : c.workstation | c in Dangerous => no (x.workers & Human)

