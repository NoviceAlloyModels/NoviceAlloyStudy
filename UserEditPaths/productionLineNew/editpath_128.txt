NA H: THEME UPDATE
inv2 S: all ws in Workstation | #w.workers>0	all w,x : Workstation | w != x implies no (w.workers & x.workers)
inv2 S: all ws in Workstation | #w.workers>0	all w,x : Workstation | w != x implies no (w.workers & x.workers)
inv2 S: all ws in Workstation | #w.workers>0	all w,x : Workstation | w != x implies no (w.workers & x.workers)
inv8 T: all c: Component, h: Human | c.Dangerous and h in c.workstation =>	not h.Worker
inv1 C: all w : Worker | w in Human+Robot
inv2 S: all ws in Workstation | #w.workers>0	all w,x : Workstation | w != x implies no (w.workers & x.workers)
inv2 S: all ws in Workstation | #w.workers>0	all w: Worker | one w.workstation
inv2 S: all ws in Workstation | #ws.workers>0	all w: Worker | one w.workstation
inv2 S: all s in Workstation | #s.workers>0	all w: Worker | one w.workstation
inv2 B: all w: Worker | one w.workstation
inv2 S: all s in Workstation | #s.workers>0
inv2 U: all s : Workstation | #s.workers>0
inv2 O: all s : Workstation | #s.workers>0	all w: Worker | one w.workstation
inv2 U: all s : Workstation | #s.workers>0	all w,x : Workstation | w != x implies no (w.workers & x.workers)
inv2 C: workers in Workstation one -> some Worker	all w,x : Workstation | w != x implies no (w.workers & x.workers)
inv2 U: all s : Workstation | some s.workers	all w,x : Workstation | w != x implies no (w.workers & x.workers)
inv2 U: all s : Workstation | #s.workers>=0	all w,x : Workstation | w != x implies no (w.workers & x.workers)
inv2 C: workers in Workstation one -> some Worker	all w,x : Workstation | w != x implies no (w.workers & x.workers)
inv3 C: all c: Component | one c.workstation
inv4 B: all c : Component | #c.parts>0	all m :Material | #m.parts>0
inv4 B: all c : Component | (#c.parts)>0	all m :Material | (#m.parts)>0
inv4 C: all c : Component | (#c.parts)>0	all m :Material | (#m.parts)=0
inv5 S: all w in Workstation | (w.workers in Robot) implies
inv5 S: all w in Workstation | (w.workers in Robot) implies	(w.workers not in Human)
inv5 B: all w : Workstation | (w.workers in Robot) implies	(w.workers not in Human)
inv5 T: all w : Workstation | no ( w.workers.Human & w.workers.Robot)
inv5 O: all w : Workstation | w.workers in Robot or w.workers in Human
inv5 O: all w : Workstation | w.workers in Robot or w.workers in Human
inv6 U: all c: Component | c not in c.parts
inv7 C: all c : Component | all p : c.parts | (p in Dangerous) implies (c in Dangerous )
inv6 U: all c: Component | c not in c.parts
inv8 T: all c: Component, h: Human | c.Dangerous and h in c.workstation =>	not h.Worker
inv8 T: all c: Component | c.Dangerous implies  c.workstation.worker not in Human
inv8 S: all c: Component | c in Dangerous implies  c.workstation.worker not in Human
inv8 B: all c: Component | c in Dangerous implies  c.workstation.workers not in Human
NA H: THEME UPDATE

