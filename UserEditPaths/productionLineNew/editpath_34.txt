NA H: THEME UPDATE
inv1 C: all x : Worker | x in Human or x in Robot
inv2 U: all x : Workstation | #(x.workers)>0	all x,y : Worker | all z,w : Workstation | (x in z.workers and y in w.workers and z!=w) implies x!=y
inv2 U: all x : Workstation | #(x.workers)>0	all x : Worker | all z,w : Workstation | (x in z.workers and z!=w) implies x not in w.workers
inv2 S: all x : Workstation | #(x.workers)>0		all x : Worker | one Workstation : w | x in w.workers
inv2 S: all x : Workstation | #(x.workers)>0		all x : Worker | one Workstation : w | x in w.workers
inv2 C: all x : Workstation | #(x.workers)>0		all x : Worker | one w :Workstation  | x in w.workers
inv3 C: all x:Component | one w:Workstation | w in x.workstation
inv4 T: all x:Product | x is in Component implies #(x.parts)>0	all x:Product | x is in Material implies #(x.parts)=0
inv4 T: all x:Product | x is in Component implies #(x.parts)>0	all x:Product | x is in Material implies #(x.parts)=0
inv4 C: all x:Component | #(x.parts)>0	all x:Material | #(x.parts)=0
inv5 S: all x:Workstation,all y:Worker | y in Robot and y in x.workers implies Robot in x.workers
inv5 S: all x:Workstation,all y,w:Worker | y in Robot and y in x.workers and w in Human implies w not in x.workers
inv5 S: all x:Workstation,all y,w:Worker | y in Robot and y in x.workers and w in Human implies w not in x.workers
inv5 C: all x:Workstation|all y,w:Worker | y in Robot and y in x.workers and w in Human implies w not in x.workers
inv5 C: all x:Workstation|all y,w:Worker | y in Robot and y in x.workers and w in Human implies w not in x.workers
inv6 U: all x,y:Component | x in y.parts implies x!=y
inv6 U: all x,y:Component | (x in y.parts or y in x.parts)implies x!=y
inv6 U: all x:Component | x not in x.parts
inv6 U: all x:Component | x not in x.parts and x not in parts.x
inv6 S: all x:Product | x in Components implies x not in x.parts
inv6 U: all x:Product | x in Component implies x not in x.parts
inv6 U: all x:Product | x in Component implies x not in x.parts and x not in parts.x
inv6 B: Component not in Component.parts
inv6 U: all x,y : Component | x in y.parts implies x!=y
inv6 C: all x,y : Component | x in y.^parts implies x!=y
inv7 O: all x:Component | all y:Dangerous | y in x.^parts implies x in Dangerous
inv8 S: all x:Worker,all z:Dangerous | all w:Workstation | w in z.workstation implies x in Robot
inv8 O: all x:Worker|all z:Dangerous | all w:Workstation | w in z.workstation implies x in Robot
inv8 O: all x:Worker|all z:Dangerous | all w:Workstation | (w in z.workstation and x in w.workers)implies x in Robot
inv9 S: all x,y:Workstation| x in y.succ implies y.in x.succ
inv9 U: all x,y:Workstation| x in y.succ implies y not in x.succ
inv9 B: all x,y:Workstation| x in y.succ implies y not in x.succ	all x,y:Workstation| x in y.succ implies #(y.succ) > #(x.succ)
inv9 B: all x,y:Workstation| x in y.succ implies y not in x.succ	all x,y:Workstation| x in y.succ implies #(y.succ) > #(x.succ)	all x,y:Workstation| x in y.^succ implies y not in y.^succ
inv9 B: all x,y:Workstation| x in y.succ implies y not in x.^succ	all x,y:Workstation| x in y.succ implies #(y.succ) > #(x.succ)

