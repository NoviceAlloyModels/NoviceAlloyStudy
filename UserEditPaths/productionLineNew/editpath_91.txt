NA H: THEME UPDATE
inv1 C: all w : Worker | w in Human || w in Robot
inv1 C: all w : Worker | w in Human || w in Robot
inv2 O: all ws : Workstation | some ws.workers	all ws,ws1 : Workstation, w : Worker | w in ws.workers implies w not in ws1.workers
inv2 U: all ws : Workstation | some ws.workers
inv2 U: all ws : Workstation | some ws.workers	all ws,ws1 : Workstation, w : Worker | w in ws.workers && ws != ws1 implies w not in ws1.workers
inv2 O: all ws : Workstation | some w : Worker | w in ws.workers	all ws,ws1 : Workstation, w,w1 : Worker |w in ws.workers && w in ws1.workers implies w = ws1
inv2 O: all ws : Workstation | some w : Worker | w in ws.workers	all ws,ws1 : Workstation, w : Worker |w in ws.workers && w in ws1.workers implies w = ws1
inv2 O: all ws : Workstation | some w : Worker | w in ws.workers	all ws,ws1 : Workstation, w : Worker | w in ws.workers && w in ws1.workers implies w = ws1
inv2 U: all ws : Workstation | some w : Worker | w in ws.workers	all ws,ws1 : Workstation, w : Worker | w in ws.workers && w in ws1.workers implies w != ws1
inv2 U: all ws : Workstation | some w : Worker | w in ws.workers	all ws,ws1 : Workstation, w : Worker | w in ws.workers implies w not in ws.succ
inv2 U: all ws : Workstation | some w : Worker | w in ws.workers	all ws : Workstation, w : Worker | w in ws.workers implies w not in ws.succ
inv2 U: all ws : Workstation | some w : Worker | w in ws.workers	all ws : Workstation, w : Worker | w in ws.workers implies w not in ws.succ
inv2 U: all ws : Workstation | some ws.workers	all ws : Workstation, w : Worker | w in ws.workers implies w not in ws.succ
inv2 U: all ws : Workstation | some ws.workers	all ws,ws1 : Workstation, w : Worker | w in ws.workers && w in ws1.workers implies ws = ws1
inv2 C: all ws : Workstation | some ws.workers	all ws,ws1 : Workstation, w : Worker | one workers.w
inv2 C: all ws : Workstation | some ws.workers	all w : Worker | one workers.w
inv2 U: all ws : Workstation, w : Worker | some ws.workers && one workers.w
inv2 C: all ws : Workstation | some ws.workers	all w : Worker | one workers.w
inv3 O: all c : Component | one workstation.c
inv3 C: all c : Component | one c.workstation
inv4 C: all c : Component | some c.parts	all m : Material | no m.parts
inv5 S: all ws : Workerstation, w,w1 : Worker | w in ws && w in Robot && w1 in ws implies w1 in Robot
inv5 U: all ws : Workstation, w,w1 : Worker | w in ws && w in Robot && w1 in ws implies w1 in Robot
inv5 O: all ws : Workstation, w,w1 : Worker | w in ws.workers && w in Robot && w1 in ws.workers implies w1 in Robot
inv6 S: all c : Components | no (c.parts).c
inv6 T: all c : Component | no (c.parts).c
inv6 O: all c : Component | no (c.parts)
inv6 O: all c : Component | no parts.c
inv6 T: all c : Component | no c.(parts.c)
inv6 T: all c : Component | no c.parts = c
inv6 O: all p : Product | no Component.parts
inv6 S: all p : Product | p in component implies p not in component.parts
inv6 U: all p : Product | p in Component && p in p.parts implies p not in Component.parts
inv6 C: all c : Component | c not in c.^(parts)
inv7 B: all c : Component | c in Dangerous implies c.^(parts) in Dangerous
inv7 B: all c : Component | c in Dangerous && c in c.parts implies c.^(parts) in Dangerous
inv7 B: all c : Component | some d : Dangerous | d in c.parts implies c in Dangerous
inv7 C: all c : Component | (some d : Dangerous | d in c.parts) implies c in Dangerous
inv8 S: all c : Component, w : worker | c in Dangerous && w in c.workstation.workers implies w in Robot
inv8 O: all c : Component, w : Worker | c in Dangerous && w in c.workstation.workers implies w in Robot
inv8 O: all c : Component, w : Worker | c in Dangerous && w in c.workstation.workers implies w in Robot
inv9 U: all ws,ws1 : Workstation | ws1 in ws.succ implies ws not in ws1.succ
inv9 U: all ws,ws1 : Workstation | ws1 in ws.succ && ws != ws1 implies ws not in ws1.succ
inv9 B: all ws : Workstation | no succ.ws
inv9 B: all ws : Workstation | one succ.ws
inv9 B: all ws : Workstation | one ws.^(succ)
inv9 O: all ws : Workstation | one ws.^(succ) && no succ.ws
inv9 U: all ws : Workstation | ws in begin implies ws not in ws.succ
inv9 U: all ws : Workstation | ws in begin implies ws not in ws.succ	all ws : Workstation | ws in end implies no ws.succ
inv9 U: all ws : Workstation | ws in end implies no ws.succ
inv9 B: all ws : Workstation | ws in begin implies ws not in end && ws not in ws.^(succ)
inv9 B: all ws : Workstation | ws in begin implies ws not in end && ws not in ws.^(succ)	all ws : Workstation | ws in end implies ws not in begin && no succ.ws

