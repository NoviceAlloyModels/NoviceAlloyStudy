NA H: THEME UPDATE
inv1 U: no Human & Robot
inv1 U: all w : Worker | w not in Human or w not in Robot
inv1 C: all w : Worker | w in Human or w in Robot
inv2 U: all w : Worker | some wor : Workstation | w in wor.workers	all wor : Workstation | some wor.workers
inv2 C: all w : Worker | one wor : Workstation | w in wor.workers	all wor : Workstation | some wor.workers
inv3 C: all c : Component | one c.workstation
inv4 S: all c : Componets | some c.parts	all m : Materials | no m.parts
inv4 S: all c : Components | some c.parts	all m : Materials | no m.parts
inv4 C: all c : Component | some c.parts	all m : Material | no m.parts
inv5 S: all wor : Workstation | all wor.workers in Human or all wor.workers in Robot
inv5 O: all wor : Workstation | wor.workers = Human & wor.workers or wor.workers = Robot & wor.workers
inv5 O: all wor : Workstation | wor.workers = Human & wor.workers or wor.workers = Robot & wor.workers
inv6 U: all c : Component | c not in c.parts
inv6 C: all c : Component | c not in c.^parts
inv7 U: all c, p : Component | p in c.parts and p in Dangerous implies c in Dangerous
inv7 B: all c, p : Component | p in c.^parts and p in Dangerous implies c in Dangerous
inv7 B: all c : Component | Dangerous in c.^parts implies Dangerous in c
inv7 T: all c : Component | Dangerous in c.^parts implies some Dangerous in c
inv7 B: all c : Component | Dangerous in c.^parts implies some Dangerous & c
inv7 B: all c : Component | Dangerous in c.^parts implies some Dangerous & c & Component
inv7 B: all c : Component | Dangerous in c.^parts implies some (Dangerous & c & Component)
inv7 B: all c: Component | Dangerous in c.^parts implies some (c & Dangerous & Component)
inv8 S: all c : Component | Dangerous in c implies c.workstation.workers = c.workstation.workers & Robots
inv8 B: all c : Component | Dangerous in c implies c.workstation.workers = c.workstation.workers & Robot
inv8 B: all c : Component | Dangerous in c implies no c.workstation.workers & Human
inv8 B: all c : Component | Dangerous in c.^parts implies no c.workstation.workers & Human
inv8 B: all c : Component | Dangerous in c implies no c.workstation.workers & Human
inv8 C: all c : Component & Dangerous | no c.workstation.workers & Human
inv9 B: all w : Workstation & begin | w.succ in end	all w : Workstation & end | w.succ in begin
inv9 B: all w : Workstation & begin | w.succ in end
inv9 B: all w : Workstation & begin | w.succ in end and w != w.succ
inv9 B: all w : Workstation & begin | w.succ in end and w != w.succ	all w : Workstation & end | w.succ in begin and w != w.succ
inv9 B: all w : Workstation & begin | w.succ in end and w != w.succ	all w : Workstation & end | w.succ in begin and w != w.succ	all w : Workstation | w.succ in Workstation
inv9 S: all w : Workstation | some we : end, some wb : begin | w.succ == we or w.succ = wb
inv9 S: all w : Workstation | some we : Workstation & end, some wb : Workstation & begin | w.succ == we or w.succ = wb
inv9 S: all w : Workstation | some we : Workstation & end | some wb : Workstation & begin | w.succ == we or w.succ = wb
inv9 S: all w : Workstation | some we : Workstation & end | some wb : Workstation & begin | w.succ == we or w.succ == wb
inv9 B: all w : Workstation | some we : Workstation & end | some wb : Workstation & begin | w.succ = we or w.succ = wb
inv9 O: all w : Workstation | some we : Workstation & end | some wb : Workstation & begin | (w.succ = we or w.succ = wb) and w != we and w != wb

