NA H: THEME UPDATE
inv1 C: Human & Robot = none	Worker = Human + Robot
inv1 C: Worker = Human + Robot
inv2 U: all ws : Workstation | ws.workers != none	all w : Worker | some ws : Workstation | w in ws.workers
inv2 C: all ws : Workstation | ws.workers != none	all w : Worker | one ws : Workstation | w in ws.workers
inv3 C: all c: Component | one ws: Workstation | ws in c.workstation
inv4 S: all c: Components | c.parts <> none	all m: Materials | m.parts = none
inv4 S: all c: Components | c.parts != none	all m: Materials | m.parts = none
inv4 S: all c: Component | c.parts != none	all m: Materials | m.parts = none
inv4 C: all c: Component | c.parts != none	all m: Material | m.parts = none
inv5 O: all ws: Workstation | ws.workers in Human or ws.workers in Robot
inv6 U: all c: Component | c not in c.parts
inv6 C: all c: Component | c not in c.^parts
inv6 O: all c: Component | c not in c.*parts
inv6 C: all c: Component | c not in c.^parts
inv7 B: all c: Component | some p: c.parts | p in Dangerous implies c in Dangerous
inv7 B: all c: Component | some p: c.^parts | p in Dangerous implies c in Dangerous
inv7 C: all c: Component | all p: c.parts | p in Dangerous implies c in Dangerous
inv8 S: all c: Components + Dangerous | no h: Human | some wc: c.workstation | h in wc.workers
inv8 O: all c: Component + Dangerous | no h: Human | some wc: c.workstation | h in wc.workers
inv8 O: all c: Component + Dangerous | no h: Human | some wc: c.^workstation | h in wc.workers
inv8 U: all wc: Human.workstation | no d: Dangerous | d in wc
inv8 O: all d: Dangerous | all wc: d.workstation | wc.workers in Robot
inv9 U: all wc: Workstation | wc not in wc.^succ
inv9 S: all wc: Workstation | wc not in wc.^succ and all wc1, wc2: wc.succ | wc1 == wc2
inv9 U: all wc: Workstation | wc not in wc.^succ and all wc1, wc2: wc.succ | wc1 = wc2
inv10 S: all c: Component |
inv9 O: all wc: Workstation | wc not in wc.^succ and #wc.succ = 1
inv9 B: all wc: Workstation | #wc.succ = 1
inv9 O: all wc: Workstation | wc not in wc.^succ and #wc.succ = 1
inv9 U: all wc: Workstation | wc not in wc.^succ and (#wc.succ = 1 or #wc.succ = 0)
inv9 O: all wc: Workstation | wc not in wc.^succ and (#wc.succ = 1 or #wc.succ = 0) and all wc2: Workstation - wc | wc2 in wc.^succ
inv9 U: all wc: Workstation | wc not in wc.^succ	all wc: Workstation | (wc in begin and #wc.succ = 1 and all wc2: Workstation - wc | wc2 in wc.^succ) or	(wc in end and wc.succ = none) or	(wc not in begin and wc not in end and #wc.succ = 1)
inv9 C: all wc: Workstation | wc not in wc.^succ	all wc: Workstation | (wc in begin and #wc.succ = 1 and all wc2: Workstation - wc | wc2 in wc.^succ) or	(wc in end and wc.succ = none) or	(wc not in begin and wc not in end and #wc.succ = 1 and one wc3: Workstation - wc | wc3.succ = wc)
inv10 B: all c: Component | all p: c.parts | p.workstation in c.^workstation
inv10 O: all c: Component | all p: c.parts | p.workstation in c.workstation.^workstation
inv10 O: all c: Component | all p: c.parts | p.workstation in (c.workstation).^workstation
inv10 B: all c: Component | all p: c.parts | p.workstation in (c.workstation).^succ
inv10 B: all c: Component | all p: c.parts | c.workstation in (p.workstation).^succ
inv10 B: all c: Component | all p: c.parts | c.workstation in (p.workstation).*succ
inv10 B: all c: Component | all p: c.parts | c.workstation in (p.workstation).^succ
inv10 B: all c: Component | all p: c.parts | c.workstation in (p.workstation).^succ
inv10 B: all c: Component | all p: c.parts & Component | c.workstation in (p.workstation).^succ
inv10 B: all c: Component | all p: c.parts & Component | c.workstation in (p.workstation).*succ
inv10 B: all c: Component | all p: c.parts & Component | c.workstation in (p.workstation).^succ

