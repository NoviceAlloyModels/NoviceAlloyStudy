NA H: THEME UPDATE
inv1 C: no (Worker-Human-Robot)
inv2 U: some workers	all w : Worker | w in Workstation.workers
inv2 U: some workers	all w,x : Workstation | w != x implies no (w.workers & x.workers)
inv2 C: some workers	workers in Workstation one -> some Worker
inv3 B: one Component.workstation
inv3 T: Component one -> one Workstation
inv3 O: workstation in Component one -> one Workstation
inv3 C: workstation in Component set -> one Workstation
inv4 S: Components in parts	Material not in parts
inv4 T: Component in parts	Material not in parts
inv4 S: all c : Component, m : material | c in parts & m not in parts
inv4 T: all c : Component, m : Material | c in parts & m not in parts
inv4 T: all c : Component | c in parts	parts - Material = parts
inv4 T: all c : Component | c in Product.parts	parts - Material = parts
inv4 T: (Component <: parts) in Component set -> some Product	parts - Material = parts
inv4 C: (Component <: parts) in Component set -> some Product	no (Material <: parts)
inv4 B: all c : Component | c in Product.parts		no (Material <: parts)
inv4 B: all c : Component | c in (Product-Material).parts		no (Material <: parts)
inv4 T: all c : Component | c in ((Product-Material).parts - iden)		no (Material <: parts)
inv4 S: parts = Components + (Product-Material)
inv4 T: parts = Component + (Product-Material)
inv4 S: parts = set (Component + (Product-Material))
inv4 C: (Component <: parts) in Component set -> some Product	no (Material <: parts)
inv4 B: some Component.parts	no Material.parts
inv4 C: all c: Component | some c.parts	all c: Material | no c.parts
inv6 S: Components.parts - iden
inv5 C: no (workers.Human & workers.Robot)
inv6 T: Component.parts - iden
inv6 T: no ^Component.parts
inv6 T: no ^(Component.parts)
inv6 O: no *parts
inv6 O: no (^parts & iden)
inv6 U: iden not in ^parts
inv6 O: no (iden & ^parts)
inv6 O: no *parts
inv6 O: no (iden & ^parts)
inv7 S: all d : Dangerous, c : Componets | d in c.parts => d in c
inv7 O: all d : Dangerous, c : Component | d in c.parts => d in c
inv7 T: all d : Dangerous, c : Component | d in c.parts => c.d
inv7 T: all d : Dangerous, c : Component | d in c.parts => d.c
inv7 O: parts.Dangerous in Dangerous
inv7 O: parts.Dangerous in Dangerous
inv9 U: lone ((begin.^succ :> (end + begin)) - begin)
inv9 B: one ((begin.^succ :> (end + begin)) - begin)
inv10 B: no (parts :> Component & workstation.*succ.~workstation)
inv9 B: one ((begin.^succ :> (end + begin)))
inv9 U: lone ((begin.^succ :> (end + begin)))
inv9 B: lone begin + end
NA H: THEME UPDATE
inv4 O: (parts :> Component) in Component set -> some Product	no (parts :> Material)
inv4 C: (Component <: parts) in Component set -> some Product	no (Material <: parts)

