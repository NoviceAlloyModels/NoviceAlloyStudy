NA H: THEME UPDATE
prop1 C: no Green
prop2 C: all s : Signal | eventually s in Green
prop3 C: always pos = pos'
prop4 C: all t : Track | always lone t.~pos
prop5 B: always all t : Train {	(t.pos = Exit) implies no t.pos'	or	(one t.pos) implies (t.pos' in t.pos.prox)	}
prop6 B: no (Green & Green')
prop6 B: always no (Green & Green')
prop6 O: always (Signal-Green = Green')
prop6 O: always ((Signal-Green = Green') and (Green = Signal'-Green'))
prop7 U: all t : Train | eventually no t.pos
prop7 U: all t : Train | (some t.pos) implies (eventually no t.pos')
prop7 O: all t : Train | (eventually always no t.pos')
prop7 O: all t : Train | (eventually always no t.pos)
prop7 B: all t : Train | one t.pos implies (eventually always no t.pos')
prop7 O: all t : Train | (eventually always no t.pos')
prop7 O: all t : Train | (eventually always no t.pos)
prop6 O: always ((Signal-Green = Green') and (Green = (Signal-Green)'))
prop6 U: always all s : Signal {	((s in Green) implies (eventually s not in Green))	or	((s not in Green) implies (eventually s in Green))	}
prop8 S: always all t : ((Signal-Green).(~signal).(~pos)) | (t.pos' in t.pos.prox) after (t.pos.signal in Green)
prop8 S: always all t : ((Signal-Green).(~signal).(~pos)) | (t.pos' in t.pos.prox) after (t.pos.signal in Green)
prop8 U: always all t : ((Signal-Green).(~signal).(~pos)) | (t.pos' in t.pos.prox) implies (t.pos.signal in Green)
prop15 C: always all t : Train | some t.pos implies eventually t.pos != t.pos'
prop13 O: always all t : Train | no t.pos implies always no t.pos
prop13 O: always all t : Train | no t.pos implies always no t.pos'
prop13 O: always all t : Train | no t.pos implies always no t.pos
prop13 T: always all t : Train | (t.pos and no t.pos') implies (always no t.pos')
prop13 C: always all t : Train | (one t.pos and no t.pos') implies (always no t.pos')
prop16 B: always all t : Train | (t.pos = Exit) implies ((always some t.pos) since (t.pos = Entry))
prop8 U: always all t : ((Signal-Green).(~signal).(~pos)) | (t.pos' in t.pos.prox) implies (t.pos.signal in Green)
prop7 O: all t : Train | (eventually always no t.pos)
prop6 U: always all s : Signal {	((s in Green) implies (eventually s not in Green))	or	((s not in Green) implies (eventually s in Green))	}
prop5 B: always all t : Train {	(t.pos = Exit) implies no t.pos'	or	(one t.pos) implies (t.pos' in t.pos.prox)	}

