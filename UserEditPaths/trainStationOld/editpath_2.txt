NA H: THEME UPDATE
inv1 S: Red in Signal
inv1 C: no Green
inv2 O: eventually Signal in Green
inv2 C: all s : Signal | eventually s in Green
inv2 U: eventually Green in Signal
inv2 O: eventually Signal in Green
inv2 C: all s : Signal | eventually s in Green
inv3 O: always no Train.pos
inv3 B: no Train.pos
inv3 O: always no Train.pos
inv3 O: all t : Train | always no t.pos
inv3 S: always Entry in Trains.pos
inv3 B: always Entry in Train.pos
inv3 B: always Entry = Train.pos
inv3 O: always no Train.pos
inv3 B: always Entry + Exit in Train.pos
inv3 B: always Entry & Exit in Train.pos
inv3 B: always Entry + Exit in Train.pos
inv3 B: always Exit in Train.pos
inv4 U: always ~pos.pos in iden
inv4 C: always pos.~pos in iden
inv5 B: always all t : Train, p : t.pos | t.pos' in p.prox
inv5 B: always all t : Train, p : t.pos | (t.pos)' in p.prox
inv5 B: always all t : Train, p : t.pos | (t.pos)' in p.prox
inv5 B: always all t : Train, p : t.pos | (t.pos)' in p.prox || Exit in p.prox
inv5 B: always all t : Train, p : t.pos | (t.pos)' in p.prox || Exit = p.prox
inv6 O: always (Green = Signal and no Green' or no Green and Green' = Signal')
inv6 O: always (Green = Signal and no Green' or no Green and Green' = Signal)
inv6 O: always (Signal in Green and no Green' or no Green and Green' = Signal')
inv6 O: always (Signal in Green and no Green' or no Green and Green' = Signal')
inv7 U: all t : Train | eventually t.pos in Exit
inv7 U: all t : Train | eventually t.pos in Entry
inv7 B: all t : Train | always (eventually t.pos not in Entry)
inv7 B: all t : Train | always (eventually t.pos not in Entry + Exit)

