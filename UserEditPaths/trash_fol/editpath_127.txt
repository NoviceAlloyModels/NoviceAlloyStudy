NA H: THEME UPDATE
inv1 C: all f : File | f not in Trash
inv5 S: all f : File | f not in protected implies f in Trash
inv5 S: all f : File | f not in protected implies f in Trash
inv5 S: all f : File | f not in protected implies f in Trash
inv1 C: all f : File | f not in Trash
inv2 C: all f : File | f in Trash
inv3 C: some f : File | f in Trash
inv4 C: all f : File | f in Protected implies f not in Trash
inv5 S: all f : File | f not in protected implies f in Trash
inv5 C: all f : File | f not in Protected implies f in Trash
inv4 C: all f : Protected | f not in Trash
inv6 T: all x, y, z : File | x->y in File and x->z in File implies y=z
inv6 C: all x, y, z : File | x->y in link and x->z in link implies y=z
inv7 T: all x, y : File | x->y in link implies x->y not in Trash
inv7 T: all x, y : File | x->y in link implies (x->y) not in Trash
inv6 C: all x, y, z : File | x->y in link and x->z in link implies y=z
inv7 O: all x, y : File | x->y in link implies (x not in Trash and y not in Trash)
inv7 B: all f : File | isLink[f] implies f not in Trash	}		pred isLink[f:File]{	some g:File | f->g in link
inv7 C: all f : File | isLinked[f] implies f not in Trash	}		pred isLinked[f:File]{	some g:File | g->f in link
inv8 C: all x, y : File | x->y not in link
inv9 S: all x, y, z : File | isLinked[y] implies islink[z]	}		pred isLink{	some g:File | f->g in link	}		/* If a link is deleted, so is the file it links to. */		pred isLinked[f:File]{	some g:File | g->f in link
inv9 T: all x, y, z : File | isLinked[y] implies isLink[z]	}		pred isLink{	some g:File | f->g in link	}		/* If a link is deleted, so is the file it links to. */		pred isLinked[f:File]{	some g:File | g->f in link
inv8 C: all x, y : File | x->y not in link
inv8 C: all x, y : File | x->y not in link
inv8 C: all x, y : File | x->y not in link
inv10 S: all x, y : File | isLink[x] is in Trash implies isLinked[x]	}			pred isLinked[f:File]{	some g:File | g->f in link	}		/* There are no links. */		pred isLink[f:File]{	some g:File | f->g in link
inv10 T: all x, y : File | isLink[x] in Trash implies isLinked[x]	}			pred isLinked[f:File]{	some g:File | g->f in link	}		/* There are no links. */		pred isLink[f:File]{	some g:File | f->g in link
inv9 T: all f,g,h :File | f->g
inv10 T: all x, y : File | isLink[x] in Trash implies isLinked[x] in trash	}			pred isLinked[f:File]{	some g:File | g->f in link	}		/* There are no links. */		pred isLink[f:File]{	some g:File | f->g in link
inv9 C: all f,g,h :File | f->g in link implies g->h not in link
inv10 S: all x, y : File | x->y in link and x- in Trash implies y in trash
inv10 S: all x, y : File | x->y in link and x in Trash implies y in trash
inv10 C: all x, y : File | x->y in link and x in Trash implies y in Trash

