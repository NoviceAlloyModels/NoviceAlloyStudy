NA H: THEME UPDATE
inv1 C: Trash in none
inv1 C: Trash in none
inv1 C: Trash = none
inv1 C: Trash = none
inv2 C: all x : File | x in Trash
inv5 C: all x : File | x not in Protected implies x in Trash
inv4 C: all x : File | x in Protected implies x not in Trash
inv3 C: some x : File | x in Trash
inv8 C: all x,y : File | x->y not in link
inv6 O: all x,y,z : File | x->y in link implies (all z : File | x->z not in link)
inv5 C: all x : File | x not in Protected implies x in Trash
inv6 O: all x,y,z : File | x->y in link implies (all z : File | x->z not in link)
inv6 O: all x,y : File | x->y in link implies (all z : File | x->z not in link)
inv6 O: all x,y : File | x->y in link implies (all z : File | z != x and x->z not in link)
inv6 O: all x,y : File | x->y in link implies (all z : File | z != y and x->z not in link)
inv6 C: all x,y : File | x->y not in link or (all z : File | x->y in link and x -> z in link implies y=z)
inv6 S: all x,y,z : File | x->y in link and x->z in link implies y=z)
inv6 C: all x,y,z : File | x->y in link and x->z in link implies y=z
inv6 C: all x,y,z : File | x->y in link and x->z in link implies y=z
inv8 C: all f1,f2 : File | f1->f2 not in link
inv7 B: all f1,f2 : File | f1->f2 in link implies f2 in Trash
inv7 C: all f1,f2 : File | f1->f2 in link implies f2 not in Trash
inv7 S: all f1->f2 : link | f2 not in Trash
inv7 S: all (f1,f2) : link | f2 not in Trash
inv7 C: all f1,f2 : File | f1->f2 in link implies f2 not in Trash
inv7 C: all f1,f2 : File | f1->f2 in link implies f2 not in Trash
inv7 C: all f1,f2 : File | f1->f2 in link implies f2 not in Trash
NA M: MOD BASE MODEL
NA M: MOD BASE MODEL
NA M: MOD BASE MODEL
inv1 C: all f : File | f not in Trash
inv1 C: all f : File | f not in Trash
inv7 S: all f1 : File | is_link[f] implies f not in Trash	}		pred is_link[f : File]{	some g:File | f->g in link
inv7 B: all f1,f2 : File | f1->f2 in link implies f1 not in Trash
inv7 S: all f1 : File | is_link[f] implies f not in Trash	}		pred is_link[f : File]{	some g:File | f->g in link
inv7 S: all f1 : File | is_link[f1] implies f not in Trash	}		pred is_link[f : File]{	some g:File | f->g in link
inv7 B: all f : File | is_link[f] implies f not in Trash	}		pred is_link[f : File]{	some g : File | f->g in link
inv7 C: all f : File | is_linked[f] implies f not in Trash	}		pred is_linked[f : File]{	some g : File | g->f in link
inv8 S: all f | not is_link[f]	}		/* A link does not link to another link. */		pred is_link[f : File]{	some g : File | f->g in link
inv8 S: all f | not is_link[f]	}		/* A link does not link to another link. */		pred is_link[f : File]{	some g : File | f->g in link
inv8 S: all f | not is_linked[f]	}		/* A link does not link to another link. */		pred is_linked[f : File]{	some g : File | g->f in link	}		pred is_link[f : File]{	some g : File | f->g in link
inv7 C: all f : File | is_linked[f] implies f not in Trash	}		pred is_linked[f : File]{	some g : File | g->f in link	}		pred is_link[f : File]{	some g : File | f->g in link
inv8 C: all f : File | not is_link[f]	}		pred is_link[f : File]{	some g : File | f->g in link
inv9 O: all f1,f2 : File | is_link[f1] implies not is_link[f2]	}		pred is_link[f : File]{	some g : File | f->g in link
inv9 C: all f1,f2 : File | is_link[f1] and is_link[f2] implies f1->f2 not in link	}		pred is_link[f : File]{	some g : File | f->g in link
inv9 C: all f1,f2 : File | is_link[f1] and is_link[f2] implies f1->f2 not in link	}		pred is_link[f : File]{	some g : File | f->g in link
inv9 C: all f1,f2:File | is_link[f1] and is_link[f2] implies f1->f2 not in link	}		pred is_link[f : File]{	some g : File | f->g in link
NA H: THEME UPDATE
inv1 C: all f : File | f not in Trash
inv1 C: all f : File | f not in Trash

