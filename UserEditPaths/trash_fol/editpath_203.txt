NA H: THEME UPDATE
inv1 C: all f : File | f not in Trash
inv1 C: all f : File | f not in Trash
inv3 S: some f : File | f in Trasg
inv1 C: all f : File | f not in Trash
inv1 C: all f : File | f not in Trash
inv1 C: all f : File | f not in Trash
inv2 C: all f : File | f in Trash
inv3 C: some f : File | f in Trash
inv4 C: all f : File | f in Protected implies f not in Trash
inv4 C: all f : File | f in Protected implies f not in Trash
inv5 C: all f : File | f not in Protected implies f in Trash
NA M: MOD BASE MODEL
inv6 C: all f1,f2,f3 : File | (f1->f2 in link and f1->f3 in link) implies f2=f3
inv6 C: all f1,f2,f3 : File | (f1->f2 in link and f1->f3 in link) implies f2=f3
inv7 S: all f : File | is_linked[f] implies f not in Trash	}		pred is_linked[f : File]{	some f1 : File | f1->f in link	}			/* The set of files in the trash. */	sig Trash in File {}	/* The set of protected files. */	sig Protected in File {}		/* The trash is empty. */		pred is_link[f : File]{	some f1 : File | f->f1 in link
inv8 C: all f : File | not is_link[f]	}		pred is_link[f : File]{	some f1 : File | f->f1 in link
inv8 C: all f : File | not is_link[f]	}		pred is_link[f : File]{	some f1 : File | f->f1 in link
inv9 C: all f1,f2 : File | f1->f2 in link implies not is_link[f2]	}		pred is_link[f : File]{	some f1 : File | f->f1 in link
inv10 C: all f1,f2 : File | f1->f2 in link and f1 in Trash implies f2 in Trash
NA H: THEME UPDATE

