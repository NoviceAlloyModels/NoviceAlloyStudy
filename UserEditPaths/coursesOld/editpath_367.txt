NA H: THEME UPDATE
inv1 O: enrolled.Course = Student
inv1 O: enrolled.Course = Student - Professor
inv2 S: teches.Course = Professor - Student
inv3 C: all c: Course | c in Person.teaches
inv4 C: all disj p: Project | #(Course <: projects).p = 1
inv5 B: (Person <: projects).Project = Student
inv6 B: Student.projects = Student.enrolled.projects
inv6 B: all s: Student | s.projects = s.enrolled.projects
inv6 U: all s: Student | s.projects in s.enrolled.projects
inv7 S: all s: Student |
inv5 B: (Person <: projects).Project = Student
inv4 C: all disj p: Project | #(Course <: projects).p = 1
inv7 T: all s: Student, c : Course | c in s.enrolled => #s.c.projects = 1
inv7 S: all s: Student, c : Course | c in s.enrolled => #(p.projects & c.projects) = 1
inv7 B: all s: Student, c : Course | c in s.enrolled => #(s.projects & c.projects) = 1
inv7 B: all s: Student, c : Course | c in s.enrolled =>	  		#(s.projects & c.projects) = 1
inv7 B: all s: Student, c : Course | c in s.enrolled =>	  		#(s.projects & c.projects) = 1
inv7 B: all s: Student, c : Course | c in s.enrolled =>	  		#(s.projects & c.projects) = 1
inv8 T: no p: Person | p in ^p.teaches.~enrolled
inv1 O: enrolled.Course = Student
inv1 C: enrolled.Course in Student
inv5 U: (Person <: projects).Project in Student
inv4 C: all disj p: Project | #(Course <: projects).p = 1
inv4 C: all disj p: Project | one (Course <: projects).p
inv5 C: (Person <: projects) in Student some -> Project
inv7 B: all s: Student, c : Course | c in s.enrolled =>	  		#(s.projects & c.projects) = 1
inv7 B: all s: Student, c : Course | c in s.enrolled =>	  		one (s.projects & c.projects)
inv7 U: all s: Student, c : Course | c in s.enrolled =>	  		lone (s.projects & c.projects)
inv8 C: no p: Person | p in p.teaches.~enrolled
inv8 C: no p: Person | p in p.teaches.~enrolled
inv9 B: no Professor.enrolled
inv9 B: no (Professor - Student).enrolled
inv9 B: no (Person - Student).enrolled
inv9 B: no Professor.enrolled

