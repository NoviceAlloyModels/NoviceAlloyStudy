NA H: THEME UPDATE
inv1 S: all c: Course |
inv2 S: all c: Course, p: Person |
inv1 C: enrolled.Course in Student
inv2 C: teaches.Course in Professor
inv3 S: Courses in Professor
inv3 O: Course in Professor
inv3 B: Course.projects in Professor
inv3 B: teaches.Course in Professor
inv3 T: all c: Course | one Professor in c
inv3 T: all c: Course | some Professor in c
inv3 T: all c: Course, p: Person | some p->c in teaches
inv3 B: all c: Course, p: Person | p->c in teaches
inv3 T: all c: Course, p: Person | some(p->c in teaches)
inv3 B: all c: Course, p: Person | p->c in teaches
inv3 S: all c: Course, some p: Person | p->c in teaches
inv3 C: all c: Course| some p: Person | p->c in teaches
inv4 T: all p: Project | one c:Course | p->c in projects
inv4 T: all p: Project | one c:Course | p->c in c.projects
inv4 C: all p: Project | one c:Course | p in c.projects
inv5 S: projects.Project in Students
inv5 T: projects.Project in Student
inv5 U: all p: Person, o: Project | o in p.projects implies p in Student
inv5 C: all p: Person, o: Project | o in p.projects implies p in Student 	  	all l: Project | some p:Person | p->l in projects
inv6 B: all s:Student, c:Course, p:Project | s->p in projects implies c->p in projects
inv6 B: all s:Student, c:Course, p:Project | s->p in projects implies c->p in projects and s->c in enrolled
inv6 B: all s:Student, c:Course, p:Project | s->p in projects implies c->p in projects and c->s in enrolled
inv6 B: all s:Student, c:Course, p:Project | s->p in projects implies c->p in projects and s->c in enrolled
inv6 B: all s:Student, c:Course, p:Project | s->p in projects implies (c->p in projects and s->c in enrolled)
inv6 B: all s:Student, c:Course, p:Project | s->p in projects implies (p in c.projects and s->c in enrolled)
inv6 B: all s:Student, c:Course, p:Project | p in s.projects implies (p in c.projects and s->c in enrolled)
inv6 B: all s:Student, c:Course, p:Project | p in s.projects implies (p in c.projects and c in s.enrolled)
inv6 B: all s:Student, c:Course, p:Project | p in s.projects implies p in c.projects and c in s.enrolled
inv6 B: all s:Student, c:Course, p:Project | p in s.projects implies c in s.enrolled
inv6 B: all s:Person, c:Course, p:Project | p in s.projects implies c in s.enrolled and s in Student
inv6 B: all s:Person, c:Course, p:Project | p in s.projects implies c in s.enrolled and s in Student and p in c.projects
inv6 B: all s:Person, c:Course, p:Project | p in s.projects implies (c in s.enrolled and s in Student and p in c.projects)
inv6 B: all s:Student, c:Course | c in s.enrolled implies c.projects in s.projects
inv6 S: all s:Student, c:Course | s.projects in c.projects
inv6 B: all s:Student, c:Course | s.projects in c.projects
inv6 B: all s:Student, c:Course | s.projects in c.projects and c in s.enrolled
inv6 B: all s:Student, c:Course | s.projects in c.projects implies c in s.enrolled
inv6 B: all s:Student, c:Course, p:Project | p in c.projects and p in s.projects implies c in s.enrolled
inv7 B: all s:Student, c:Course | lone p:Project | c in s.enrolled implies p in s.projects
inv7 B: all s:Student, c:Course | lone p:Project | c in s.enrolled and p in c.projects implies p in s.projects
inv7 B: all s:Student | one c:Course | lone p:Project | c in s.enrolled and p in c.projects implies p in s.projects
inv7 T: all s:Student, c:Course | lone p:Project | c in s.enrolled and p in c.projects implies p in s.enrolled.c.projects
inv7 S: all s:Student, c:Course | lone p:Project | c in s.enrolled and p in c.projects implies p in s.enrolled
inv7 S: all s:Student, c:Course | lone p:Project | c in s.enrolled and p in c.projects implies p in c.projects
inv7 S: all s:Student, c:Course | lone p:Project | p in c.projects and p in s.projects implies c in s.enrolled
inv7 S: all s:Student, c:Course | lone p:Project | p in c.projects and p in s.projects implies c in s.enrolled
NA H: THEME UPDATE
NA H: THEME UPDATE
inv7 B: all s:Student, c:Course, p1,p2:Project | p1 in s.projects and p2 in s.projects implies p1=p2
inv7 B: all s:Student, c:Course, p1,p2:Project | p1 in s.projects and p2 in s.projects and c in s.enrolled implies p1=p2
inv7 U: all s:Student, c:Course, p1,p2:Project | p1 in s.projects and p2 in s.projects and c in s.enrolled and p1 in c.projects and p2 in c.projects implies p1=p2
inv8 U: all p1,p2: Professor | p1 not in p2.teaches
inv8 T: all p1,p2: Professor | p1 not in p2.teaches.Course
inv8 U: all p1,p2: Professor, c: Course | p1 in c.enrolled implies p2 not in c.teaches
inv8 U: all p1,p2: Professor, c: Course | p1 in c.enrolled implies c not in p2.teaches
inv8 T: all p1,p2: Professor, c: Course | p1 in c.enrolled implies p2 not in p2.teaches.c
inv8 U: all p1: Professor, c: Course | p1 in c.enrolled implies p1 not in c.teaches
inv8 U: all p1: Professor, c: Course | p1 in c.enrolled implies c not in p1.teaches
inv8 U: all p1: Professor, c: Course | p1 in c.enrolled implies p1->c not in teaches
inv8 S: all p1: Professor, c: Course | p1->c1 in enrolled implies p1->c not in teaches
inv8 U: all p1: Professor, c: Course | p1->c in enrolled implies p1->c not in teaches
inv8 T: all p1: Professor, c: Course | p1->c in enrolled implies p1->c
inv8 U: all p1: Professor, c: Course | p1->c in enrolled implies p1->c not in teaches
inv9 B: all p1,p2: Professor, c:Course | p1->c in teaches and p2->c in teaches implies p1->c not in enrolled and p2->c not in enrolled
inv9 B: all p1,p2: Professor, c,c2:Course | p1->c in teaches and p2->c in teaches implies (p2->c2 in teaches implies p1->c2 not in enrolled)
inv10 C: all p:Person, c:Course | p in c.grades.Grade implies p in Student
inv11 U: all s:Student, c:Course | s in c.grades.Grade implies c in s.enrolled
inv12 S: all s:Student, c:Course, p1,p2:Project | p1 in s.projects and p2 in s.projects and c in s.enrolled and p1 in c.projects and p2 in c.projects implies p1=p2				all s:Student, c:Course, g1,g2: Grade | g1 in c.grades.Person and g2 in c.grades.Person and c
inv12 S: all s:Student, c:Course, p1,p2:Project | p1 in s.projects and p2 in s.projects and c in s.enrolled and p1 in c.projects and p2 in c.projects implies p1=p2
inv7 U: all s:Student, c:Course, p1,p2:Project | p1 in s.projects and p2 in s.projects and c in s.enrolled and p1 in c.projects and p2 in c.projects implies p1=p2
inv12 U: all s:Student, c:Course, g1,g2: Grade | g1 in c.grades.Person and g2 in c.grades.Person and c in s.enrolled implies g1=g2
inv12 U: all s:Student, c:Course, g1,g2: Grade | g1 in c.grades.s and g2 in c.grades.s and c in s.enrolled implies g1=g2
inv12 U: all s:Student, c:Course, g1,g2: Grade | g1 in s.(c.grades) and g2 in s.(c.grades) and c in s.enrolled implies g1=g2
inv13 T: all s:Student, c:Course, p: Project | s in c.grades.Grade.last and p in c.projects and c in s.enrolled implies p in s.projects
inv13 B: all s:Student, c:Course, p: Project | s in c.grades.last and p in c.projects and c in s.enrolled implies p in s.projects
inv13 B: all s:Student, c:Course| one p: Project | s in c.grades.last and p in c.projects and c in s.enrolled implies p in s.projects
inv13 B: all s:Student, c:Course| some p: Project | s in c.grades.last and p in c.projects and c in s.enrolled implies p in s.projects
inv13 B: all s:Student, c:Course| some p: Project | s in c.grades.last and c in s.enrolled implies p in c.projects and p in s.projects
inv13 B: all s:Student, c:Course| some p: Project | s in c.grades.last implies p in c.projects and p in s.projects
inv13 U: all s:Student, c:Course | s in c.grades.last implies (some p: Project | p in c.projects and p in s.projects)
inv14 S: all s1,s2:Student, c1,c2:Course, p1,p2:Project | (p1 in s1.projects and p1 in s2.projects and p1 in c1.projects) implies (p2 in s2.projects and p2 in c.projects implies p2 not in s1.projects )
inv13 U: all s:Student, c:Course | s in c.grades.last implies (some p: Project | p in c.projects and p in s.projects)
inv15 S: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects) implies (s1 in c.grades.Grade and s2 in c.grades.Grade implies s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades=prev[s1.(c.grades])))
inv15 S: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects) implies (s1 in c.grades.Grade and s2 in c.grades.Grade implies s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades=prev[s1.(c.grades]))))
inv15 S: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects) implies (s1 in c.grades.Grade and s2 in c.grades.Grade implies s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades=prev[s1.(c.grades])))
inv15 S: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects) implies (s1 in c.grades.Grade and s2 in c.grades.Grade implies s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades=prev[s1.(c.grades]))
inv15 S: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects) implies (s1 in c.grades.Grade and s2 in c.grades.Grade implies s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades=prev[s1.(c.grades])
inv15 S: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects) implies (s1 in c.grades.Grade and s2 in c.grades.Grade implies s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades=prev[s1.(c.grades])))
inv15 S: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects) implies (s1 in c.grades.Grade and s2 in c.grades.Grade implies s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades=prev[s1.(c.grades])))
inv15 S: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects) implies (s1 in c.grades.Grade and s2 in c.grades.Grade implies s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades)=prev[s1.(c.grades])))
inv15 S: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects) implies (s1 in c.grades.Grade and s2 in c.grades.Grade implies s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades)=prev[s1.(c.grades]))))
inv15 S: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects) implies (s1 in c.grades.Grade and s2 in c.grades.Grade implies s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades)=prev[s1.(c.grades]))
inv15 S: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects) implies ((s1 in c.grades.Grade and s2 in c.grades.Grade) implies (s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades)=prev[s1.(c.grades)])))
inv15 B: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects) implies ((s1 in c.grades.Grade and s2 in c.grades.Grade) implies (s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades)=prev[s1.(c.grades)]))
inv15 S: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects and s1 in c.grades.Grade and s2 in c.grades.Grade) implies ( implies (s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades)=prev[s1.(c.grades)]))
inv15 B: all s1,s2:Student, p:Project, c:Course | (p in s1.projects and p in s2.projects and p in c.projects and s1 in c.grades.Grade and s2 in c.grades.Grade) implies ((s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades)=prev[s1.(c.grades)]))
inv15 B: all s1,s2:Student, p:Project, c:Course | (s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects and s1 in c.grades.Grade and s2 in c.grades.Grade) implies ((s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades)=prev[s1.(c.grades)]))
inv15 S: all s1,s2:Student, p:Project, c:Course, g1,g2:Grades | (s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects and s1 in c.grades.Grade and s2 in c.grades.Grade) implies ((s1.(c.grades)=prev[s2.(c.grades)] or s2.(c.grades)=prev[s1.(c.grades)]))
inv15 T: all s1,s2:Student, p:Project, c:Course, g1,g2:Grade | (s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies (g1 in s1.grades and g2 in s2.grades implies (g1=prev[g2] or g2=prev[g1]))
inv15 T: all s1,s2:Student, p:Project, c:Course, g1,g2:Grade | (s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies (g1 in s1.grades and g2 in s2.grades implies (g1=prev[g2] or g2=prev[g1]))
inv15 T: all s1,s2:Student, p:Project, c:Course, g1,g2:Grade | (s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies (g1 in s1.c.grades and g2 in s2.c.grades implies (g1=prev[g2] or g2=prev[g1]))
inv15 B: all s1,s2:Student, p:Project, c:Course, g1,g2:Grade | (s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies (g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1=prev[g2] or g2=prev[g1]))
inv15 S: all s1,s2:Student, p:Project, c:Course, g1,g2:Grade | (s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies ((g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1=prev[g2] or g2=prev[g1]))
inv15 B: all s1,s2:Student, p:Project, c:Course, g1,g2:Grade | (p in s1.projects and p in s2.projects and p in c.projects) implies (g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1=prev[g2] or g2=prev[g1]) or g1=g2)
NA H: THEME UPDATE

