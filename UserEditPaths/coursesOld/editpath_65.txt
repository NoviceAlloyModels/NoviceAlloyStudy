NA H: THEME UPDATE
inv1 T: all p : Person | Professor.p implies none p.enrolled
inv1 T: all p : Professor | none p.enrolled
inv1 T: all p : Professor | none p.enrolled
inv1 S: all p : Professor | zero p.enrolled
inv1 B: all p : Professor | some p.enrolled
inv1 B: all p : Professor | one p.enrolled
inv1 T: all p : Professor | none p.enrolled
inv1 T: all p : Professor | not p.enrolled
inv1 T: all p : Professor | none p.enrolled
inv1 B: all p : Professor | lone p.enrolled
inv1 B: all p : Professor | no p.enrolled
inv1 S: all p : Person | c : Courses | c in p.enrolled implies Student.p
inv1 S: all p : Person | c : Courses | c in p.enrolled implies p in Student
inv1 S: all p : Person | c : Course | c in p.enrolled implies p in Student
inv1 C: all p : Person | all c : Course | c in p.enrolled implies p in Student
inv2 S: all p: Person ! all c : Course ! c in p.teaches implies p in Teacher
inv2 S: all p: Person | all c : Course ! c in p.teaches implies p in Teacher
inv2 S: all p : Person | all c : Course ! c in p.teaches implies p in Teacher
inv2 S: all p : Person | all c : Course ! c in p.teaches implies p in Professor
inv2 C: all p : Person | all c : Course | c in p.teaches implies p in Professor
inv3 B: all c : Course | all p : Professor | c in p.teaches
inv3 O: all c : Course | some p : Professor | c in p.teaches
inv4 C: all p : Project | one c : Course | p in c.projects
inv4 C: all p : Project | one c : Course | p in c.projects
inv5 C: all p : Person |all pro : Project |pro in p.projects implies p in Student	  all pro : Project | some p : Person | pro in p.projects
inv6 U: all s : Student| all p : Project | p in s.projects implies p in s.enrolled.projects
inv7 B: all s : Student | one p : Project | p in s.enrolled.projects
inv7 B: all s : Student | one p : Project | p in s.enrolled.projects and p in s.projects
inv7 B: all s : Student | lone p : Project | p in s.enrolled.projects and p in s.projects
inv7 B: all s : Student | all c : Course | lone p : Project| p in s.projects and p in s.enrolled.projects
inv7 U: all s : Student | all c : Course | lone p : Project| p in s.projects and c in s.enrolled and p in c.projects
inv8 B: all p: Professor | all c1,c2 : Course | c1 in p.teaches
inv8 S: all p: Professor | all c1 : Course | c in p.teaches implies c not in p.enrolled
inv8 U: all p: Professor | all c : Course | c in p.teaches implies c not in p.enrolled
inv9 B: all p1,p2: Professor | all c : Course | c in p1.teaches implies c not in p2.enrolled
inv9 B: all p1,p2: Professor | all c : Course | c in p1.teaches and p1 != p2 implies c not in p2.enrolled
inv9 B: all p1,p2: Professor | all c : Course | c in p1.teaches  implies c not in p2.enrolled
inv9 U: all p1,p2: Professor | all c : Course | c in p1.teaches and c in p2.teaches and p1 != p2  implies c not in p2.enrolled
inv9 B: all p1,p2: Professor | all c1,c2 : Course | c1 in p1.teaches and c1 in p2.teaches and p1 != p2  implies c2 not in p2.enrolled
inv9 U: all p1,p2: Professor | all c1,c2 : Course | c1 in p1.teaches and c1 in p2.teaches and c2 in p1.teaches and p1 != p2  implies c2 not in p2.enrolled
inv10 T: all c : Course | all p : Person | p in c.grades implies p in Student
inv10 C: all c : Course | all p : Person | p in c.grades.Grade implies p in Student
inv10 U: all c : Course | all p : Person | p in c.grades.Person implies p in Student
inv11 U: all c : Course | all p : Student | p in c.grades.Grade implies c in p.enrolled
inv12 B: all c : Course | all s : Student | c in s.enrolled implies one c.grades.Grade
inv12 B: all c : Course | lone g : Grade | all s : Student | c in s.enrolled and g in c.grades.Grade
inv12 T: all c : Course | lone g : Grade | all s : Student | c in s.enrolled and g in c.grades
inv12 B: all c : Course | lone g : Grade | all s : Student | c in s.enrolled implies (s->g) in c.grades
inv12 B: all c : Course | lone g : Grade | all s : Student | (s->g) in c.grades
inv12 U: all c : Course | all s : Student  | lone g : Grade | (s->g) in c.grades
inv12 B: all c : Course | all s : Student  | lone g : Grade | c in s.enrolled implies g in c.grades.Grade
inv12 U: all c : Course | all s : Student  | lone g : Grade | (s->g) in c.grades
inv13 T: all s : Student |all c : Course |all p : Project | s in c.grades.Grade.last implies p in s.projects and p in c.projects
inv13 T: all s : Student |all c : Course |all p : Project | s in c.grades.Grade.last implies c.projects&s.projects != none
inv13 T: all s : Student |all c : Course | s in c.grades.Grade.last implies c.projects&s.projects != none
inv13 U: all s : Student |all c : Course | s in c.grades.last implies c.projects&s.projects != none
inv14 U: all p1,p2 : Project | all s1,s2 : Student | p1 in s1.projects&s2.projects and s1 != s2 and p1 != p2 implies s1.projects&s2.projects-p1 = none
inv14 U: all p1 : Project | all s1,s2 : Student | p1 in s1.projects&s2.projects and s1 != s2 implies s1.projects&s2.projects-p1 = none
inv15 S: all s1,s2 : Students | all p : Project| all c : Course | p in s1.projects&s2,projects and p in c.projects and s1!=s2 implies (all g1,g2:Grades | g1 in s1.c.grades and g2 in s2.c.grades implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv15 S: all s1,s2 : Students | all p : Project| all c : Course | p in s1.projects&s2,projects and p in c.projects and 	  s1!=s2 implies (all g1,g2:Grades | g1 in s1.c.grades and g2 in s2.c.grades implies (g1=prev[g2] or g2=prev[g1] or	   g1=g2))
inv15 S: all s1,s2 : Students | all p : Project| all c : Course | p in s1.projects&s2,projects and p in c.projects and 	  s1!=s2 implies (all g1,g2 : Grade | g1 in s1.c.grades and g2 in s2.c.grades implies (g1=prev[g2] or g2=prev[g1] or	   g1=g2))
inv15 S: all s1,s2 : Students | all p : Project| all c : Course | p in s1.projects&s2,projects and p in c.projects and 	  s1!=s2 implies (all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1=prev[g2] or g2=prev[g1]or	  g1=g2))
inv15 S: all s1,s2 : Students | all p : Project| all c : Course | p in s1.projects&s2,projects and p in c.projects and	  	  s1!=s2 implies (all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1=prev[g2] or g2=prev[g1]or	  g1=g2))
inv15 S: all s1,s2 : Students | all p : Project| all c : Course | p in s1.projects&s2.projects and p in c.projects and	  s1!=s2 implies (all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1=prev[g2] or g2=prev[g1]or	  g1=g2))
inv15 B: all s1,s2 : Student | all p : Project| all c : Course | p in s1.projects&s2.projects and p in c.projects and	  s1!=s2 implies (all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1=prev[g2] or g2=prev[g1]or	  g1=g2))

