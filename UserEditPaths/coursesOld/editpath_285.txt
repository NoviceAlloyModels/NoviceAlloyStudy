NA H: THEME UPDATE
inv1 C: all p : Person | some p.enrolled implies p in Student
inv2 C: all p : Person | some p.teaches implies p in Professor
inv3 C: all c : Course | some teaches.c
inv4 T: all p : Project | one projects.p
inv4 T: all p : Project | one projects.p
inv4 C: all p : Project | one Course<:projects.p
inv5 C: all p : Person | some p.projects implies p in Student	    all p : Project | some Person<:projects.p
inv6 B: all s : Student | Course<:projects.(s.projects) in s.enrolled
inv7 U: all s : Student, c : Course | lone s.projects & c.projects
inv12 S: all s : Student |
inv10 B: all c : Course, p : Person | some p.(c.grades) <=> c not in p.teaches
inv10 B: all c : Course, p : Person | some p.(c.grades) => c not in p.teaches
inv11 U: all s : Student, c : Course | some s.(c.grades) => c in s.enrolled
inv12 U: all s : Student, c : Course | lone c.grades.s
inv12 U: all s : Student, c : Course | lone c.(grades.s)
inv12 U: all s : Student, c : Course | lone s.(c.grades)
inv10 C: all p : Person, c : Course | some p.(c.grades) implies p in Student
inv9 B: all p: Professor | no p.teaches & p.enrolled
inv9 B: all p1,p2: Professor, c : Course | c in p1.teaches and c in p2.teaches implies c not in p2.enrolled
inv9 B: all p1,p2: Professor, c : Course | c in p1.teaches and c in p2.teaches implies c not in (p2.enrolled + p1.enrolled)
inv9 B: all p1,p2: Professor, c : Course | (c in p1.teaches and c in p2.teaches) implies c not in (p2.enrolled + p1.enrolled)
NA H: THEME UPDATE
inv5 C: all p : Person | some p.projects implies p in Student	    all p : Project | some Person<:projects.p
inv12 U: all s : Student, c : Course | lone s.(c.grades)

