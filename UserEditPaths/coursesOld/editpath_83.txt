NA H: THEME UPDATE
inv1 S: all c:Course, p:person | p->c in enrolled implies p in Student
inv1 S: all c:Course, p:person | p->c in enrolled
inv1 C: all c:Course, p:Person | p->c in enrolled implies p in Student
inv2 C: all c:Course, p:Person | p->c in teaches implies p in Professor
inv3 O: all c:Course | one p: Professor | p->c in teaches
inv3 O: all c:Course | one p: Professor | p->c in teaches and p->c not in enrolled
inv3 O: all c:Course | one p: Professor | p->c in teaches	  all c:Course | all p: Professor | p->c not in enrolled
inv3 B: all c:Course | one p: Professor | p->c in teaches implies p->c not in enrolled
inv3 B: all c:Course | all p: Professor | p->c in teaches
inv3 B: all c:Course, p: Professor | p->c in teaches
inv3 O: all c:Course| one p: Professor | p->c in teaches
inv3 O: all c:Course| one p: Professor | p->c in teaches and p->c not in enrolled
inv3 O: all c:Course| one p: Professor | p->c in teaches	  	  all r:Course , x: Professor | x->r not in enrolled
inv3 B: all c:Course| one p: Person | p->c in teaches implies p in Professor and p->c not in enrolled
inv3 B: all c:Course| one p: Person | p->c in teaches implies p not in Student and p->c not in enrolled
inv3 B: all c:Course| one p: Person | p->c in teaches implies (p not in Student and p->c not in enrolled)
inv3 B: all c:Course| one p: Person | p->c in teaches implies (p in Professor and p not in Student and p->c not in enrolled)
inv3 B: all c:Course| one p: Person | (p in Professor and p not in Student and p->c not in enrolled) implies p->c in teaches
inv3 B: all c:Course| one p: Person | p in Professor implies p->c in teaches
inv3 O: all c:Course| one p: Person | p->c in teaches
inv3 B: all c:Course| one p: Person | p->c in teaches implies p in Professor
inv3 B: all c:Course| one p: Person | p in Professor implies p->c in teaches
inv3 B: all c:Course| one p: Person | p->c in teaches implies p not in Student
inv3 B: all c:Course| one p: Person | p->c in teaches implies (p in Professor and p not in Student and p->c not in enrolled)
inv4 C: all p:Project | one c : Course | c->p in projects
inv5 U: all p:Project , s: Person | s->p in projects implies s in Student
inv5 B: all p:Project , s: Person | s->p in projects implies s in Student and s not in Professor
inv5 B: all p:Project | one s: Person | s->p in projects implies s in Student and s not in Professor
inv6 S: all s: Student, c:Course, p: Project | s->p in project implies c->p in projects and p->c in enrolled
inv6 B: all s: Student, c:Course, p: Project | s->p in projects implies c->p in projects and p->c in enrolled
inv6 B: all s: Student, c:Course, p: Project | s->c in enrolled and c->p in projects implies s->p in projects
inv8 U: all p:Professor | p->p not in teaches
inv8 U: all p:Professor, c:Course | p->c in teaches implies p->c not in enrolled
inv9 U: all p,x:Professor, c:Course | p->c in teaches implies p->c not in enrolled and x->c not in enrolled and x->c in teaches implies x->c not in enrolled and p->c not in enrolled
NA H: THEME UPDATE
inv3 B: all c:Course| one p: Person | p->c in teaches implies (p in Professor and p not in Student and p->c not in enrolled)
inv3 C: all c:Course | some teaches.c
inv4 S: all p:Project | one Course <: porjects.p
inv4 C: all p:Project | one Course <: projects.p
inv1 B: teaches.Course in Professor
inv1 B: teaches.Course in Professor
inv2 C: teaches.Course in Professor
inv1 C: enrolled.Course in Student
inv5 B: all p:Project | one s: Person | s->p in projects implies s in Student and s not in Professor
inv5 T: some projects.Project in Student
inv5 S: all p:porject | Person <:proejcts.pr in Student	  all p:project | some pe:Person <: projects.pr
inv5 S: all p:porject | Person <:proejcts.p in Student	  all p:project | some pe:Person <: projects.pr
inv5 S: all p:project | Person <:projects.p in Student	  all p:project | some pe:Person <: projects.pr
inv5 S: all p:Project | Person <:projects.p in Student	  all p:Project | some pe:Person <: projects.pr
inv5 E: 
inv5 T: all p:Project | projects.Project in Student
inv5 T: all p:Project | projects.Project <:Project in Student
inv5 T: all p:Project | projects.Project in Student
inv5 T: all p:Project | projects.Project in Student
inv5 T: all p:Project | projects.Project in Student <:Person
inv5 T: all p:Project | projects.Project in Student
inv5 T: all p:Project | projects.Project in Student
inv5 U: all p:Project | Person<:projects.Project in Student
inv5 U: all p:Project | Person<:projects.p in Student
inv5 S: all p:Project | Person<:projects.p in Student	  all p:Project | some x:Person x<:projects.p
inv5 T: all p:Project | some s:Student | s.projects.p
inv5 U: all p:Project | some Student<:projects.p
inv5 S: all p:Project | Person<:projects.p in Student	  all p:Project | Some Person<:projects.p
inv5 C: all p:Project | Person<:projects.p in Student	  all p:Project | some Person<:projects.p
inv7 S: all s: Student, all c:Course | lone projects.c.enrolled.s
inv7 S: all s: Student, all c:Course | lone projects.c.enrolled in s
inv7 S: all s: Student, all c:Course | lone s.enrolled.c.Project
inv7 T: all c : Course | all s : c.enrolled | lone s.Project
inv5 C: all p:Project | some Student<:projects.p	  	  all p:Project | Person<:projects.p in Student	  all p:Project | some Person<:projects.p
inv7 U: all c : Course | all s : c.enrolled | lone s.projects
inv5 C: all p:Project | Person<:projects.p in Student	  all p:Project | some Person<:projects.p
inv5 C: all p:Project | Person<:projects.p in Student	  all p:Project | some Person<:projects.p
inv7 U: all c : Course | all s : c.enrolled | lone s.projects
inv7 T: all c : Course | all s : c.enrolled | lone s.projects.Project
inv7 U: all c : Course | all s : c.enrolled | lone s.projects
inv8 U: all p:Professor, c:Course | p->c in teaches implies p->c not in enrolled
inv9 B: all disj p1, p2: Professor| all c: Course | p1->c in teaches implies p2->c not in 	  enrolled
inv9 U: all disj p1, p2: Professor| all c: Course | p1->c in teaches implies p2->c not in 	  enrolled or p2->c in teaches implies p1->c not in enrolled
inv9 B: all disj p1, p2: Professor| one c: Course | p1->c in teaches implies p2->c not in 	  enrolled
inv9 B: all disj p1, p2: Professor| all c: Course | p1->c in teaches implies p2->c not in 	  enrolled

