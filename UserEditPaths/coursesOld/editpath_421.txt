NA H: THEME UPDATE
inv7 T: all s : Student | lone (s.enrolled.projects in s.projects)
inv7 U: all s : Student | lone (s.(Course<:projects))
inv7 U: all s : Student | lone (s.~(Course<:projects))
inv7 U: all s : Student | lone (s.~(Course<:projects))
inv7 B: all s : Student | lone (s.(Person<:projects).~(Course<:projects))
inv7 B: all s : Student, p1, p2 : Project, c : Course | c in s.enrolled and p1 in c.projects and p2 in c.projects implies p1 = p2
inv7 B: all s : Student, p1, p2 : Project | one c : Course | c in s.enrolled and p1 in c.projects and p2 in c.projects implies p1 = p2
inv7 B: all s : Student, p1, p2 : Project | one c : Course | c in s.enrolled and p1 in c.projects and p2 in c.projects implies p1 = p2
inv6 U: all s : Student | (Course<:projects).s.(Person<:projects) in s.enrolled
inv6 U: all s : Student | (Course<:projects).(Person<:projects).s in s.enrolled
inv6 U: all s : Student | s.projects in s.enrolled.projects
inv6 E: 
inv7 B: all s : Student | lone (s.enrolled.projects)
inv7 B: all s : Student | lone (s.^(enrolled.projects))
inv7 B: all s : Student | lone (s.enrolled.^(projects))
inv7 B: all s : Student | lone (s.enrolled.projects & s.projects)
inv7 U: all s : Student, c : s.enrolled | lone s.projects & c.projects
inv7 B: all s : Student, c : s.enrolled | lone s.projects & s.enrolled.projects
inv7 B: all s : Student | lone s.projects & s.enrolled.projects
inv7 U: all s : Student, c : s.enrolled | lone s.projects & c.projects
inv7 E: 
inv7 E: 
inv7 E: 
inv7 E: 
inv7 E: 
inv8 U: all p : Professor, c : Course | c in p.teaches implies c not in p.enrolled
inv8 B: all p : Professor, c : Course | p not in enrolled.c
inv8 B: all p : Professor, c : Course | c not in p.enrolled
inv8 U: all p : Professor, c : p.teaches | c not in p.enrolled
inv8 E: 
inv9 B: all p1, p2 : Professor, c: p1.teaches | c not in p2.enrolled
inv9 B: all p1, p2 : Professor, c : Course | c in p1.teaches implies c not in p2.enrolled
inv9 B: all p1, p2 : Professor, c : Course | p1 != p2 and c in p1.teaches implies c not in p2.enrolled
inv9 T: all p1, p2 : Professor, c : Course | p1 != p2 & p1 in teaches.c and p2 in teaches.c implies (p1 = p2)
inv9 B: all p1, p2 : Professor, c : Course | p1 != p2 and p1 in teaches.c and p2 in teaches.c implies (p1 = p2)
inv9 S: all p1, p2 : Professor, c : Course |  and c in p1.teaches and c in p2.teaches implies (all c2 : Course | c2 in p1.teaches implies p2 not in c2.enrolled )
inv9 U: all p1, p2 : Professor, c : Course |  c in p1.teaches and c in p2.teaches implies (all c2 : Course | c2 in p1.teaches implies p2 not in c2.enrolled)
inv9 U: all p1, p2 : Professor, c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches implies (all c2 : Course | c2 in p1.teaches implies p2 not in c2.enrolled)
inv9 B: all p1, p2 : Professor, c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches implies (all c2 : Course | c2 in p1.teaches)
inv9 U: all p1, p2 : Professor, c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches implies (all c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv9 U: all p1, p2 : Professor, c : Course | p1 != p2 and c in (p1.teaches & p2.teaches) implies (all c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv10 B: all p : Person, c : Course, g : Grade | (grades in c->p->g)implies p in Student
inv10 C: all p : Person, c : Course, g : Grade | (c->p->g in grades) implies p in Student
inv10 T: all p : Person, c : Course, g : Grade | (g in c.p.grades) implies p in Student
inv10 T: all p : Person, c : Course, g : Grade | (g in p.c.grades) implies p in Student
inv10 B: all p : Person, c : Course, g : Grade | (grades in c->p->g) implies p in Student
inv10 C: all p : Person, c : Course, g : Grade | (c->p->g in grades) implies p in Student
inv10 S: all p : Person, c : Course, g : Grade | (c->p->g in grades) implies p not in Teacher
inv10 B: all p : Person, c : Course, g : Grade | (c->p->g in grades) implies p not in Professor
inv10 C: all p : Person, c : Course, g : Grade | (c->p->g in grades) implies p in Student
inv10 T: all p : Person, c : Course, g : Grade | (g in c.p.grades) implies p in Student
inv10 T: all p : Person, c : Course, g : Grade | (g in p.c.grades) implies p in Student
inv10 T: all p : Person, c : Course, g : Grade | (g in p.enrolled.grades) implies p in Student
inv10 T: all p : Person, c : Course, g : Grade | (g in p.enrolled.grades) implies p in Student
inv10 U: all p : Person, c : Course, g : Grade | (g in c.grades.Grade) implies p in Student
inv10 C: all p : Person, c : Course, g : Grade | (p in c.grades.Grade) implies p in Student
inv11 U: all s : Student, c : Course, g : Grade | (g in c.grades.Person) implies c in s.enrolled

