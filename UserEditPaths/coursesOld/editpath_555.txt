NA H: THEME UPDATE
inv1 C: all p : Person | some p.enrolled implies p in Student
inv2 C: all p : Person | some p.teaches implies p in Professor
inv3 O: Professor.teaches&Course = Course
inv4 U: all disj c1, c2 : Course | all p : Project | p in c1.projects implies p not in c2.projects
inv4 C: all p : Project | p in Course.projects		all disj c1, c2 : Course | all p : Project | p in c1.projects implies p not in c2.projects
inv6 E: 
inv6 E: 
inv5 O: all p : Person | some p.projects implies p in Student and p not in Professor 	  	all p : Project | p in Student.projects
inv5 C: all p : Person | some p.projects implies p in Student	  	all p : Project | p in Student.projects
inv6 U: all s : Student | all w : Project | w in s.projects implies some c : Course | c in s.enrolled and w in c.projects
inv6 U: all s : Student | all w : Project | w in s.projects implies some c : Course | c in s.enrolled and w in c.projects
inv7 B: all s : Student | all c : Course | c in s.enrolled implies some c.projects
inv7 B: all s : Student | all c : Course | c in s.enrolled implies lone c.projects
inv7 O: all c : Course | lone c.projects
inv7 B: all s : Student | all c : Course | all w : Project | c in s.enrolled and w in s.projects implies lone c.projects
inv7 B: all s : Student | all c : Course | all w : Project | c in s.enrolled and w in s.projects implies lone s.projects
inv7 U: all s : Student | all c : Course | lone s.projects&c.projects
inv8 U: all p : Professor | no p.teaches&p.enrolled
inv9 B: all p : Professor | no p.teaches&Professor.teaches
inv9 B: all p : Professor | no p.teaches&Professor.enrolled
inv9 B: no Professor.teaches & Professor.enrolled
inv9 O: no Person.teaches & Person.enrolled
inv10 T: all c : Course | Grade.(Course.(c.grades)) in Student
inv10 T: all c : Course | Student.(Course.(c.grades)) in Student
inv10 T: all c : Course | Grade.Course.c.grades in Student
inv10 T: all c : Course | Course.c.grades in Student
inv10 T: all c : Course | c.grades in Student
inv10 T: all c : Course | Grade.c.grades in Student
inv10 U: all c : Course | Grade.(c.grades) in Student
inv10 B: all c : Course | Student.(c.grades) in Student
inv10 T: all c : Course | (c.grades) in Student
inv10 O: all c : Course | Person.(c.grades) in Student
inv10 U: all c : Course | Grade.(c.grades) in Student
inv10 C: all c : Course | (c.grades).Grade in Student
inv11 T: all s : Student | grades.Grade in s.enrolled
inv11 U: all s : Student | grades.Grade.s in s.enrolled
inv12 U: all c : Course | c.grades.Person->Person in iden
inv12 U: all c : Course | c.grades.Person->Person in iden
inv12 B: all c : Course | c.grades.Grade->Person in iden
inv12 T: all c : Course | c.grades.Grade in iden
inv12 B: all c : Course | c.grades.Grade in Student.iden
inv12 T: all c : Course | c.grades.Grade->Student in Student.iden
inv12 B: all c : Course | c.grades.Grade->Person in iden
inv12 U: all c : Course | all s : Student| lone c.grades.Grade&s
inv12 B: all c : Course | all s : Student| one c.grades.Grade & s
inv12 B: all c : Course | all s : Person | one c.grades.Grade & s
inv12 U: all c : Course | all s : Person | lone c.grades.Grade & s
inv12 U: all c : Course | all s : Student | lone c.grades.Grade & s
inv12 U: all c : Course | all s : Student | lone (c.grades.Grade)&s
inv12 B: all c : Course | all s : Student | one (c.grades.Grade)&s
inv12 B: all c : Course | all s : Student | one (c.grades)&s->Grade		all c : Course | all s : Student | one (c.grades.Grade)&s
inv12 U: all c : Course | all s : Student | lone (c.grades)&(s->Grade)
inv12 U: all c : Course | all s : Student | lone (c.grades.Grade)&s
inv12 U: all c : Course | all s : Student | lone (c.grades)&(s->Grade)
inv13 T: all c : Course | all s : Student |  first[c.grades.s] implies s.projects in c.projects
inv13 T: all c : Course | all s : Student |  first[c.grades.Grade] implies s.projects in c.projects
inv13 T: all c : Course | all s : Student |  first[c.grades.Student] implies s.projects in c.projects
inv13 T: all c : Course | all s : Student |  first[c.grades.Person] implies s.projects in c.projects
inv13 T: all c : Course | all s : Person |  first[s.c.grades] implies s.projects in c.projects
inv13 T: all c : Course | all s : Person |  first[s.(c.grades)] implies s.projects in c.projects
inv13 T: all c : Course | all s : Person |  first[c.grades] implies s.projects in c.projects
inv13 T: all c : Course | all s : Person |  first[c.grades.s] implies s.projects in c.projects
inv13 T: all c : Course | all s : Person |  first[c.grades.Grade] implies s.projects in c.projects
inv13 T: all c : Course | all s : Person |  first[grades.c.s] implies s.projects in c.projects
inv13 T: all c : Course | all s : Person |  first[c.grades] implies s.projects in c.projects
inv13 T: all c : Course | all s : Person |  first[s.c.grades] implies s.projects in c.projects
inv13 T: all c : Course | all s : Person |  first[s.(c.grades)] implies s.projects in c.projects
inv13 T: all c : Course | all s : Person |  s.(c.grades) implies s.projects in c.projects
inv12 U: all c : Course | all s : Student | lone (c.grades)&(s->Grade)
inv13 U: all c : Course | all s : Person |  s.(c.grades) in Grade
inv13 O: all c : Course | all s : Person |  s.(c.grades) in Student
inv13 T: all c : Course | all s : Person |  first[s.(c.grades)]
inv13 T: all c : Course | all s : Person |  first[Grade] = s.(c.grades) implies s.projects in c.projects
inv13 B: all c : Course | all s : Person |  no s.(c.grades).prev implies s.projects in c.projects
inv13 B: all c : Course | some s : Student |  no s.(c.grades).prev implies s.projects in c.projects
inv13 B: all c : Course | one s : Student |  no s.(c.grades).prev implies s.projects in c.projects
inv13 B: all c : Course | some s : Student |  no (s.(c.grades)).prev implies s.projects in c.projects
inv13 B: all c : Course | some s : Student | no (s.(c.grades)).next implies s.projects in c.projects
inv13 T: all c : Course | some s : Student | s in c.grades		all c : Course | some s : Student | no (s.(c.grades)).next implies s.projects in c.projects
inv13 B: all c : Course | some s : Student | s->Grade in c.grades		all c : Course | some s : Student | no (s.(c.grades)).next implies s.projects in c.projects
inv13 B: all c : Course | all s : Student | s->Grade in c.grades		all c : Course | some s : Student | no (s.(c.grades)).next implies s.projects in c.projects
inv13 B: all c : Course | all g : Grade | g in Student.(c.grades) implies  Student->g in c.grades		all c : Course | some s : Student | no (s.(c.grades)).next implies s.projects in c.projects
inv13 B: all c : Course | all g : Grade | g in Student.(c.grades) implies Student->g in c.grades		all c : Course | some s : Student | no (s.(c.grades)).next implies s.projects in c.projects
inv13 B: all c : Course | some s : Student | no (s.(c.grades)).next implies some p : Project | p in s.projects and p in c.projects
inv13 B: all c : Course | some s : Student | no (s.(c.grades)).next implies some p : Project | p in s.projects and p in c.projects
inv12 U: all c : Course | all s : Student | lone (c.grades)&(s->Grade)

