NA H: THEME UPDATE
inv14 B: all s1, s2 : Student | lone s1.projects & s2.projects
inv14 U: all disj s1, s2 : Student | lone s1.projects & s2.projects
inv1 T: all p : Person | some p.enrolled implies p is Student
inv1 B: all p : Professor | no p.enrolled
inv1 S: all p : Person | iff p is Professor no p.enrolled
inv1 B: all p : Professor | no p.enrolled & Course
inv1 S: no Professot & enrolled.Course
inv1 B: no Professor & enrolled.Course
inv1 T: enrolled.Course & Student
inv1 C: enrolled.Course in Student
inv2 C: teaches.Course in Professor
inv3 T: all p : Professor | p.teaches
inv3 B: all p : Professor | some p.teaches
inv3 O: Professor.teaches = Course
inv4 U: Course.projects = Project
inv4 U: Course.projects in Project
inv4 B: all c, c1 : Course | no c.projects & c1.projects
inv4 U: all disj c, c1 : Course | no c.projects & c1.projects
inv4 C: all p : Project | one projects.p <: Course
inv5 T: all p : Project | projects.p <: Person and projects.p in Student
inv5 T: all p : Project | projects.p in Student
inv5 U: all p : Project | projects.p <: Student in Student
inv5 T: all p : Project | projects.p <: Project in Student and some projects.p <: Project
inv5 T: all p : Project | projects.p <: Project in Student 	  	some projects.Project <: Person
inv5 B: all p : Project | projects.p <: Person in Student 	  	some projects.Project <: Person
inv5 B: some projects.Project <: Person		all p : Project | projects.p <: Person in Student
inv5 C: all p : Project | some projects.p <: Person		all p : Project | projects.p <: Person in Student
inv6 U: all s : Student | s.projects in s.enrolled.projects
inv7 B: all s : Student | lone s.projects & Course.projects
inv7 B: all s : Student | lone s.projects & s.enrolled.projects
inv7 T: all s : Student | lone s.projects & projects.Project
inv7 T: all s : Student | lone s.projects & projects.Project <: Course
inv7 B: all s : Student | lone s.projects & s.enrolled.projects
inv7 U: all s : Student, c : Course | lone s.projects & c.projects
inv8 T: all p : Professor | p not it ^(p.teaches.grades.Grade)
inv8 T: all p : Professor | p not in ^(p.teaches.grades.Grade)
inv8 B: all p : Professor | p not in p.teaches.^(grades.Grade)
inv8 B: all p : Professor | p not in p.teaches.*(grades.Grade)
inv8 U: all p : Professor | no p.teaches & p.enrolled
inv9 B: all p, p1 : Professor | no p.teaches & p1.enrolled
inv9 B: all disj p, p1 : Professor | no p.teaches & p1.enrolled
inv9 B: all p, p1 : Professor | some p.teaches & p1.teaches implies no p.teaches & p1.enrolled
inv10 C: Course.grades.Grade in Student
inv11 U: all s : Student, c : Course | s in (c.grades.Grade) implies c in s.enrolled
inv12 S: c : Course | one c.grades.Grade
inv12 B: all c : Course | one c.grades.Grade
inv12 B: all c : Course, s : Student | one s & c.grades.Grade
inv12 O: all c : Course | lone c.grades
NA H: THEME UPDATE
inv13 T: all c : Course | last[Person.(c.grades)] in projects.(c.projects) <: Person
inv13 S: last[Person.(c.grades)]
inv13 T: all c : Course | last[Person.(c.grades)]
inv13 T: all c : Course | last[c.grades]
inv13 B: all c : Course | one last[c.grades]
inv13 T: all c : Course | Person.last[c.grades] in projects.(c.projects) <: Person
inv13 C: all c : Course | last[c.grades] in projects.(c.projects) <: Person
inv14 U: all disj s1, s2 : Student | lone s1.projects & s2.projects
inv13 C: all c : Course | last[c.grades] in projects.(c.projects) <: Person
NA H: THEME UPDATE
inv14 T: all disj s1, s2 : Student | lone s1.projects & s2.projects implies s1.projects & s2.projects
inv14 T: all disj s1, s2 : Student | lone s1.projects & s2.projects implies s1.projects & s2.projects
inv14 T: all disj s1, s2 : Student | lone s1.projects & s2.projects implies s1.projects & s2.projects
inv14 T: all disj s1, s2 : Student | lone s1.projects & s2.projects implies s1.projects & s2.projects
inv14 T: all disj s1, s2 : Student | lone s1.projects & s2.projects implies s1.projects & s2.projects
inv14 B: all disj s1, s2 : Student | lone s1.projects & s2.projects implies no s1.projects & s2.projects
inv14 B: all disj s1, s2 : Student | lone s1.projects & s2.projects implies one s1.projects & s2.projects
inv14 U: all disj s1, s2 : Student | some s1.projects & s2.projects implies one s1.projects & s2.projects
inv13 C: all c : Course | last[c.grades] in projects.(c.projects) <: Person
inv15 E: 
inv14 U: all disj s1, s2 : Student | some s1.projects & s2.projects implies one s1.projects & s2.projects
inv15 T: all disj s, s1 : Student | all p : s.projects & s1.projects | s1.(Course <: projects).p.grades  next[s.(Course <: projects).p.grades]
inv15 S: all disj s, s1 : Student | all p : s.projects & s1.projects
inv15 B: all disj s, s1 : Student | all p : s.projects & s1.projects | one Course
inv15 T: all disj s, s1 : Student, p : s.projects & s1.projects | s.((Course <: projects).p).grades
inv15 T: all disj s, s1 : Student, p : s.projects & s1.projects | one s.((Course <: projects).p).grades
inv15 T: all disj s, s1 : Student, p : s.projects & s1.projects | some s.((Course <: projects).p).grades
inv15 E: 
inv8 U: all p : Professor | no p.teaches & p.enrolled

