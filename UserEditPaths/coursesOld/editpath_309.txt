NA H: THEME UPDATE
inv1 C: all c : Course, p: Person | c in p.enrolled implies p in Student
inv2 C: all c : Course | teaches.c in Professor
inv2 C: teaches.Course in Professor
inv3 B: some teaches.Course
inv3 T: some teaches.Course in Professor
inv3 T: some (teaches.Course in Professor)
inv3 C: all c : Course | some teaches.c
inv4 T: all p : Project| one projects.p
inv4 T: all p : Project| one projects.p
inv4 C: all p : Project| one Course <: projects.p
inv5 U: all p : Project | Person <: projects.p in Student
inv5 C: all p : Project | Person <: projects.p in Student and some  Person <: projects.p
inv5 T: all p : Project | some Person <: projects.p in Student
inv5 U: all p : Project | some c : Person <: projects.p | c in Student
inv6 S: all s : Students | Person <: s.projects in(Course <: s.enrolled.projects)
inv6 U: all s : Student | Person <: s.projects in(Course <: s.enrolled.projects)
inv6 U: all s : Student | Person <: s.projects in(Course <: s.enrolled.projects)
inv6 U: all s : Student | Student <: s.projects in (Course <: s.enrolled.projects)
inv6 B: all s : Student | s.projects in (Course <: s.enrolled.projects)
inv6 U: all s : Student | s.projects in ( s.enrolled.projects)
inv6 B: all s : Student | s.projects in (Course <: s.enrolled.projects)
inv6 U: all s : Student | s.projects in s.enrolled.projects
inv7 U: all s : Student, c : Course | c in s.enrolled implies lone c.projects & s.projects
inv8 U: all p : Professor | no p.enrolled & p.teaches
inv9 U: all p : Professor | Professor not in p.teaches
inv9 U: all p : Professor | Professor not in p.teaches.enrolled
inv9 U: all p : Professor | Professor not in enrolled.p.teaches
inv9 U: all p : Professor | Professor not in enrolled.p.teaches
inv9 U: all p : Professor | Professor not in enrolled.p.teaches
inv9 B: all p : Professor | Professor not in enrolled.(p.teaches)
inv9 B: all p : Professor | (Professor-p) not in enrolled.(p.teaches)
NA H: THEME UPDATE

