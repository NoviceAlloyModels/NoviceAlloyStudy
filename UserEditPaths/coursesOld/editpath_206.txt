NA H: THEME UPDATE
inv1 S: all p : Person, c : Couser | (p->c in enrolled) implies p in Student
inv1 S: all p : Person, c : Couse | (p->c in enrolled) implies p in Student
inv1 C: all p : Person, c : Course | (p->c in enrolled) implies p in Student
inv2 C: all p : Person , c : Course | (p->c in teaches) implies p in Professor
inv3 B: all c : Course | lone p : Professor | p->c in teaches
inv3 B: all c : Course | lone p : Professor | p->c in teaches
inv3 O: all c : Course | some p : Professor | p->c in teaches
inv4 C: all p : Project | one c : Course | c->p in projects
inv5 U: all project : Project , person : Person | person->project in projects implies person in Student
inv5 C: all project : Project , person : Person | person->project in projects implies person in Student	  all p : Project | some person : Person | person -> p  in projects
inv6 B: all p : Person , proj : Project, c : Course | p -> proj in projects implies p -> c in enrolled
inv6 B: all p : Student , proj : Project, c : Course | p -> proj in projects implies p -> c in enrolled
inv6 B: all p : Student , proj : Project | some c : Course | p -> proj in projects implies p -> c in enrolled
inv6 T: all p : Student , proj : Project | some c : Course | p -> proj in projects implies p -> c in enrolled and c->p in projects
inv6 B: all p : Student , proj : Project | some c : Course | p -> proj in projects implies p -> c in enrolled and c->proj in projects
inv6 B: all p : Student , proj : Project | all c : Course | p -> proj in projects implies p -> c in enrolled and c->proj in projects
inv6 B: all p : Student , proj : Project | some c : Course | p -> proj in projects implies p -> c in enrolled and c->proj in projects
inv7 B: all s : Student, c : Course | one p : Project | s->p in projects and c->p in projects
inv7 U: all s1 : Student | all p1,p2 : Project | all c1 : Course |	    (		(s1->p1 in projects) and (s1->p2 in projects) and	     	(c1->p1 in projects) and (c1->p2 in projects)	    )	  	implies p1=p2
inv8 S: all p1 : Professor | c : Course | p1->c in teaches implies p1 not in enrolled
inv8 S: all p1 : Professor | c : Course | p1->c in teaches implies p1->c not in enrolled
inv7 U: all s1 : Student | all p1,p2 : Project | all c1 : Course |	    (		(s1->p1 in projects) and (s1->p2 in projects) and	     	(c1->p1 in projects) and (c1->p2 in projects)	    )	  	implies p1=p2
inv8 U: all p1 : Professor, c : Course | p1->c in teaches implies p1->c not in enrolled
inv9 B: all p1,p2 : Professor, c : Course | p1->c in teaches and p1!= p2 implies p2->c not in enrolled
inv9 B: all p1,p2 : Professor, c : Course | p1->c in teaches and p1!= p2 implies p2->c not in enrolled
inv9 B: all p1,p2 : Professor, c : Course | p1->c in teaches and p1!= p2 implies p2->c not in enrolled
inv10 C: all p: Person, c:Course, g:Grade | c->p->g in grades implies p in Student
inv9 B: all p1,p2 : Professor, c : Course | p1->c in teaches and p1!= p2 implies p2->c not in enrolled
inv9 U: all p1,p2 : Professor | all c1:Course |	      (p1!=p2 and p1->c1 in teaches and p2->c1 in teaches) implies 	       (all c2 : Course | p1->c2 in teaches implies p2->c2 not in enrolled)

