NA H: THEME UPDATE
inv1 O: all p: Person | some enrolled implies p in Student
inv1 B: all p: Professor | no p.enrolled
inv1 S: all c: Course | p = enrolled.c implies p in Student
inv1 S: all c: Course | p: Person | p = enrolled.c implies p in Student
inv1 B: all p: Person | some enrolled implies p in (Person-Professor)
inv1 B: all p: Person | some p.enrolled implies p in (Person-Professor)
inv1 S: enrolled.Coruse in Student
inv1 C: enrolled.Course in Student
inv2 C: teaches.Course in Professor
inv3 S: some teacher.Course
inv3 S: some teacher.Course
inv3 B: some teaches.Course
inv3 C: all c: Course | some teaches.c
inv4 T: all p: Project | one projects.p
inv4 C: all p: Project | one Course :> projects.p
inv5 T: projects.Project in Student
inv5 U: Person :> projects.Project in Student
inv5 C: Person :> projects.Project in Student	  	all p: Project | some Person :> projects.p
inv6 U: all s: Student | s.projects in s.enrolled.projects
inv7 B: all s: Student | lone s.enrolled.projects
inv7 B: all s: Student | lone s.enrolled.projects & s.projects
inv6 U: all s: Student | s.projects in s.enrolled.projects
inv7 U: all s: Student | all c: s.enrolled | lone c.projects & s.projects
inv8 S: all t: Teacher | all c: t.teaches | t.enrolled in Course-c
inv8 U: all t: Professor | all c: t.teaches | t.enrolled in Course-c
inv9 S: all p: Professor | cour: p.enrolled | col: teaches.cour | no col.enrolled.cour
inv9 S: all p: Professor | cour: p.enrolled | col: teaches.cour | no col.enrolled in cour
inv9 S: all p: Professor | cour: p.enrolled | col: teaches.cour | no col.enrolled in cour
inv9 S: all p: Professor | cour: p.enrolled | col: teaches.cour | no col.enrolled in cour
inv9 E: 
inv9 S: all p: Professor | cour: p.enrolled | col: teaches.cour | no col.enrolled in cour
inv9 S: all p: Professor | cour: p.enrolled | col: teaches.cour | no col.enrolled in cour
inv9 S: all p: Professor | cour: p.enrolled | col: teaches.cour | no col.enrolled in cour
inv9 T: all p: Professor , cour: p.enrolled , col: teaches.cour | no col.enrolled in cour
inv9 B: all p: Professor , cour: p.teaches , col: teaches.cour |  col.enrolled in cour
inv9 B: all p: Professor , cour: p.teaches , col: teaches.cour |  cour not in col.enrolled
inv9 B: all p: Professor |all cour: p.teaches | all col: teaches.cour |  cour not in col.enrolled
inv9 U: all p: Professor |all cour: p.teaches | all col: teaches.p.teaches |  cour not in col.enrolled
NA H: THEME UPDATE
inv1 C: enrolled.Course in Student
inv2 C: teaches.Course in Professor
inv3 C: all c: Course | some teaches.c
inv4 C: all p: Project | one Course :> projects.p
inv5 C: Person :> projects.Project in Student	  	all p: Project | some Person :> projects.p
inv6 U: all s: Student | s.projects in s.enrolled.projects
inv7 U: all s: Student | all c: s.enrolled | lone c.projects & s.projects
inv8 U: all t: Professor | all c: t.teaches | t.enrolled in Course-c
inv9 B: all p: Professor |all cour: p.teaches | all col: teaches.cour |  cour not in col.enrolled
inv10 C: all p : Person | p in Course.grades.Grade implies p in Student
inv11 U: all s: Student | all c: Course | s in c.grades.Grade implies c in s.enrolled
inv12 B: all s: Student | lone ~(Course.grades).s
inv12 U: all s: Student | all c: Course | lone ~(c.grades).s
inv13 T: all s: Student | all c: Course | s in c.grades.last implies some s in c.projects
inv13 T: all s: Student | all c: Course | s in c.grades.last implies s in c.projects
inv13 U: all s: Student | all c: Course | s in c.grades.last implies some s.projects & c.projects
inv14 B: all s1, s2 : Student | lone s1.projects & s2.projects
inv14 U: all s1, s2 : Student | s1 != s2 implies lone s1.projects & s2.projects
inv15 T: all p : Project |  all c : Course | all s1,s2 : Student | (1 != s2 and p in s1.projects and p in s2.projects and p in c.projects) implies all g1, g2 : Grade | g1 in s1.c.grades and g2 in s2.c.grades implies (g1=prev[g2] or g2=prev[g1] or g1=g2)
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv9 B: all p1, p2 : Professor | all c: Course | c in p1.teaches and c in p2.teaches implies no p1.teaches & p2.enrolled
inv12 U: all s: Student | all c: Course | lone s.(c.grades)

