NA H: THEME UPDATE
inv1 C: enrolled.Course in Student
inv2 C: teaches.Course in Professor
inv3 C: all c : Course | some teaches.c
inv4 T: all p : Project | one projects.p
inv4 C: all p : Project | one projects.p :> Course
inv4 C: all p : Project | one Course <: projects.p
inv5 T: projects.Course in Student
inv5 T: Person <: projects.Course in Student
inv5 T: (Person <: projects.Course) in Student
inv5 T: (Person <: projects.Course)
inv5 T: (Person <: projects.Course) in Student
inv5 T: (Person <: projects.Course) in Student	  	all p : Project | some projects.p
inv5 T: (Person <: projects.Course) in Student	  	all p : Project | some projects.p :> Person
inv5 C: all p : Person | some p.projects => p in Student	  	all p : Project | some projects.p :> Person
inv6 S: all s : Student | Course <: projects.(x.projects) in x.enrolled
inv6 B: all x : Student | Course <: projects.(x.projects) in x.enrolled
inv7 U: all c : Course , s : Student | lone (c.projects & s.projects)
inv8 U: no teaches & iden
inv8 S: all t : Teacher | no (t.teaches & t.enrolled)
inv8 U: all p : Professor | no (p.teaches & p.enrolled)
inv9 U: all p : Professor | no (p.teaches & Professor)
inv9 U: no (Professor.teaches & Professor)
inv9 U: all disj p1, p2 : Professor, c : Course | (p1 + p2) in teaches.c => p1 not in p2.teaches and p2 not in p1.teaches
inv9 E: 
inv9 U: all disj p1,p2 : Professor | (p1 + p2) in enrolled.Course => p1 not in p2.teaches and p2 not in p1.teaches
inv9 B: no enrolled.Course & Professor
inv10 C: Course.grades.Grade in Student
inv11 U: all s : Student | (grades.Grade).s in s.enrolled
inv11 U: all s : Student | grades.Grade.s in s.enrolled
inv12 U: all s : Student, c : Course | lone s.(c.grades)
inv13 B: all s : Student, c : Course | s.(c.grades) = last => one (s.projects & c.projects)
inv9 S: all p : Professor | no (p.teach & Professor)
inv9 U: all p : Professor | no (p.teaches & Professor)
inv9 B: all p : Professor, c : Course | c = p.teaches => enrolled.c not in Professor
inv14 U: all disj s1,s2 : Student | lone (s1.projects & s2.projects)
NA H: THEME UPDATE
inv13 B: all s : Student, c : Course | s.(c.grades) = last => one (s.projects & c.projects)

