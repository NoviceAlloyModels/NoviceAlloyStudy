NA H: THEME UPDATE
inv1 B: all s:Person-Professor | all c:Course | s->c in enrolled
inv1 T: all pr:Person-Student | all c:Course | no pr->c in enrolled
inv1 T: all pr:Person-Student | all c:Course | no pr in enrolled
inv1 T: no Person-Student in Course
inv1 B: Person-Student not in Course
inv1 T: no Person-Professor in enrolled.Course
inv1 T: no Person-Professor in Course
inv1 O: all p:Person | all c:Course | p->c in enrolled implies p=Student
inv1 C: all p:Person | all c:Course | p->c in enrolled implies p in Student
inv2 C: all p:Person | all c:Course| p->c in teaches implies p in Professor
inv3 B: all c:Course | some p:Person | p->c in teaches implies p in Professor
inv3 O: all c:Course | some p:Person-Student | p->c in teaches
inv3 C: all c:Course | some p:Person | p->c in teaches
inv4 S: one c:Course | some p:Projects | c->p in projects
inv4 S: one c:Course | all p:Projects | c->p in projects
inv4 S: some c1,c2:Course | all p:Projects | c1->p in projects and c2->p in projects implies c1=c2
inv4 S: some c1,c2:Course | some p:Projects | c1->p in projects and c2->p in projects implies c1=c2
inv4 S: some c1,c2:Course | some p:Projects | c1->p in projects and c2->p in projects implies c1=c2
inv1 C: all p:Person | all c:Course | p->c in enrolled implies p in Student
inv2 C: all p:Person | all c:Course| p->c in teaches implies p in Professor
inv3 C: all c:Course | some p:Person | p->c in teaches
inv4 S: some c1,c2:Course | some p:Projects | c1->p in projects and c2->p in projects implies c1=c2
inv4 B: some c1,c2: Course | all p:Project | c1->p in projects and c2->p in projects implies c1=c2
inv4 B: some c1,c2: Course | some p:Project | c1->p in projects and c2->p in projects implies c1=c2
inv4 B: all c1,c2: Course | some p:Project | c1->p in projects and c2->p in projects implies c1=c2
inv4 B: some c1,c2: Course | all p:Project | c1->p in projects and c2->p in projects implies c1=c2
inv4 T: all p:Project | Course.projects.p
inv4 U: all x : Project | some y, z : Course | y->x in projects and z->x in projects implies y = z
inv4 B: one c:Course | all p:Project | c->p in projects
inv4 B: one c:Course | all p1,p2:Project | c->p1 in projects and c->p2 in projects
inv4 C: all x : Project | one projects.x <: Course
inv4 C: all x : Project | one projects.x & Course
inv5 U: all p:Person | all pro:Project | p->pro in projects implies p in Student and (some p1:Person | p1->pro in projects)
inv5 U: all p:Person | all pro:Project | p->pro in projects implies p in Student
inv5 C: all p:Person | all pro:Project | p->pro in projects implies p in Student 	    all pro:Project | some p1:Person | p1->pro in projects
inv5 C: all p:Person | all pro:Project | p->pro in projects implies p in Student 	    all pro:Project | some p1:Person | p1->pro in projects
inv6 B: all p:Person, c:Course | all pro:Project | p->pro in projects implies p in Student and p->c in enrolled
inv6 B: all p:Person | one c:Course | all pro:Project | p->pro in projects implies p in Student and p->c in enrolled
inv6 B: all p:Person | all pro:Project | p->pro in projects implies p in Student
inv5 U: all p:Person | all pro:Project | p->pro in projects implies p in Student
inv5 C: all p:Person | all pro:Project | p->pro in projects implies p in Student 	    all pro:Project | some p1:Person | p1->pro in projects
inv5 U: all p:Person | all pro:Project | p->pro in projects implies p in Student
inv6 B: all p:Person | all pro:Project | p->pro in projects implies p in Student 	  	all p:Person | some c:Course| p->c in enrolled
inv6 B: all p:Person | all pro:Project | one c:Course | p->c in enrolled implies p in Student
inv6 B: all p:Person | one c:Course | p->c in enrolled implies p in Student
inv6 B: all p:Person | one c:Course | p->c in enrolled implies p in Student	  	all p:Person | some pro:Project | p->pro in projects
inv6 B: all s:Student | one c:Course | s->c in enrolled implies (some p:Project | s->p in projects)
inv6 B: all s:Student, p:Project | s->p in projects implies (one c:Course | s->c in enrolled )
inv6 U: all s:Student, p:Project | s->p in projects implies (some c:Course | s->c in enrolled and c->p in projects)
inv6 U: all s:Student, p:Project | s->p in projects implies (some c:Course | s->c in enrolled and c->p in projects)
inv6 B: all s:Student | some p:Project | s->p in projects implies (some c:Course| s->c in enrolled and c->p in projects)
inv6 U: all s:Student | all p:Project | s->p in projects implies (some c:Course| s->c in enrolled and c->p in projects)
inv7 B: all s:Student | all p:Project | s->p in projects implies (lone c:Course| s->c in enrolled and c->p in projects)
inv7 B: all s:Student | all c:Course | s->c in enrolled implies (lone p:Project| s->p in projects )
inv7 B: all s:Student | all c:Course | s->c in enrolled implies (lone p:Project| c->p in projects )
inv7 B: all s:Student | lone p:Project | s->p in projects implies (some c:Course| s->c in enrolled)
inv6 U: all s:Student | all p:Project | s->p in projects implies (some c:Course| s->c in enrolled and c->p in projects)
inv7 B: all s:Student | lone p:Project | s->p in projects implies (some c:Course| s->c in enrolled)
inv8 U: all p1:Professor , z:Student | all c:Course | p1->c in teaches and z->c in enrolled implies p1 != z
inv9 B: all p1,p2:Professor | all c1,c2:Course | p1->c1 in teaches and p2->c2 in enrolled and c1 != c2 implies p1 != p2
inv9 B: all p1,p2:Professor | all c1,c2:Course | p1->c1 in teaches and p2->c2 in enrolled implies c1 != c2 and p1 != p2
inv9 B: all p1,p2:Professor | all c1,c2:Course | p1->c1 in teaches and p2->c2 in enrolled and p1 != p2 implies c1 != c2
inv9 S: all p2:Professor |all p:Person | all c1,c2:Course | p1->c1 in teaches and p->c1 in enrolled implies p in Student
inv9 B: all p2:Professor |all p:Person | all c1,c2:Course | p2->c1 in teaches and p->c1 in enrolled implies p in Student
inv9 B: all p2:Professor |all p:Person | all c1:Course | p2->c1 in teaches and p->c1 in enrolled implies p in Student
inv9 B: all p2:Professor |all p:Person | all c1:Course | p2->c1 in teaches and p->c1 in enrolled implies p not in Professor
inv9 B: all p2:Professor |all p:Person | all c1:Course | p2->c1 in teaches and p->c1 in enrolled and p != p2 implies p in Student
inv9 B: all p2:Professor |all p:Person | all c1:Course | p2->c1 in teaches and p->c1 in enrolled and p != p2 implies p not in Professor
inv9 B: all p2:Professor |all p:Person | all c1:Course | p2->c1 in teaches and p->c1 in enrolled and p != p2 implies p not in Professor
inv10 B: no Course.grades & Student->Grade
inv10 C: no Course.grades & (Person-Student)->Grade
inv10 B: no Course.grades & (Professor)->Grade
inv10 C: no Course.grades & (Person-Student)->Grade

