NA H: THEME UPDATE
inv1 S: all x:Person | x:enroled implies x in Student
inv1 S: all x:Person | x.enroled implies x in Student
inv1 T: all x:Person | x.enrolled implies x in Student
inv1 C: all x:Person, c:Course | x in enrolled.c implies x in Student
inv2 S: all x:Person, c:Course | x in teaches.c implies x in Teacher
inv1 C: all x:Person, c:Course | x in enrolled.c implies x in Student
inv2 C: all x:Person, c:Course | x in teaches.c implies x in Professor
inv3 O: all c:Course | one teaches.c
inv4 T: all p:Project | one projects.p
inv4 T: all p:Project | one projects.p
inv4 T: all p:Project | one Course.projects.p
inv4 T: all p:Project | one projects.p
inv4 T: all p:Project | one (projects <: Course).p
inv4 C: all p:Project | one (Course <: projects).p
inv3 O: all c:Course | one teaches.c
inv3 C: all c:Course | some teaches.c
inv5 U: all p:Project | some (Student <: projects).p
inv5 S: all p:Project | some x:Person x.project implies x in Student
inv5 S: all p:Project | some x:Person x.project.p implies x in Student
inv5 S: all p:Project | some x:Person | x.project implies x in Student
inv5 T: all p:Project | some x:Person | x.projects implies x in Student
inv5 U: all p:Project | some x:Person | p in x.projects implies x in Student
inv5 U: all p:Project,x:Person | p in x.projects implies x in Student
inv5 U: all p:Project,x:Person | x in projects.p implies x in Student
inv5 U: all p:Project, x:Person | x in (Person <: projects).p implies x in Student
inv6 S: all p:Project, s:Student | s in (Person <: projects).p implies p in x.enrolled.projects
inv6 U: all p:Project, s:Student | s in (Person <: projects).p implies p in s.enrolled.projects
inv6 S: all p:Project, s:Student | p in x.projects implies p in s.enrolled.projects
inv6 U: all p:Project, s:Student | p in s.projects implies p in s.enrolled.projects
inv6 U: all p:Project, s:Student | p in s.projects implies not p not in s.enrolled.projects
inv6 U: all p:Project, s:Student | p in s.projects implies p in s.enrolled.projects
inv7 B: all s:Student | lone s.enrolled.projects
inv7 B: all p:Project, s:Student | p in s.projects implies lone (Course <: projects).p
inv7 B: all p:Project, s:Student | p in s.projects implies one (Course <: projects).p
inv7 B: all p:Project, s:Student | p in s.projects implies lone (Course <: projects).p
inv7 S: all p:Project, s:Student |
inv7 S: all p:Project, s:Student |
inv8 B: all x:Professor | x.teaches != x.enrolled
inv8 T: all x:Professor, c:Course | c in x.teaches != c in x.enrolled
inv8 B: all x:Professor, c:Course | c in x.teaches implies c in x.enrolled
inv8 B: all x:Professor, c:Course | c in x.teaches iff c in x.enrolled
inv8 B: all x:Professor, c:Course | c in x.teaches iff c not in x.enrolled
inv8 B: all x:Professor, c:Course | x in teaches.c iff c not in x.enrolled
inv8 B: all x:Professor, c:Course | c in x.teaches iff c not in x.enrolled
inv8 B: all x:Professor, c:Course | x in teaches.x iff x not in enrolled.c
inv8 B: all x:Professor, c:Course | x in teaches.c iff x not in enrolled.c
inv8 U: all x:Professor, c:Course | c in x.teaches implies c not in x.enrolled
inv8 U: all x:Professor, c:Course | c in x.teaches implies c not in x.enrolled
inv9 B: all x,y:Professor, c:Course | c in x.teaches implies c not in y.enrolled and x!=y
inv9 B: all x,y:Professor, c:Course | x!=y and c in x.teaches implies c not in y.enrolled
inv9 B: all x,y:Professor, c:Course | x!=y implies c in x.teaches implies c not in y.enrolled
inv9 B: all x,y:Professor, c:Course | c in x.teaches implies c not in y.enrolled and x!=y
inv9 B: all x,y:Professor, c:Course | x!=y and c in x.teaches implies c not in y.enrolled
inv9 B: all x,y:Professor, c:Course | c in x.teaches implies c not in y.enrolled
inv9 B: all x,y:Professor, c:Course | x!=y implies c in x.teaches implies c not in y.enrolled
inv10 T: all g:Grade | g in enrolled.grades.g
inv10 T: all g:Grade | g in enrolled.grades.g
inv10 T: all x:Person | x in grades implies x in Student
inv11 T: all x:Student, g:Grade | g in x.grades implies x.enrolled.grades
inv11 T: all x:Student, g:Grade | g in x.grades implies x.enrolled.grades
inv14 S: all x, y:Student | one x.projects y.projects
inv14 S: all x, y:Student | one x.projects y.projects
inv14 T: all x, y:Student | one x.projects and y.projects
inv14 B: all x, y:Student | one x.projects & y.projects
inv14 B: all x, y:Student | one x.projects & y.projects and x != y
inv14 B: all x, y:Student | lone x.projects & y.projects and x != y
inv14 B: all x, y:Student | x!=y and lone x.projects & y.projects
inv14 U: all x, y:Student | x!=y implies lone x.projects & y.projects
inv5 C: all p:Project | some (Person <: projects).p		all p:Project, x:Person | x in (Person <: projects).p implies x in Student
inv5 U: all p:Project, x:Person |some (Person <: projects).p and x in (Person <: projects).p implies x in Student
inv5 U: all p:Project, x:Person |some (Person <: projects).p implies p in x.projects implies x in Student
inv5 C: all p:Project | some (Person <: projects).p		all p:Project, x:Person |some (Person <: projects).p and x in (Person <: projects).p implies x in Student
inv5 C: all p:Project | some (Person <: projects).p		all p:Project, x:Person |p in x.projects implies x in Student
inv5 U: all p:Project | some x:Person | p in x.projects implies x in Student
inv5 B: all p:Project | some x:Person | p in x.projects implies x not in Professor
inv5 B: all p:Project | some x:Person | p in x.projects implies x not in Student
inv5 U: all p:Project | some x:Person | p in x.projects implies x in Student
inv5 U: all p:Project | some (Student <: projects).p
inv5 U: all p:Project | some x:Person | p in x.projects and x in Student
inv5 B: all p:Project, x:Person | p in x.projects and x in Student
inv5 B: all p:Project, x:Student | p in x.projects
inv5 C: all p:Project | some (Person <: projects).p		all p:Project, x:Person | x in (Person <: projects).p implies x in Student
inv5 C: all p:Project | some (Person <: projects).p		all p:Project, x:Person | x in (Person <: projects).p implies x in Student
inv7 B: all p:Project, s:Student | one s.enrolled.projects & s.projects
inv7 B: all s:Student | lone s.enrolled.projects & s.projects
inv7 B: all s:Student, c:Course , p:Project| p in s.projects implies one (Course <: projects).p
inv7 T: all s:Student, c:Course , p:Project| p in s.projects implies lone p in c.projects
inv7 B: all s:Student, c:Course , p:Project| p in s.projects implies p in c.projects
inv7 B: all s:Student, c:Course , p:Project| p in s.projects implies p = s.projects & s.enrolled.projects
inv7 B: all s:Student, p:Project| p in s.projects implies p = s.projects & s.enrolled.projects
inv7 E: 

