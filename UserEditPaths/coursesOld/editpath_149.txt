NA H: THEME UPDATE
inv1 C: all c: Course, p : Person | p -> c in enrolled implies p in Student
inv4 C: all p: Project | one c: Course | c -> p in projects
NA H: THEME UPDATE
inv1 C: all c: Course, p : Person | p -> c in enrolled implies p in Student
inv5 U: all p:Project, p1: Person | p1 in projects.p implies p1 in Student
inv5 T: all p:Project, p1: Person | p1 in projects.p implies p1 in Student				    all p: Project |not lone projects.p
inv5 T: all p:Project, p1: Person | p1 in projects.p implies p1 in Student				    all p: Project |not lone Person in projects.p
inv5 O: all p:Project, p1: Person | p1 in projects.p implies p1 in Student				    all p: Project |not lone person: Person| person in projects.p
inv5 T: all p:Project, p1: Person | p1 in projects.p implies p1 in Student				    all p: Project |not lone projects.p
inv5 T: all p:Project, p1: Person | p1 in projects.p implies p1 in Student				    all p: Project |not lone Person.projects.p
inv5 T: all p:Project, p1: Person | p1 in projects.p implies p1 in Student				    all p: Project |some Person.projects.p
inv5 C: all p:Project, p1: Person | p1 in projects.p implies p1 in Student				    all p: Project |some p1: Person| p1 in projects.p
inv5 T: all p:Project, p1: Person | p1 in projects.p implies p1 in Student				    all p: Project |some Person in projects.p
inv5 T: all p:Project, p1: Person | p1 in projects.p implies p1 in Student				    all p: Project |some Person.projects.p
inv5 C: all p:Project, p1: Person | p1 in projects.p implies p1 in Student				    all p: Project |some p1: Person| p1 in projects.p
inv5 T: all p:Project, p1: Person | p1 in projects.p implies p1 in Student				    all p: Project |some projects.p
inv6 E: 
inv5 C: all p:Project, p1: Person | p1 in projects.p implies p1 in Student				    all p : Project | p in Person.projects
inv6 S: all s: Student, p: Project | one c: projects.p | s in projects.p implies s in enrolled.c
inv6 S: all s: Student, p: Project | one c: Course | s in projects.p implies s in enrolled.c
inv6 S: all s: Student, p: Project | one c: Course | s in projects.p
inv6 S: all s: Student, p: Project | all c: Course | s in projects.p
inv6 S: all s: Student, p: Project | some c: Course | s in projects.p
inv6 B: all s: Student, p: Project | some c: Course | s in projects.p implies s in enrolled.c
inv6 B: all s: Student, p: Project | one c: Course | s in projects.p implies s in enrolled.c
inv6 T: all s: Student, p: Project | one c: projects.p | s in projects.p implies s in enrolled.c
inv6 T: all s: Student, p: Project | one c: Course.projects.p | s in projects.p implies s in enrolled.c
inv6 B: all s: Student, p: Project | one c: Course | s in projects.p implies c = projects.p and s in enrolled.c
inv6 B: all s: Student, p: Project | one c: Course | s in projects.p implies (c = projects.p and s in enrolled.c)
inv6 B: all s: Student, p: Project | all c: Course | s in projects.p implies (c = projects.p and s in enrolled.c)
inv6 B: all s: Student, p: Project | some c: Course | s in projects.p implies (c = projects.p and s in enrolled.c)
inv7 T: all s: Student, p1, p2: Project | one c: Course | s in projects.p1  and s in projects.p2 implies projects.p1 != projects.p2
inv7 B: all s: Student, p1, p2: Project | some c1, c2: Course | s in projects.p1  and s in projects.p2 implies c1 = projects.p1 and  c2 = projects.p2 and c1 != c2
inv7 S: all s: Student, p1, p2: Project |  s in projects.p1 and s in projects.p2 implies c1 = projects.p1 and  c2 = projects.p2 and c1 != c2
inv7 T: all s: Student, p1, p2: Project |  s in projects.p1 and s in projects.p2 implies  projects.p1 !=  projects.p2
inv7 T: all s: Student, p1, p2: Project |  s in projects.p1 and s in projects.p2 implies  Course.projects.p1 !=  Course.projects.p2
inv7 B: all s: Student, p1, p2: Project |all c1, c2: Course | s in projects.p1  and s in projects.p2 implies c1 = projects.p1 and  c2 = projects.p2 and c1 != c2
inv7 B: all s: Student, p1, p2: Project |lone c1, c2: Course | s in projects.p1  and s in projects.p2 implies c1 = projects.p1 and  c2 = projects.p2 and c1 != c2
inv7 B: all s: Student, p1, p2: Project, c1, c2: Course | s in projects.p1  and s in projects.p2 implies c1 = projects.p1 and  c2 = projects.p2 and c1 != c2
inv7 B: all s: Student, p1, p2: Project, c1, c2: Course | s in projects.p1  and s in projects.p2 and c1 = projects.p1 and  c2 = projects.p2 implies c1 != c2
inv7 B: all s: Student| lone p1, p2: Project| some c1, c2: Course | s in projects.p1 and s in projects.p2 and c1 = projects.p1 and  c2 = projects.p2 implies c1 != c2
inv7 S: all s: Student, p1, p2: Project| one c1, c2: Course | s in projects.p1 and s in projects.p2 and c1 = projects.p1 and  c2 = projects.p2 implies c1 != c2 j
inv7 B: all s: Student, p1, p2: Project| one c1, c2: Course | s in projects.p1 and s in projects.p2 and c1 = projects.p1 and  c2 = projects.p2 implies c1 != c2
inv7 U: all s : Student, c : Course | lone s.projects & c.projects
inv8 B: all p: Professor | p in teaches.Course implies p not in enrolled.Course
inv8 B: all p: Professor| some c : Course | p in teaches.c implies p not in enrolled.c
inv8 U: all p: Professor, c : Course | p in teaches.c implies p not in enrolled.c
inv9 B: all p: Professor, c : Course | p in teaches.c implies Professor not in enrolled.c
NA H: THEME UPDATE
inv9 B: all p: Professor | no Professor.enrolled & p.teaches
inv9 B: all p: Professor | lone Professor.enrolled & p.teaches
inv9 B: all p: Professor | no Professor.enrolled & p.teaches
inv9 B: all p: Professor | no (Professor.enrolled & p.teaches)
inv9 B: all p: Professor | no Professor.enrolled & p.teaches
inv9 B: all p: Professor | lone Professor.enrolled & p.teaches
inv8 U: all p: Professor | no p.teaches & p.enrolled
inv9 S: all p: Professor, pe:People | no pe.enrolled & p.teaches or pe in Student
inv9 B: all p: Professor, pe:Person | (no pe.enrolled & p.teaches) or pe in Student
inv9 B: all p: Professor| (no Professor.enrolled & p.teaches)
inv9 B: all p1,p2: Professor| no (p1.teaches & p2.enrolled)
inv9 B: all p1,p2: Professor| no p1.enrolled & (p1.teaches & p2.teaches)
inv9 S: all p1,p2: Professor| (no p1.enrolled & (p1.teaches & p2.teaches)) and (no p2.enrolled & (p1.teaches & p2.teaches)
inv9 B: all p1,p2: Professor| (no p1.enrolled & (p1.teaches & p2.teaches)) and (no p2.enrolled & (p1.teaches & p2.teaches))
inv10 B: all c : Course, p : Person | some c.grades.p <=> p not in Professor
inv10 T: all c : Course, p : Person | some p.c.grades <=> p not in Professor
inv10 B: all c : Course, p : Person | some p.(c.grades) <=> p not in Professor
inv10 B: all c : Course, p : Person | some p.(c.grades) <=> c not in p.teaches
inv10 B: all c : Course| all p : Person | some p.(c.grades) <=> c not in p.teaches
inv11 S: all s : Student |
inv10 B: all c : Course, p : Person | some p.(c.grades) => c not in p.teaches
inv11 B: all s : Student, c : Course | some s.(c.grades) <=> c in s.enrolled
inv11 U: all s : Student, c : Course | some s.(c.grades) => c in s.enrolled
inv10 B: all c : Course, p : Person | some p.(c.grades) <=> c not in p.teaches
inv11 U: all s : Student, c : Course | some s.(c.grades) => c in s.enrolled
NA H: THEME UPDATE

