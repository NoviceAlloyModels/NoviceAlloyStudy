NA H: THEME UPDATE
inv1 B: no Professor.enrolled
inv1 T: none Professor.enrolled
inv1 B: no (Person & Professor).enrolled
inv1 B: no (Person - Professor).enrolled
inv1 C: all p:Person, c:Course | c in p.enrolled implies p in Student
inv2 S: all p:Person, c:Course | c in p.teaches implies p in Teacher
inv2 C: all p:Person, c:Course | c in p.teaches implies p in Professor
inv3 S: Courses in Person.teaches
inv3 C: Course in Person.teaches
inv4 C: all p:Project | one c:Course | p in c.projects
inv4 U: Project in Course.projects
inv4 B: one c:Course | Project in c.projects
inv4 B: all p:Project | one c:Course | Project in c.projects
inv4 C: all p:Project | one c:Course | p in c.projects
inv4 C: all p:Project | one c:Course | p in c.projects
inv6 U: all s:Student | no (s.projects - s.enrolled.projects)
inv5 B: all p:Person | some pr:Project | pr in p.projects implies p in Student
inv6 U: no (Student.projects - Student.enrolled.projects)
inv6 U: all s:Student | no (s.projects - s.enrolled.projects)
inv5 B: all p:Person | some pr:Project | pr in p.projects implies p in Student
inv5 T: all p:Person | p.projects implies p in Student	  	Project in Person.projects
inv5 T: all p:Person | p.projects implies p in Student	  	Project in Person.projects
inv5 C: all p:Person | some p.projects implies p in Student	  	Project in Person.projects
inv7 U: all s:Student, c:Course | c in s.enrolled implies lone (s.projects & c.projects)
inv8 B: no Professor.teaches & Professor.enrolled
inv8 B: no (Professor.teaches & Professor.enrolled)
inv8 U: all p:Professor | no (p.teaches & p.enrolled)
inv9 B: all p1,p2:Professor | some (p1.teaches & p2.teaches) implies no (p1.teaches & p2.enrolled) and no (p1.enrolled & p2.teaches)
inv10 S: all p:Person | some Course.grandes.p implies p in Student
inv10 U: all p:Person | some Course.grades.p implies p in Student
inv10 S: Course.grades.Grades in Student
inv10 C: Course.grades.Grade in Student
inv11 T: all s:Student | s.grades in s.enrolled
inv11 T: all s:Student | s.grades in s.enrolled
inv11 S: all s:Student | (s->Grades).grades in s.enrolled
inv11 T: all s:Student | (s->Grade).grades in s.enrolled
inv11 T: all s:Student | grades in s.enrolled
inv11 T: all s:Student | grades.s in s.enrolled
inv11 S: all s:Student | Grades.grade in s.enrolled
inv11 S: all s:Student | Grade.grade in s.enrolled
inv11 T: all s:Student | Grade.grades in s.enrolled
inv11 T: all s:Student | grades in s.enrolled
inv11 T: all s:Student | s.grades in s.enrolled
inv11 T: all s:Student | Course.grades in s.enrolled
inv11 T: all s:Student | grades.(s->Grade) in s.enrolled
inv11 T: all s:Student | grades.s in s.enrolled
inv11 U: all s:Student | grades.s.Grade in s.enrolled
inv11 T: all s:Student | s.Grade in s.enrolled
inv11 S: all s:Student | (s -> Grades) in s.enrolled
inv11 T: all s:Student | (s -> Grade) in s.enrolled
inv11 T: all s:Student | grades.(s -> Grade) in s.enrolled
inv11 T: all s:Student | s.Grade in s.enrolled
inv11 T: all s:Student | s. Grade in s.enrolled
inv11 T: all s:Student | grades.(Person -> Grade)
inv13 B: all s:Student, c:Course | s in c.grades.last implies one s.projects & c.projects
inv13 B: all s:Student, c:Course | s in Course.grades.last implies one s.projects & Course.projects
inv13 U: all s:Student, c:Course | s in Course.grades.last implies some s.projects & Course.projects
inv13 U: all s:Student, c:Course | s in c.grades.last implies some s.projects & c.projects
inv13 B: all s:Student, c:Course | s in c.grades.last implies lone s.projects & c.projects
inv13 B: all s:Student, c:Course | s in c.grades.last implies one s.projects & c.projects
inv13 U: all s:Student, c:Course | s in c.grades.last implies some s.projects & c.projects
inv14 B: all s1,s2:Student | lone s1.projects & s2.projects and s1 != s2
inv14 T: all s1,s2:Student | lone s1.projects & s2.projects -> s1 != s2
inv14 S: all s1,s2:Student | s1 != s2 -> lone s1.projects & s2.projects
inv14 U: all s1,s2:Student | s1 != s2 implies lone s1.projects & s2.projects

