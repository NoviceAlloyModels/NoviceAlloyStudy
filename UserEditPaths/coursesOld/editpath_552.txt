NA H: THEME UPDATE
inv1 U: no enrolled.Professor
inv1 B: no Professor.enrolled
inv1 T: no Professor.enrolled in Person
inv1 S: all p: Person | p.enrollled implies p in Student
inv1 T: all p: Person | p.enrolled implies p in Student
inv1 B: all p: Professor | no p.enrolled
inv1 B: all p: Professor | no p.enrolled & p.teaches
inv1 B: no (Person.teaches & Person.enrolled)
inv1 S: no Professor.enrolled.Couse
inv1 T: no Professor.enrolled.Course
inv1 B: enrolled.Course = Person - Professor
inv1 O: enrolled.Course = Student
inv1 B: Professor = Person - enrolled.Course
inv1 B: no Professor & enrolled.Course
inv1 B: no (Professor & enrolled.Course)
inv1 T: no Professor in enrolled.Course
inv1 B: Professor not in enrolled.Course
inv1 B: no (Person.teaches & Person.enrolled)
inv1 O: enrolled.Course = Student
inv1 B: no Professor.enrolled
inv7 S: all s: Student, some p: project | lone s.(projects.p)
inv7 S: all s: Student, some p: Project | lone s.(projects.p)
inv7 S: all s: Student, some p: Project | lone (s.enrolled & projects.p)
inv7 B: all s: Student, p: Project | lone (s.enrolled & projects.p)
inv1 T: not (some p: Professor | p.enrolled)
inv1 U: not (some p: Professor | p in Person.enrolled)
inv1 B: no Professor.enrolled
inv1 T: all p: Person | p.enrolled implies p in Student
inv1 T: no Professor.(enrolled.Course)
inv1 B: no Professor.enrolled
inv1 O: enrolled.Course = Student
inv1 B: enrolled.Course = Person - Professor
inv1 O: Person.enrolled = Person - Professor
inv1 O: Person.enrolled = Student
inv1 T: no p : Professor | p.enrolled
inv1 B: no p : Professor | p.enrolled in Course
inv1 B: all p : Professor | p.enrolled not in Course
inv1 B: all p : Professor | p not in enrolled.Course
inv1 O: all p : Person | p in enrolled.Course implies p in Student and p not in Professor
inv1 O: all p : Person | p in enrolled.Course implies (p in Student and p not in Professor)
inv1 O: all p : Person | p.enrolled in Course implies (p in Student and p not in Professor)
inv1 B: all p : Person | p.enrolled in Course implies p not in Professor
inv1 B: all p : Student | p.enrolled in Course implies p not in Professor
inv1 B: all p : Student | p.enrolled in Course implies p != Professor
inv1 O: all p : Person | p.enrolled in Course implies p = Student
inv2 O: all p : Person | p.teaches in Course implies p = Professor
inv1 O: all p : Person | p.enrolled in Course implies p = Student
inv1 C: all c: Course | enrolled.c in Student
inv2 C: all c: Course | teaches.c in Professor
inv4 S: all p: Project, some c: Course | c.projects & projects.p
inv4 S: all p: Project, some c: Course | projects.p in c.projects
inv4 S: all p: Project, some c: Course | projects.p in c
inv4 T: all p: Project | projects.p in Course
inv4 O: all p: Project | p in Course
inv4 T: some projects.Project
inv5 T: all p: Project | some (projects.p in Student)
inv5 T: all p: Project | (projects.p in Student)
inv5 T: all p: Project | some (projects.p in Student)
inv5 T: all p: Project | some projects.p in Student
inv5 T: all p: Project | projects.p in Student and some projects.p
inv5 T: all p: Project | projects.p in Student and some Student.projects
inv5 S: all p: Project, some s: Student | projects.p in Student and (some s.projects)
inv5 S: all p: Project, some s: Student | projects.p in Student and (s.projects)
inv5 S: all p: Project, some s: Student | projects.p in Student and s.projects
inv5 S: all p: Project some s: Student | projects.p in Student and s.projects
inv5 T: all p: Project | some s: Student | projects.p in Student and s.projects
inv5 S: all p: Project, some s: Student | projects.p in Student and s.projects
inv5 T: all p: Project | some s: Student | projects.p in Student and s.projects
inv5 T: all p: Project | one s: Student | projects.p in Student and s.projects
inv5 T: all p: Project | some s: Student | projects.p in Student and s.projects in Project
inv5 T: all p: Project | some s: Student | projects.p in Student and s.projects in Project
inv5 T: all p: Project | projects.p in Student and some projects.Project
inv5 T: all p: Project | projects.p in Student and some Student.projects.Project
inv5 T: all p: Project | projects.p in Student and some Student.projects
inv5 U: all p: Project | some Student.projects
inv5 T: some Student.projects and projects.Project in Student
inv5 T: some Student.projects and Person.projects.Project in Student
inv5 T: some Student.projects and some Student.(projects.Project)
inv10 S: all g: Grades | grades.g in Student
inv10 T: all g: Grade | grades.g in Student
inv10 T: all p: Person, g: Grade | p->g implies p in Student
inv10 S: all p: Student, g: Grade | Course.grandes implies p->g
inv10 T: all p: Student, g: Grade | Course.grades implies p->g
inv10 C: Course.grades in Student->Grade
inv12 S: lone Course.grade
inv12 O: lone Course.grades
inv12 T: lone (Course.grades in Student->Grade)
inv12 T: lone Grade in Course.grades
inv12 S: all s: Student, all c: Course | c.grades lone grades.s
inv12 S: all s: Student, all c: Course | c.grades lone grades.Grade
inv8 T: no Professor.teaches + iden
inv8 S: no Professor*.teaches
inv8 B: no Professor.^teaches
inv8 B: no Professor.*teaches
inv8 U: all p: Professor | no (p.teaches & teaches.p)
inv8 B: one p: Professor | no (p.teaches & teaches.p)
inv8 U: all p : Professor | Professor not in p.^teaches
inv8 T: all p : Professor | Professor not in teaches.^p
inv8 T: all p : Professor | Professor not in teaches.*p
inv8 B: all p : Professor | Professor not in p.*teaches
inv8 U: all p : Professor | no (p.teaches & enrolled.p)
inv8 U: all p : Professor | no (p.teaches & p.enrolled)
inv8 U: all p : Professor | no (p.teaches & p.enrolled)
inv9 B: all p : Professor | no (p.teaches & Professor.enrolled)
inv9 B: no (Professor.teaches & Professor.enrolled)
inv10 C: Course.grades in Student->Grade
inv3 U: all c: Course | some enrolled.c implies (some teaches.c)
inv3 T: all c: Course | some enrolled.c implies (some teaches.c in Professor)
inv3 T: all c: Course | some enrolled.c implies (some Professor.teaches.c)
inv3 B: all c: Course | some enrolled.c implies teaches.c in Professor
inv3 O: all c: Course | some (enrolled.c & teaches.c)
inv3 C: all c: Course | some teaches.c
inv4 T: all p: Project | one projects.p
inv4 T: all p: Project | one projects.p
inv4 T: all p: Project | one projects.p in Course
inv7 B: all s: Student | lone s.enrolled.projects
inv7 B: lone Student.enrolled.projects
inv7 T: lone Student.enrolled.projects in Project
inv7 B: lone Student.enrolled.projects
inv4 B: all c: Course | some c.projects
inv4 S: all c: Course | all c.projects
inv4 T: all c: Course | c.projects
inv4 S: all p: Project | c.projects.p
inv4 S: all p: Project, all c: Course | c.projects.p
inv4 T: all p: Project| all c: Course | c.projects.p
inv4 B: all p: Course.projects | Project in p
inv4 S: all p: Course.projects | Project in one p
inv4 B: all p: Course.projects | p in Course

