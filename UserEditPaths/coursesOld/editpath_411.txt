NA H: THEME UPDATE
inv1 S: all c:course | not some p:Person-Student | p->c in enrolled
inv1 C: all c:Course | not some p:Person-Student | p->c in enrolled
inv2 C: all c:Course | not some p:Person-Professor | p->c in teaches
inv3 S: all c:Course | some t:Teacher | t->c in teaches
inv3 O: all c:Course | some t:Professor | t->c in teaches
inv4 T: projects in Course one -> Project
inv4 T: projects <:Course  in Course one -> Project
inv4 T: projects in Course one -> Project
inv4 C: this/Course <: projects in Course one -> Project
inv5 T: projects in Student some -> Project
inv5 C: this/Person <: projects in Student some -> Project
inv1 C: enrolled . Course in Student
inv6 B: all s:Student, p:Project, c:Course | s->p in projects => s->c in enrolled
inv6 B: all s:Student, p:Project, c:Course | s->p in projects => s->c in enrolled
inv6 U: all s:Student, p:Project | s->p in projects => some c:Course | s->c in enrolled and c->p in projects
inv7 B: all s:Student, c:Course | s->c in enrolled => lone p:Project | c->p in projects
inv7 B: all s:Student, c:Course | s->c in enrolled => lone p:Project | c->p in projects
inv7 U: all s:Student, c:Course | s->c in enrolled => lone p:Project | c->p in projects and s->p in projects
inv8 U: all p:Professor | p->p not in teaches
inv8 U: all p:Professor, c:Course | p->c in teaches => p->c not in enrolled
inv9 B: all p:Professor, c:Course | not some p2:Professor | p->c in teaches and p2->c in enrolled
inv9 B: all p:Professor, c:Course |  p->c in teaches => not some p2:Professor | p2->c in enrolled
inv9 B: all p:Professor, c:Course | p->c in teaches => not some p2:Professor | p2->c in enrolled
inv9 B: all p:Professor, c:p.teaches | not some p2:Professor | p2->c in enrolled
inv9 B: all p:Professor, c: p.teaches | not some p2:Professor | p2->c in enrolled+teaches
inv9 U: all p : Professor, c : p . teaches |	  no (teaches . c  - p) & (p . teaches . ~enrolled)
inv9 B: all p:Professor | no (p.teaches.~enrolled) & Professor
inv8 U: all p:Professor | no (p.teaches & p.enrolled)
inv9 B: all p:Professor | no (p.teaches.~enrolled) & (Professor-p)
inv9 B: all p:Professor, c: p.teaches | not some p2:Professor | p2->c in enrolled
inv10 C: grades in Course -> Student -> Grade
inv11 B: grades in Course one -> Student -> Grade
inv11 U: all s:Student, c:Course, g:Grade | c->s->g in grades => s->c in enrolled
inv12 O: grades in Course -> Student -> one Grade
inv12 U: all s:Student, c:s.enrolled | lone g:Grade | c->s->g in grades
inv14 U: all disj s1, s2:Student | lone s1.projects & s2.projects

