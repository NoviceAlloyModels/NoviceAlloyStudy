NA H: THEME UPDATE
inv1 S: all p : Person - Students | p.enrolled = none
inv1 C: all p : Person - Student | p.enrolled = none
inv2 C: all p : Person - Professor | p.teaches = none
inv5 C: all p : Person - Student | p.projects = none	  all p : Project | p in Student.projects
inv3 S: all c : Course | c in professor.teaches
inv3 O: all c : Course | c in Professor.teaches
inv4 S: all c : Course | c in Projects.course
inv4 S: all p : Project | p in Course.projects	  all c1, c2 : Courses | all p : Projects | (p in c1.projects and p in c2.projects) implies (c1 = c2)
inv4 S: all p : Project | p in Course.projects	  all c1, c2 : Course | all p : Projects | (p in c1.projects and p in c2.projects) implies (c1 = c2)
inv4 C: all p : Project | p in Course.projects	  all c1, c2 : Course | all p : Project | (p in c1.projects and p in c2.projects) implies (c1 = c2)
inv6 U: all s : Student | all p : Project | p in s.projects implies p in s.enrolled.projects
inv7 S: all s : Student | all p1, p2 : Project | (p in s.projects and p in s.projects) implies (p1 = p2)
inv7 B: all s : Student | all p1, p2 : Project | (p1 in s.projects and p2 in s.projects) implies (p1 = p2)
inv7 O: all c : Course | all p1, p2 : Project | (p1 in c.projects and p2 in c.projects) implies (p1 = p2)
inv7 S: all s : Student | all p1, p2 : Project | all c : Course | (p1+p2) in s.projects and p1+p2 in c.projects) implies (p1 = p2)
inv7 S: all s : Student | all p1, p2 : Project | all c : Course | (p1+p2) in s.projects and (p1+p2) in c.projects) implies (p1 = p2)
inv7 U: all s : Student | all p1, p2 : Project | all c : Course | (p1+p2) in s.projects and (p1+p2) in c.projects implies (p1 = p2)
inv8 S: one p : Professor | p.teaches = some - p
inv8 S: one p : Professor | p.teaches = all - p
inv8 S: all p : Professor | p.teaches = all - p
inv8 U: all p1, p2 : Professor | p2 in p1.teaches implies p1 != p2
inv8 U: all p : Professor | p not in p.teaches
inv8 S: all p : Professor | all c : Courses | (c in p.teaches) implies (p not in c.enrolled)
inv8 U: all p : Professor | all c : Course | (c in p.teaches) implies (p not in c.enrolled)
inv8 U: all p : Professor | all c : Course | (c in p.teaches) implies (c not in p.enrolled)
inv9 S: all p : Professor |
inv9 S: all p : Professor |
inv9 S: all p : Professor |
inv9 S: all p : Professor |
inv10 C: all c : Course | all p : Person | all grade : Grade | (p -> grade in c.grades) implies (p in Student)
inv10 C: all c : Course | all p : Person | p in c.grades.Grade implies p in Student
inv11 S: all c : Course | all s : Student | all g : Grade | (s->grade in c.grades) implies (s in c.enrolled)
inv11 B: all c : Course | all s : Student | all g : Grade | (s->g in c.grades) implies (s in c.enrolled)
inv11 B: all c : Course | all s : Student | s in c.grades.Grade implies (s in c.enrolled)
inv11 U: all c : Course | all s : Student | s in c.grades.Grade implies (c in s.enrolled)
inv12 B: all s1,s2 : Student | all g1,g2 : Grade | all c : Course | s1->g1 in c.grades and s2->g2 in c.grades implies s1 != s2
inv12 B: all c : Course | all s : Student | all g : Grade | c in s.enrolled implies s->g in c.grades	  all s1, s2 : Student | all c : Course | (s1 in c.grades.Grade) and (s2 in c.grades.Grade) implies (s1 != s2 and s1 in c.enrolled and s2 in c.enrolled)
inv12 B: all c : Course | all s : Student | all g : Grade | c in s.enrolled implies s->g in c.grades	  all s1, s2 : Student | all c : Course | (s1 in c.grades.Grade) and (s2 in c.grades.Grade) implies (s1 != s2 and c in s1.enrolled and c in s2.enrolled)
inv12 B: all c : Course | all s : Student | all g : Grade | c in s.enrolled implies s->g in c.grades	  all s1, s2 : Student | all c : Course | s1 in c.grades.Grade and s2 in c.grades.Grade implies s1 != s2 and c in s1.enrolled and c in s2.enrolled
inv12 T: all s : Student | all g1, g2 : Grade | all c : Course | s->g1 in c.grades.Grade and s->g2 in c.grades.Grade implies g1 = g2
inv12 U: all s : Student | all g1, g2 : Grade | all c : Course | s->g1 in c.grades and s->g2 in c.grades implies g1 = g2
inv14 B: all s1, s2 : Student | all p1, p2 : Project | (p1+p2) in s1.projects and (p1+p2) in s2.projects implies p1!=p2 and s1!=s2
inv14 U: all s1, s2 : Student | all p1, p2 : Project | (p1+p2) in s1.projects and (p1+p2) in s2.projects and s1!=s2 implies p1=p2
inv14 B: all s1, s2 : Student | all p : Project | p in s1.projects and p in s2.projects  implies s1!=s2
inv14 U: all s1, s2 : Student | all p1, p2 : Project | (p1+p2) in s1.projects and (p1+p2) in s2.projects and s1!=s2 implies p1=p2
inv9 U: all p1,p2 : Professor | all c1:Course | (p1!=p2 and c1 in p1.teaches and c1 in p2.teaches) implies (all c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv13 U: all s : Student | all c : Course | s in c.grades.last implies (some p : Project | p in c.projects and p in s.projects)
inv4 U: all c1, c2 : Course | all p : Project | (p in c1.projects and p in c2.projects) implies (c1 = c2)
inv4 C: all p : Project | p in Course.projects	  all c1, c2 : Course | all p : Project | (p in c1.projects and p in c2.projects) implies (c1 = c2)

