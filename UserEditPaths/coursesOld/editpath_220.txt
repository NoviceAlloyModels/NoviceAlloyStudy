NA H: THEME UPDATE
inv1 C: all p : Person , c:Course | c in p.enrolled implies p in Student
inv2 C: all p : Person , c:Course | c in p.teaches implies p in Professor
inv3 O: all c : Course | some p:Professor | c in p.teaches
inv3 O: all c : Course | some p:Professor | c in p.teaches
inv4 B: all c : Course | one p : Project | p in c.projects
inv4 B: one c : Course | all p : Project | p in c.projects
inv5 S: all s : Person | some p : Project | p in s.projects implies s in student
inv4 B: one c : Course | all p : Project | p in c.projects
inv5 B: all s : Person | some p : Project | p in s.projects implies s in Student
inv5 U: all s : Person,p : Project | p in s.projects implies s in Student
inv5 C: all s : Person,p : Project | p in s.projects implies s in Student	  all p:Project | some s:Person | p in s.projects
inv6 S: all s:Student, p:Project, c:Course | p in s.projects | implies p in c.projects and s in c.enrolled
inv6 B: all s:Student, p:Project, c:Course | p in s.projects implies p in c.projects and s in c.enrolled
inv6 B: all s:Student, p:Project, c:Course | p in s.projects implies p in c.projects and c in s.enrolled
inv6 B: all s:Person-Professor, p:Project, c:Course | p in s.projects implies p in c.projects and c in s.enrolled
inv6 U: all s:Student, p:Project | p in s.projects implies (some c : Course | p in c.projects and c in s.enrolled)
inv6 S: all s:Student | no s.projects & (Courses-s.enrolled).projects
inv6 B: all s:Student | no s.projects & (Course-s.enrolled).projects
inv7 B: all s:Student | one s.projects & s.enrolled.projects
inv7 B: all s:Student, c:Course | c in s.enrolled implies one s.projects & c.projects
inv7 U: all s:Student, c:Course | c in s.enrolled implies lone s.projects & c.projects
inv8 C: all p:Person | no p.teaches & p.enrolled
inv9 B: all p:Person | no p.teaches & (Professor-p).enrolled
inv9 B: all p:Professor | no p.teaches & (Professor-p).enrolled
inv9 B: all p:Professor | no (Professor-p).enrolled & p.teaches
inv9 B: all x : Professor | no (Professor-x).enrolled & x.teaches
inv9 B: all x : Professor | no (Professor-x).enrolled & x.teaches
inv9 B: all p1 : Professor, c:Course | c in p1.teaches implies c not in (Professor-p1).enrolled
inv9 B: all p1,p2 : Person, c:Course | c in p1.teaches and c in p2.enrolled implies p2 not in Professor
inv9 B: all p1,p2 : Professor, c:Course | c in p1.teaches implies c not in p2.enrolled
inv10 S: all Course.grades & Student.grades
inv10 S: all Course.grades & Student->grades
inv10 T: set Course.grades & Student->grades
inv10 T: no Course.grades & (Person-Student)->grades
inv9 B: all p1,p2 : Professor, c:Course | c in p1.teaches implies c not in p2.enrolled
inv10 C: no Course.grades & (Person-Student)->Grade
inv10 S: no Courses.grades & (Person-Students)->grades
inv10 T: no Course.grades & (Person-Student)->grades
inv10 C: no Course.grades & (Person-Student)->Grade
inv11 U: all s:Student | no (Course-s.enrolled).grades & s->Grade
inv11 B: all s:Student | one (Course-s.enrolled).grades & s->Grade
inv12 T: all s:Student , c:Course | lone c->grades & s->Grade
inv12 U: all s:Student , c:Course | lone c.grades & s->Grade
inv11 U: all s:Student | no (Course-s.enrolled).grades & s->Grade
inv10 C: no Course.grades & (Person-Student)->Grade
inv14 B: all disj s1,s2 : Student, p : Project | p in s1.projects and p in s2.projects implies no Project-p & (s1.projects+s2.projects)
inv14 U: all disj s1,s2 : Student, p : Project | p in s1.projects and p in s2.projects implies no (s1.projects-p) & (s2.projects-p)
inv1 C: all p : Person , c:Course | c in p.enrolled implies p in Student
inv6 B: all s:Student | no s.projects & (Course-s.enrolled).projects
inv9 B: all p1,p2 : Professor, c:Course | c in p1.teaches implies c not in p2.enrolled
inv9 B: all disj p1,p2 : Professor, c:Course | c in p1.teaches implies c not in p2.enrolled
inv7 U: all s:Student, c:Course | c in s.enrolled implies lone s.projects & c.projects
inv10 C: no Course.grades & (Person-Student)->Grade
inv9 B: all x : Professor | no (Professor-x).enrolled & x.teaches
inv12 U: all s:Student , c:Course | lone c.grades & s->Grade
inv14 U: all disj s1,s2 : Student, p : Project | p in s1.projects and p in s2.projects implies no (s1.projects-p) & (s2.projects-p)

