NA H: THEME UPDATE
inv1 T: Person->enrolled in Student
inv1 T: enrolled in Student
inv1 C: enrolled in Student->Course
inv2 C: teaches in Professor->Course
inv3 T: teaches != none
inv3 T: Professor->Course != none
inv3 B: teaches in Professor->Course
inv3 U: teaches in Person->Course
inv3 B: teaches = Professor->Course
inv2 T: Person->teaches = Professor->Course
inv3 B: teaches = Professor->Course
inv3 B: teaches = Professor->Course
inv2 T: all p:Person,c:Course | p->c implies p in Professor
inv3 B: teaches = Professor->Course
inv2 S: courses in Professor->Course
inv2 C: teaches in Professor->Course
inv2 C: teaches in Professor->Course
inv3 O: teaches in Professor some->Course
inv4 S: Project = Courses one -> projects
inv4 S: Project in Courses one -> projects
inv4 T: Project in Course one -> projects
inv4 S: Project = Course one -> projects
inv4 T: Course one -> projects
inv4 S: all p:Project | one c1,c2:Course | c1->p in Projects and c2->p in Projects implies c1=c2
inv3 O: teaches in Professor some->Course
inv4 B: all p:Project | one c1,c2:Course | c1->p in projects and c2->p in projects implies c1=c2
inv4 B: all p:Project | one c1,c2:Course | c1->p in projects and c2->p in projects implies c1=c2
inv5 U: all p:Project | some pe:Person | pe->p in projects and pe in Student
inv4 B: all p:Project | one c1,c2:Course | c1->p in projects and c2->p in projects implies c1=c2
inv4 B: all p:Project | one c1,c2:Course | no p1:Person | c1->p in projects and c2->p in projects implies c1=c2 and p1->p in projects
inv4 S: Course <: projects in Course one -> Project
inv4 C: Course <: projects in Course one -> Project
inv5 C: Person <: projects in Student some -> Project
inv6 B: all s:Student,p:Project,c:Course | s->p in projects and c->p in projects implies s->c in enrolled
inv7 U: all s:Student,c:Course | lone p:Project | s->p in projects and c->p in projects and s->c in enrolled
inv8 U: all p:Professor | p->p not in teaches
inv8 U: no p:Professor | p->p in teaches
inv8 B: no p:Professor| all c:Course | p->c in teaches and p->c in enrolled
inv8 U: all p:Person, c:Course | p->c in teaches and p->c in enrolled implies p not in Professor
inv9 B: all p1,p2:Professor,c:Course | p1->c in teaches implies p2->c in enrolled
inv9 B: all p1,p2:Professor,c:Course | p1->c in enrolled implies p2->c not in teaches
inv9 T: Professor->teaches & Professor->enrolled = none
inv9 B: all p1,p2:Professor,c:Course | p1->c in enrolled implies p2->c not in teaches
inv9 B: all p1:Person,p2:Professor,c:Course | p1->c in enrolled and p2->c in teaches implies p1 not in Professor
inv9 T: all p1,p2:Person,c:Course | p1->c in enrolled and p2->c in teaches implies (p1 or p2) not in Professor
inv9 B: all p1,p2:Person,c:Course | p1->c in enrolled and p2->c in teaches implies (p1 + p2) not in Professor
inv10 S: all p:Person,c:Course,g:Grade | p2->c->g in grades implies p in Student
inv10 U: all p:Person,c:Course,g:Grade | p->c->g in grades implies p in Student
inv9 B: all p1,p2:Person,c:Course | p1->c in enrolled and p2->c in teaches implies (p1 + p2) not in Professor
inv9 B: all p1,p2:Person,c:Course | p1->c in enrolled and p2->c in teaches implies (p1 + p2) not in Professor
inv10 O: all p:Person,c:Course,g:Grade | c->p->g in grades and p in Student
inv10 C: all p:Person,c:Course,g:Grade | c->p->g in grades implies p in Student
inv11 U: all s:Student,c:Course,g:Grade | c->s->g in grades implies s->c in enrolled
inv12 S: all s:Student,c:Course,g:Grade | c->s-> one g in grades
inv12 B: all s:Student,c:Course | one g:Grade | c->s->g in grades
inv12 U: all s:Student,c:Course | lone g:Grade | c->s->g in grades
inv13 T: all s:Student,c:Course,g:Grade| one g1:Grade | c->s->g1 in grades and c->s->g in grades and g1>=g implies (one p:Project | c->p in projects and s->p in projects)
inv13 T: all s:Student,c:Course,g:Grade| one g1:Grade | c->s->g1 in grades and c->s->g in grades and g1 >= g implies (one p:Project | c->p in projects and s->p in projects)
inv13 T: all s:Student,c:Course,g:Grade| one g1:Grade | c->s->g1 in grades and c->s->g in grades and (g1 >= g) implies (one p:Project | c->p in projects and s->p in projects)
inv13 T: all s:Student,c:Course,g:Grade| one g1:Grade | c->s->g1 in grades and c->s->g in grades and (g>=g) implies (one p:Project | c->p in projects and s->p in projects)
inv13 T: all s:Student,c:Course,g:Grade| one g1:Grade | c->s->g1 in grades and c->s->g in grades and (g>=g) implies (one p:Project | c->p in projects and s->p in projects)
inv14 B: all s1,s2:Student,p1,p2:Project | s1->p1 in projects and s2->p1 in projects and s1->p2 in projects and s2->p2 in projects implies p1=p2

