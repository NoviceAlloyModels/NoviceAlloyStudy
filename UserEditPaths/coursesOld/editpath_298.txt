NA H: THEME UPDATE
inv1 C: all p : Person | all c : Course | p->c in enrolled implies p in Student
inv1 S: all p : Person | c : Course | c in p.enrolled implies p in Student
inv1 C: all p : Person | all c : Course | c in p.enrolled implies p in Student
inv1 C: all p : Person | all c : Course | c in p.enrolled implies p in Student
inv1 C: all p : Person | all c : Course | c in p.enrolled implies p in Student
inv2 C: all p : Person | all t : Course | t in p.teaches implies p in Professor
inv3 B: all p : Person | all c1,c2 : Course | c1 in p.enrolled and c2 in p.teaches implies c1 in c2
inv3 B: all p : Person | all c1,c2 : Course | c1 in p.enrolled and c2 in p.teaches implies c2 in c1
inv3 S: all c : Course | some p : Professor | c1 in p1.teaches
inv3 O: all c : Course | some p : Professor | c in p.teaches
inv4 S: all p : Projects | some c : Course | p in c.projects
inv4 U: all p : Project | some c : Course | p in c.projects
inv4 C: all p : Project | one c : Course | p in c.projects
inv5 B: all p : Person | all pro : Project | pro in p.projects and p in Student
inv5 U: all p : Person | all pro : Project | pro in p.projects implies p in Student
inv5 U: all p : Project | some pe : Person | p in pe.projects implies pe in Student
inv5 B: all p : Project | all s : Student | p in s.projects 	  all p : Project | some pe : Person | p in pe.projects implies pe in Student
inv5 C: all p : Project | some s : Student | p in s.projects 	  all p : Project | all pe : Person | p in pe.projects implies pe in Student
inv6 B: all p : Person | all c : Course | c in p.enrolled implies c.projects in p.projects
inv6 B: all p : Person | all c : Course | c in p.enrolled implies p.projects in c.projects
inv6 S: all p : Person | all pr : Project | pr in p.projects implies (some c : Course | pr in c1.projects and c in p.enrolled)
inv6 C: all p : Person | all pr : Project | pr in p.projects implies (some c : Course | pr in c.projects and c in p.enrolled)
inv7 B: all s : Student | one proj : Project | proj in s.projects implies proj in s.enrolled.projects
inv7 U: all s : Student | all p1,p2 : Project | all c : Course | (p1 in s.projects and p2 in s.projects and p1 in c.projects and p2 in c.projects) implies p1 = p2
inv7 B: all s : Student | all p1,p2 : Project | all c : Course | (p1 in s.projects and p2 in s.projects and p1 in c.projects and p2 in c.projects) implies p1 = p2		  all s : Student | all p : Project | all c1, c2 : Course | p in c1.projects and p in c2.projects and p in s.projects implies c1 = c2
inv7 B: all s : Student | all p : Project | all c1, c2 : Course | p in c1.projects and p in c2.projects and p in s.projects implies c1 = c2
inv7 U: all s : Student | all p1,p2 : Project | all c : Course | p1 in s.projects and p2 in s.projects and p1 in c.projects and p2 in c.projects implies p1 = p2
inv8 B: all p : Professor | all c : Course | c not in p.enrolled
inv8 U: all p : Professor | all c : Course | c in p.teaches implies c not in p.enrolled
inv9 B: all p : Professor | all c : Course | c in p.teaches implies c not in p.enrolled
inv9 B: all p1,p2 : Professor | all c : Course | p1 != p2 and c in p1.teaches implies c not in p2.enrolled
inv9 S: all p1,p2 : Professor | all c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches (some c2 : Course | c2 in p1.teaches implies 2 not in p2.enrolled
inv9 S: all p1,p2 : Professor | all c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches (some c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv9 B: all p1,p2 : Professor | all c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches and (some c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv9 U: all p1,p2 : Professor | all c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches implies (some c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv9 U: all p1,p2 : Professor | all c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches implies (all c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv9 B: all p1,p2 : Professor | one c : Course | p1 != p2 and c in p1.teaches implies c not in p2.enrolled
inv9 B: all p1,p2 : Professor | some c : Course | p1 != p2 and c in p1.teaches implies c not in p2.enrolled
inv9 B: all p1,p2 : Professor | some c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches implies c not in p2.enrolled
inv10 S: all p : Person | g : Grade | g in p.enrolled.grades implies p in Student
inv10 S: all p : Person | c : Course | g : Grade | c in p.enrolled and g in p->c.grades implies p in Student
inv10 T: all p : Person | all g : Grade | g in p.enrolled.grades implies p in Student
inv10 T: all p : Person | all g : Grade | g in p.enrolled->grades implies p in Student
inv10 C: all p : Person | all c : Course | all g : Grade | c->p->g in grades implies p in Student
inv9 S: all p1,p2 : Professor | all c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches implies (all c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv9 S: all p1,p2 : Professor | all c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches implies (all c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv9 S: all p1,p2 : Professor | all c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches implies (all c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv9 S: all p1,p2 : Professor | all c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches implies (all c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv9 S: all p1,p2 : Professor | all c : Course | p1 != p2 and c in p1.teaches and c in p2.teaches implies (all c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv10 C: all p : Person | all c : Course | all g : Grade | p->g in c.grades implies p in Student
inv11 U: all s : Student | all c : Course | all g : Grade | s->g in c.grades implies c in s.enrolled
inv12 B: all s : Student | one c : Course | one g : Grade | c in s.enrolled implies s->g in c.grades
inv12 B: all s : Student | all c : Course | lone g : Grade | c in s.enrolled implies s->g in c.grades
inv12 U: all p1 : Student | all c1 : Course |	  	(p1->c1 in enrolled) implies (lone g1 : Grade | c1->p1->g1 in grades)
NA M: MOD BASE MODEL
inv12 U: all s : Student | all c : Course | c in s.enrolled implies lone g : Grade | s->g in c.grades
inv13 U: all s : Student | all c : Course | s in c.grades.last implies (some p : Project | p in c.projects and p in s.projects)
inv14 B: all s1, s2 : Student | all p1 : Project | p1 in s1.projects and p1 in s2.projects implies (some p2 : Project | p2 in s1.projects and p2 not in s2.projects)
inv14 B: all s1, s2 : Student | all p1 : Project | p1 in s1.projects and p1 in s2.projects implies (some p2 : Project | p2 in s1.projects implies p2 not in s2.projects)
inv14 U: all s1, s2 : Student | all p1 : Project | s1 != s2 and p1 in s1.projects and p1 in s2.projects implies (some p2 : Project | p1 != p2 and p2 in s1.projects implies p2 not in s2.projects)
inv14 U: all s1, s2 : Student | all p1 : Project | s1 != s2 and p1 in s1.projects and p1 in s2.projects implies (some p2 : Project | p1 != p2 and p2 not in s1.projects implies p2 not in s2.projects)
inv14 B: all s1, s2 : Student | all p1 : Project | s1 != s2 and p1 in s1.projects and p1 in s2.projects implies (all p2 : Project | p1 != p2 and p2 not in s1.projects implies p2 not in s2.projects)
inv14 S: all s1, s2 : Student | all p1,p2 : Project | s1 != s2 and p1 != p2 and p1 in s1.projects and p1 in s2.projects implies (  and p2 not in s1.projects implies p2 not in s2.projects)
inv14 B: all s1, s2 : Student | all p1,p2 : Project | p1 in s1.projects and p1 in s2.projects and s1 != s2 and p1 != p2 implies ( p2 not in s1.projects and p2 not in s2.projects)
inv14 U: all s1, s2 : Student | all p1,p2 : Project | p1 in s1.projects and p1 in s2.projects and s1 != s2 and p1 != p2 implies ( p2 not in s1.projects or p2 not in s2.projects)
inv15 S: all s1,s2 : Student | one p : Project | p in s1.projects and p in s2.projects implies (s1.projects.grades+1 == s2.projects.grades or s1.projects.grades-1 == s2.projects.grades or s1.projects.grades == s2.projects.grades or s1.projects.grades == s2.projects.grades+1 or s1.projects.grades == s2.projects.grades-1)
inv15 S: all s1,s2 : Student | all p : Project | p in s1.projects and p in s2.projects implies (s1.projects.grades+1 == s2.projects.grades or s1.projects.grades-1 == s2.projects.grades or s1.projects.grades == s2.projects.grades or s1.projects.grades == s2.projects.grades+1 or s1.projects.grades == s2.projects.grades-1)
inv15 T: all p : Project | all s1,s2 : Student | all c : Course |s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects implies (all g1, g2 : Grade | g1 in s1.c.grades and g2 in s2.c.grades implies (g1 = prev[g2] or g2 = prev[1] or g1=g2))
inv15 T: all p : Project | all s1,s2 : Student | all c : Course |s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects implies (all g1, g2 : Grade | g1 in s1.c.grades and g2 in s2.c.grades implies (g1 = prev[g2] or g2 = prev[g1] or g1=g2))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects implies (all g1, g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1 = prev[g2] or g2 = prev[g1] or g1=g2))
NA H: THEME UPDATE
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects implies (all g1, g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1 = prev[g2] or g1 = next[g2] or g1=g2))

