NA H: THEME UPDATE
inv1 C: all p1 : Person | all c1 : Course | p1->c1 in enrolled implies p1 in Student
inv2 C: all p1 : Person | all c1 : Course | p1->c1 in teaches implies p1 in Professor
inv3 O: all c1 : Course | some p1 : Professor | p1->c1 in teaches
inv4 C: all p1 : Project | one c1 : Course | c1->p1 in projects
inv5 C: (all p1 : Project | some pr1 : Student | pr1->p1 in projects)	  	(all p2 : Project | all pr2 : Person   | pr2->p2 in projects implies pr2 in Student)
inv6 C: all s1 : Person | all p1 : Project | 	  	s1->p1 in projects implies (some c1 : Course | c1->p1 in projects and s1->c1 in enrolled)
inv7 U: all s1 : Student | all p1,p2 : Project | all c1 : Course |	    (		(s1->p1 in projects) and (s1->p2 in projects) and	     	(c1->p1 in projects) and (c1->p2 in projects)	    )	  	implies p1=p2
inv8 U: all p1 : Professor | all c1:Course |	  	p1->c1 in teaches implies p1->c1 not in enrolled
inv9 E: 
inv9 U: all p1,p2 : Professor | all c1:Course |	      (p1!=p2 and p1->c1 in teaches and p2->c1 in teaches) implies 	       (all c2 : Course | p1->c2 in teaches implies p2->c2 not in enrolled)
inv10 C: all p1 : Person | all c1 : Course | all g1 : Grade|	  	(c1->p1->g1 in grades) implies (p1 in Student)
inv11 U: all p1 : Student | all c1 : Course | all g1 : Grade|	  	(c1->p1->g1 in grades) implies (p1->c1 in enrolled)
inv12 U: all p1 : Student | all c1 : Course |	  	(p1->c1 in enrolled) implies (lone g1 : Grade | c1->p1->g1 in grades)
inv13 B: all c1 : Course | all g1 : Grade | all s1 : Student | 	  			  	c1->s1->g1 in grades implies 	  	(	        some p1:Project | some g2 : Grade | some s2 : Student | 	      	c1->s2->g2 in grades and g2=max[g1]	  	   	and c1->p1 in projects and s2->p1 in projects 		)
inv13 U: all s : Student | all c : Course |	  	s in c.grades.last implies (some p : Project | p in c.projects and p in s.projects)
inv14 U: all s1,s2 : Student | all p1,p2 : Project |	  	(s1->p1 in projects and s2->p1 in projects and s1!=s2 and p1!=p2) implies	  	( (s1->p2 not in projects) or (s2->p2 not in projects) )
inv15 E: 
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(p in s1.projects and p in s2.projects and p in c.projects) implies	  	(some g1,g2 : Grade | g1 in c.grades.s1 and g2 in c.grades.s2)
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(p in s1.projects and p in s2.projects and p in c.projects) implies	  	(some g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(p in s1.projects and p in s2.projects and p in c.projects) implies	  	(some g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) and g1 not in prevs[g2])
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(some g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) and g1 not in prevs[g2])
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(some g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) and g1=g2-1)
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(some g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) and g1 not in prevs[g2])
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1 not in prevs[g2]))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1 = g2))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1 = g2-1))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1 in prevs[g2]))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (lt[g1,g2]))
inv15 T: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (lt[g1>g2]))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (gte[g1,g2]))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1=g2))
inv15 S: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (gte[1,g1-g2]))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1=prev[g2] or g2=prev[g1]))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv1 C: all p1 : Person | all c1 : Course | p1->c1 in enrolled implies p1 in Student
inv2 C: all p1 : Person | all c1 : Course | p1->c1 in teaches implies p1 in Professor
inv3 O: all c1 : Course | some p1 : Professor | p1->c1 in teaches
inv4 C: all p1 : Project | one c1 : Course | c1->p1 in projects
inv5 C: (all p1 : Project | some pr1 : Student | pr1->p1 in projects)	  	(all p2 : Project | all pr2 : Person   | pr2->p2 in projects implies pr2 in Student)
inv6 C: all s1 : Person | all p1 : Project | 	  	s1->p1 in projects implies (some c1 : Course | c1->p1 in projects and s1->c1 in enrolled)
inv7 U: all s1 : Student | all p1,p2 : Project | all c1 : Course |	    (		(s1->p1 in projects) and (s1->p2 in projects) and	     	(c1->p1 in projects) and (c1->p2 in projects)	    )	  	implies p1=p2
inv8 U: all p1 : Professor | all c1:Course |	  	p1->c1 in teaches implies p1->c1 not in enrolled
inv9 U: all p1,p2 : Professor | all c1:Course |	      (p1!=p2 and p1->c1 in teaches and p2->c1 in teaches) implies 	       (all c2 : Course | p1->c2 in teaches implies p2->c2 not in enrolled)
inv10 C: all p1 : Person | all c1 : Course | all g1 : Grade|	  	(c1->p1->g1 in grades) implies (p1 in Student)
inv11 U: all p1 : Student | all c1 : Course | all g1 : Grade|	  	(c1->p1->g1 in grades) implies (p1->c1 in enrolled)
inv12 U: all p1 : Student | all c1 : Course |	  	(p1->c1 in enrolled) implies (lone g1 : Grade | c1->p1->g1 in grades)
inv13 U: all s : Student | all c : Course |	  	s in c.grades.last implies (some p : Project | p in c.projects and p in s.projects)
inv14 U: all s1,s2 : Student | all p1,p2 : Project |	  	(s1->p1 in projects and s2->p1 in projects and s1!=s2 and p1!=p2) implies	  	( (s1->p2 not in projects) or (s2->p2 not in projects) )
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))

