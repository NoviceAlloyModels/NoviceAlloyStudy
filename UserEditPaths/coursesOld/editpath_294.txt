NA H: THEME UPDATE
inv1 U: all p : Person | p in Course.enrolled implies p in Student
inv1 U: all p : Person, c : Course | p in c.enrolled implies p in Student
inv1 C: all p : Person, c : Course | c in p.enrolled implies p in Student
inv1 C: all p : Person, c : Course | c in p.enrolled implies p in Student
inv2 C: all p : Person, c : Course | c in p.teaches implies p in Professor
inv1 C: all c : Course | enrolled.c in Student
inv3 C: all c : Course | some teaches.c
inv3 C: all c : Course | some teaches.c
inv4 C: all p : Project | one (Course<:projects).p
inv5 C: all p : Project | ((Person<:projects).p in Student) and (some (Person<:projects).p)
inv6 U: all s : Student | s.projects in s.enrolled.projects
inv6 U: all s : Student | s.projects in s.enrolled.projects
inv7 B: all s : Student | lone s.enrolled.projects
inv7 B: all s : Student, c : s.enrolled | lone c.projects
inv7 U: all s : Student, c : s.enrolled | lone s.projects & c.projects
inv8 U: all p : Professor, c : p.teaches | p not in enrolled.c
inv9 B: all disj p1, p2 : Professor, c : p1.teaches | p2 not in enrolled.c
inv9 U: all disj p1, p2 : Professor, c : Course | (p1 in teaches.c and p2 in teaches.c) implies p2 not in enrolled.c
inv9 U: all disj p1, p2 : Professor, c : Course | (p1 in teaches.c and p2 in teaches.c) implies (all c : p1.teaches | p2 not in enrolled.c)
inv9 B: all disj p1, p2 : Professor, c : Course | (p1 & p2) in teaches.c implies (all c : p1.teaches | p2 not in enrolled.c)
inv9 T: all disj p1, p2 : Professor, c : Course | (p1 and p2) in teaches.c implies (all c : p1.teaches | p2 not in enrolled.c)
inv9 B: all disj p1, p2 : Professor, c : Course | (p1 & p2) in teaches.c implies (all c : p1.teaches | p2 not in enrolled.c)
inv9 U: all disj p1, p2 : Professor, c : Course | (p1 in teaches.c and p2 in teaches.c) implies (all c : p1.teaches |p2 not in enrolled.c)
inv10 E: 
inv10 S: all c : Course | c.grades.~grade in Student
inv10 S: all c : Course | c.grades.~grade in Student
inv10 S: all c : Course | c.grades.~grade in Student
inv9 U: all disj p1, p2 : Professor, c : Course | (p1 in teaches.c and p2 in teaches.c) implies (all c : p1.teaches |p2 not in enrolled.c)
inv10 T: all c : Course | c.grades.~Grade in Student
inv10 C: all c : Course | c.grades.Grade in Student
inv11 C: all c : Course | c.grades.Grade in enrolled.c
inv11 B: all c : Course | enrolled.c in c.grades.Grade
inv11 C: all c : Course | c.grades.Grade in enrolled.c
inv12 U: all s : Student, c : s.enrolled | lone c.grades.Person
inv12 B: all s : Student, c : s.enrolled | lone c.grades.Grade
inv12 S: all s : Student, c : s.enrolled | lone g : Grade | c->p->g in grades
inv12 U: all s : Student, c : s.enrolled | lone g : Grade | c->s->g in grades
inv12 B: all s : Student, c : s.enrolled | lone c.grades.Grade
inv12 U: all s : Student, c : s.enrolled | lone g : Grade | c->s->g in grades
inv12 T: all s : Student, c : s.enrolled | lone (s in c.grades.Grade)
inv12 S: all s : Student, c : s.enrolled, lone g : Grade | c->s->g in grades
inv12 S: all s : Student, c : s.enrolled | lone g : Grade | c->s->g in grades
inv12 U: all s : Student, c : s.enrolled | lone g : Grade | c->s->g in grades
inv12 S: all s : Student, c : s.enrolled, lone g : Grade | c->s->g in grades
inv12 U: all s : Student, c : s.enrolled | lone g : Grade | c->s->g in grades
inv12 U: all s : Student, c : s.enrolled | lone g : Grade | c->s->g in grades
inv13 U: all s : Student | all c : Course | s in c.grades.last implies (some p : Project | p in c.projects and p in s.projects)
inv13 U: all s : Student, c : Course | s in c.grades.last implies (some p : Project | p in c.projects and p in s.projects)
inv13 U: all s : Student, c : s.enrolled | s in c.grades.last implies (some p : Project | p in c.projects and p in s.projects)
inv13 S: all s : Student, c : s.enrolled | s in c.grades.last implies (some p : Project | p in c.projects
inv13 U: all s : Student, c : s.enrolled | s in c.grades.last implies (some p : Project | p in c.projects )
inv13 U: all s : Student, c : s.enrolled | s in c.grades.last implies (some p : Project | p in c.projects and p in s.projects)
inv14 S: all disj s1, s2 : Student, p1, p2 : Project |
inv14 U: all disj s1, s2 : Student, p1, p2 : Project | one s1
inv14 U: all disj s1, s2 : Student, p1, p2 : Project | s1 != s2
inv14 S: all disj s1, s2 : Student, p1, p2 : Project | (s1 in projects.p and s2 in projects.p) implies s1 != s2
inv14 U: all disj s1, s2 : Student, p1, p2 : Project | (s1 in projects.p1 and s2 in projects.p1) implies s1 != s2
inv14 B: all disj s1, s2 : Student, p1, p2 : Project | (s1 in projects.p1 and s2 in projects.p1) implies p1 != p2
inv14 B: all disj s1, s2 : Student, p1, p2 : Project | (s1 in projects.p1 and s2 in projects.p1) implies (s2 not in projects.p2)
inv14 B: all disj s1, s2 : Student, p1, p2 : Project | (s1 in projects.p1 and s2 in projects.p1) implies (s1 not in projects.p2 or s2 not in projects.p2)
inv14 B: all disj s1, s2 : Student, p1, p2 : Project | (p1 in s1.projects and p2 in s2.projects) implies (s1 not in projects.p2 or s2 not in projects.p2)
inv14 B: all disj s1, s2 : Student, p1, p2 : Project | (p1 in s1.projects and p2 in s2.projects) implies (p2 not in s1.projects or p2 not in s2.projects)
inv14 B: all disj s1, s2 : Student, disj p1, p2 : Project | (p1 in s1.projects and p2 in s2.projects) implies (p2 not in s1.projects or p2 not in s2.projects)
inv14 B: all disj s1, s2 : Student, disj p1, p2 : Project | (p1 in s1.projects and p2 in s2.projects) implies ((p2 not in s1.projects) or (p2 not in s2.projects))
inv14 U: all s1,s2 : Student | all p1,p2 : Project | (s1->p1 in projects and s2->p1 in projects and s1!=s2 and p1!=p2) implies ( (s1->p2 not in projects) or (s2->p2 not in projects) )
inv14 U: all disj s1,s2 : Student | all p1,p2 : Project | (s1->p1 in projects and s2->p1 in projects and p1!=p2) implies ( (s1->p2 not in projects) or (s2->p2 not in projects) )
inv14 U: all disj s1,s2 : Student, p1,p2 : Project | (s1->p1 in projects and s2->p1 in projects and p1!=p2) implies ( (s1->p2 not in projects) or (s2->p2 not in projects) )
inv14 B: all disj s1,s2 : Student, p1,p2 : Project | (s1->p1 in projects and s2->p1 in projects) implies ( (s1->p2 not in projects) or (s2->p2 not in projects) )
inv14 U: all disj s1,s2 : Student, disj p1,p2 : Project | (s1->p1 in projects and s2->p1 in projects) implies ( (s1->p2 not in projects) or (s2->p2 not in projects) )
inv14 U: all disj s1,s2 : Student, disj p1,p2 : Project | (p1 in s1.projects and p1 in s2.projects) implies ( (s1->p2 not in projects) or (s2->p2 not in projects) )
inv14 U: all disj s1,s2 : Student, disj p1,p2 : Project | (p1 in s1.projects and p1 in s2.projects) implies (p2 not in s1.projects or s2->p2 not in projects)
inv14 U: all disj s1,s2 : Student, disj p1,p2 : Project | (p1 in s1.projects and p1 in s2.projects) implies (p2 not in s1.projects or p2 not in s2.projects)

