NA H: THEME UPDATE
inv1 C: all p : Person | all c : Course | p->c in enrolled implies p in Student
inv2 C: all p : Person | all c : Course | p->c in teaches implies p in Professor
inv3 C: all c : Course | some teaches.c
inv4 T: all p : Project | one projects.p
inv4 T: all p : Project | one projects.p
inv4 T: all p : Project | one Course.projects.p
inv4 T: projects in Course one -> Project
inv4 T: Course.projects in Course one -> Project
inv4 T: Course[projects] in Course one -> Project
inv4 T: projects in Course one -> Project
inv4 S: Course/projects in Course one -> Project
inv4 S: this/Course/projects in Course one -> Project
inv4 T: projects in Course one -> Project
inv4 C: Course <: projects in Course one -> Project
inv5 C: Person <: projects in Student some -> Project
inv6 U: all s : Student | s.projects in s.enrolled.projects
inv7 S: all s: Student, disj x,j : s.projects | (Course <: projects).x != (Course <: projects).y
inv7 B: all s: Student, disj x,y : s.projects | (Course <: projects).x != (Course <: projects).y
inv7 B: all s: Student, disj x,y : s.projects | (Course <: projects).x = (Course <: projects).y
inv7 B: all s: Student, disj x,y : s.projects | (Course <: projects).x != (Course <: projects).y
inv7 B: all s: Student, disj x,y : s.projects | (Course <: projects).x != (Course <: projects).y
inv8 C: all p : Person | no p.teaches & p.enrolled
inv9 B: all p : enrolled.Course | p not in Professor
inv9 B: all p : enrolled.Course | p not in Professor
inv7 B: all s: Student, disj x,y : s.projects | (Course <: projects).x = (Course <: projects).y
inv9 B: all p : Professor | no teaches.(p.teaches) & enrolled.(p.teaches)
inv9 U: all p : Professor | no teaches.p.teaches & enrolled.p.teaches
inv9 B: all p : Professor | no teaches.(p.teaches) & enrolled.(p.teaches)
NA H: THEME UPDATE
inv5 C: all x : univ | x in Project implies some y : Student | y->x in Person<:projects	 all x, y : univ | x in Person and y in Project and x->y in Person<:projects implies x in Student
inv5 C: all p : Project | (Person <: projects).p in Student and some (Person <: projects).p

