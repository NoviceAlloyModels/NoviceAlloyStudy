NA H: THEME UPDATE
inv1 T: none (Person-Student).enrolled
inv1 C: no (Person-Student).enrolled
inv2 C: no (Person-Professor).teaches
inv3 T: all c:Course | c.teaches
inv3 T: all c:Course | teaches.c
inv3 C: all c:Course | some teaches.c
inv4 T: all proj:Project | projects.proj
inv4 T: all proj:Project | one projects.proj
inv4 B: all proj:Project | one Course<:projects
inv4 C: all proj:Project | one (Course<:projects).proj
inv4 S: one (Course<:projects).proj
inv4 B: one (Course<:projects).Project
inv4 T: (Course<:projects).Project
inv4 T: Project.(Course<:projects)
inv4 C: all proj:Project | one (Course<:projects).proj
inv4 T: all proj:Project | one (Course.projects).proj
inv5 U: no (Person-Student) & (Person<:projects).Project
inv5 S: no (Person-Student) & (Person<:projects).Project	  	  			  	all proj:Project | some (Person<:project).proj
inv5 C: no (Person-Student) & (Person<:projects).Project	  	  			  	all proj:Project | some (Person<:projects).proj
inv6 S: all u:User | (Course-u.enrolled).projects
inv6 S: all studt:Student | (Course-u.enrolled).projects
inv6 T: all studt:Student | (Course-studt.enrolled).projects
inv6 T: all studt:Student | (Course-studt.enrolled).projects
inv6 B: all studt:Student | no studt.projects & (Course-studt.enrolled).projects
inv7 B: all st:Student, c:Course | c in st.enrolled implies one c.projects &  st.enrolled.projects
inv7 B: all st:Student, c:Course | c in st.enrolled implies lone c.projects &  st.enrolled.projects
inv7 U: all st:Student, c:Course | c in st.enrolled implies lone c.projects &  st.projects
inv8 T: none Professor.enrolled & Professor.teaches
inv8 B: no Professor.enrolled & Professor.teaches
inv8 U: all prof:Professor | no prof.enrolled & prof.teaches
inv9 B: all disj prof1,prof2:Professor | no prof2.enrolled & prof1.teaches
inv9 B: all disj prof1,prof2:Professor | prof2 not in Student implies no prof2.enrolled & prof1.teaches
inv9 B: all disj prof1,prof2:(Person-Student) | no prof2.enrolled & prof1.teaches
inv10 T: Course.grades.(Person-Student)
inv10 T: (Person-Student).(Course.grades)
inv10 C: no (Person-Student).(Course.grades)
inv11 U: no Student.((Course-Student.enrolled).grades)
inv11 U: no Student.((Course-Student.enrolled).grades)
inv11 U: all s:Student | no s.((Course-s.enrolled).grades)
inv12 T: all s:Student | s.((s.enrolled).grades)
inv12 B: all s:Student | lone s.((s.enrolled).grades)
inv12 U: all s:Student, c:Course | c in s.enrolled implies lone s.(c.grades)
inv14 S: Person<:Projects
inv14 T: Person<:projects
inv14 S: s1.(Person<:projects)
inv14 S: all s1:User | s1.(Person<:projects)
inv14 T: all s1:Student | s1.(Person<:projects)
inv14 U: all disj s1,s2:Student | lone s1.(Person<:projects) & s2.(Person<:projects)
inv15 T: all disj s1,s2:Student, c:Course, p:Project | s1.grades
inv15 T: all disj s1,s2:Student, c:Course, p:Project | grades.s1
inv15 S: all disj s1,s2:Student, c:Course, p:Project | s1.(Course.grade)
inv15 T: all disj s1,s2:Student, c:Course, p:Project | s1.(Course.grades)
inv15 T: all disj s1,s2:Student, c:Course, p:Project | s1.(Course.grades)
inv15 T: all disj s1,s2:Student, c:Course, p:Project | 	  		p in s1.projects and p in s2.projects	  		implies	  		s1.(c.grades)
inv15 T: all disj s1,s2:Student, c:Course, p:Project | 	  		p in s1.projects and p in s2.projects	          implies	          s1.(c.grades) - s2.(c.grades) <=1	          or 	  		  s2.(c.grades) - s1.(c.grades) <=1

