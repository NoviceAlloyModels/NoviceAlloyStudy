NA H: THEME UPDATE
inv1 B: all p : Professor | no p.enrolled
inv1 T: all p : Person | all c : Course | p->c implies p in Student
inv1 C: all p : Person | all c : Course | p->c in enrolled implies p in Student
inv2 C: all p: Person | all c : Course | p->c in teaches implies p in Professor
inv3 O: all c: Course | some p : Professor | p->c in teaches
inv4 U: all p : Project | all c1,c2 : Course | c1->p in projects and c2 ->p in projects implies c1=c2
inv4 S: all p : Project | all c1,c2 : Course | c1->p in projects and c2 ->p in projects implies c1=c2	  	all p : project | some c : Course | c -> p in projects
inv4 C: all p : Project | all c1,c2 : Course | c1->p in projects and c2 ->p in projects implies c1=c2	  	all p : Project | some c : Course | c -> p in projects
inv5 O: all p : Project | some per : Person | per->p in projects	  	all p : Project | all per : Person | per->p in projects implies p in Student
inv5 O: all p : Project | some per : Person | per->p in projects	  	all p : Project | all per : Person  | per->p in projects implies p in Student
inv5 O: all p : Project | some per : Person | per->p in projects	  	all p : Project | all per : Person | per->p in projects implies p in Student
inv5 O: all p : Project | some per : Person | per->p in projects	  	all p : Project | all per : Person  | per->p in projects implies p in Student
inv5 C: (all p1 : Project | some pr1 : Student | pr1->p1 in projects)	  	(all p2 : Project | all pr2 : Person   | pr2->p2 in projects implies pr2 in Student)
inv5 O: all p : Project | some per : Person | per->p in projects	  	all p : Project | all per : Person  | per->p in projects implies p in Student
inv5 O: (all p : Project | some per : Person | per->p in projects)	  	(all p : Project | all per : Person  | per->p in projects implies p in Student)
inv5 O: (all p : Project | some per : Person | per->p in projects)	  	(all p : Project | all per : Person  | per->p in projects implies p in Student)
inv5 C: (all p : Project | some per : Person | per->p in projects)	  	(all p : Project | all per : Person  | per->p in projects implies per in Student)
inv6 S: all s : Student | all p : Project |  s->p in projects implies p in s.enroled.projects
inv5 C: (all p : Project | some per : Person | per->p in projects)	  	(all p : Project | all per : Person  | per->p in projects implies per in Student)
inv6 U: all s : Student | all p : Project |  s->p in projects implies p in s.enrolled.projects
inv7 U: all c : Course | all s : Student | lone p : Project | c->p in projects and s->p in projects
inv8 S: all c : Course | all p : Professor | p->c in teaches implies t->c not in enrolled
inv8 U: all c : Course | all p : Professor | p->c in teaches implies p->c not in enrolled
inv9 B: all p1,p2 : Professor | all c : Course | p1->c in teaches implies 		(all c2 : Course | p1->c2 in teaches implies p2->c2 not in enrolled)
inv9 S: all p1,p2 : Professor | all c : Course | p1->c,p2->c in teaches implies 		(all c2 : Course | p1->c2 in teaches implies p2->c2 not in enrolled)
inv9 B: all p1,p2 : Professor | all c : Course | p1->c + p2->c in teaches implies 		(all c2 : Course | p1->c2 in teaches implies p2->c2 not in enrolled)
inv10 S: all p : Professor | all g : grade | p->g not in grades
inv10 S: all p : Professor | all g : grade | p->g not in Course.grades
inv10 T: all p : Professor | all g : Grade | p->g not in grades
inv10 T: all p : Professor | all g : Grade | p.g not in grades
inv10 T: all p : Professor | all g : Grade | p*g not in grades
inv10 B: all p : Professor | all g : Grade | p->g not in Course.grades
inv10 C: all p : Person | all g : Grade | p->g in Course.grades implies p in Student
inv11 U: all s : Student | all g : Grade | all c : Course | s->g in c.grades implies s->c in enrolled
inv12 S: all s : Student | all c : Course | lone g : Grade | c->s->h
inv12 T: all s : Student | all c : Course | lone g : Grade | c->s->g
inv12 T: all s : Student | all c : Course | lone g : Grade | c->s->g
inv12 U: all s : Student | all c : Course | lone g : Grade | c->s->g in grades
inv13 S: all s : Student | all c : Course | s in c.grades.last implies (some p : Projet | s->p in projects)
inv13 U: all s : Student | all c : Course | s in c.grades.last implies (some p : Project | s->p in projects)
inv13 U: all s : Student | all c : Course | s in c.grades.last implies (some p : Project | s->p in projects and c->p in projects)
inv14 S: all s1,s2 : Student | lone p : Project | s1,s2 -> p in projects
inv14 T: all s1,s2 : Student | lone p : Project | s1-> p and s2 -> p in projects
inv14 B: all s1,s2 : Student | lone p : Project | s1-> p in projects and s2 -> p in projects
inv14 S: all s1,s2 : Student | lone p : Project | s1!=s2 s1 -> p in projects and s2 -> p in projects
inv14 U: all s1,s2 : Student | lone p : Project | s1!=s2 and s1 -> p in projects and s2 -> p in projects
inv15 S: all p : Project | all s1,s2 : Student | all c : Course |	  	(p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grades | g1 in s1.c.grades and g2 in s2.c.grades	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv15 T: all p : Project | all s1,s2 : Student | all c : Course |	  	(p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.c.grades and g2 in s2.c.grades	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades)	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))

