NA H: THEME UPDATE
inv1 O: all p: Person, c: Course | c in p.enrolled implies c in Student
inv1 C: all p: Person, c: Course | c in p.enrolled implies p in Student
inv2 C: all p: Person, c: Course | c in p. teaches implies p in Professor
inv3 C: all c: Course | some teaches.c
inv4 C: all p: Project | one (Course <: projects).p
inv5 C: all p: Person, proj: Project | proj in p.projects implies p in Student	  	all proj: Project | some (Person <: projects).proj
inv6 B: all s: Student, c: Course, proj: Project | proj in s.projects and proj in c.projects implies c in s.enrolled
inv7 U: all s: Student, c: Course | c in s.enrolled implies lone c.grades.s
inv7 B: all s: Student, c: Course | c in s.enrolled implies lone c.grades.Grade
inv7 U: all s: Student, c: Course | c in s.enrolled implies lone s & c.grades.Grade
inv7 U: all s: Student, c: Course, proj1: Project, proj2: Project | proj1 in s.projects and proj2 in s.projects and proj1 in c.projects and proj2 in c.projects implies proj1 = proj2
inv8 U: all p: Professor,c: Course | c in p.teaches implies p not in enrolled.c
inv9 B: all p1: Professor, p2: Professor, c: Course | p1 != p2 and c in p1.teaches implies p2 not in enrolled.c
inv9 B: all p1: Professor, p2: Professor, c: Course | c in p1.teaches implies p2 not in enrolled.c
inv9 B: all p1: Professor, p2: Professor, c: Course | p1 != p2 and c in p1.teaches implies p2 not in enrolled.c
inv9 U: all p1: Professor, p2: Professor, c: Course | p1 != p2 and c in p1.teaches and c in p2.teaches implies p2 not in enrolled.c and p1 not in enrolled.c
inv10 T: no grades.Grade-Student
inv10 T: none grades.Grade-Student
inv10 T: grades.Grade-Student = none
inv10 C: all c: Course, p: Person | p in c.grades.Grade implies p in Student
inv11 S: all c: Course, p: person | p in c.grades.Grade implies c in p.enrolled
inv11 U: all c: Course, s: Student | s in c.grades.Grade implies c in s.enrolled
inv12 U: all c: Course, g1: Grade, g2: Grade, s: Student | s->g1 in c.grades and s->g2 in c.grades implies g1 = g2
inv13 T: all s: Student, c: Course, g: Grade, proj: Project | s->g in c.grades.last and proj in c.projects implies proj in s.projects
inv13 T: all s: Student, c: Course, g: Grade, proj: Project | s->g in c.grades.last and proj in c.projects implies proj in s.projects
inv13 B: all s: Student, c: Course, g: Grade, proj: Project | s in c.grades.last and proj in c.projects implies proj in s.projects
inv13 B: all s: Student, c: Course, proj: Project | s in c.grades.last and proj in c.projects implies proj in s.projects
inv14 S: all u1: User, u2: User, u3: User, proj: Project | proj in u1.projects and proj in u2.projects and proj in u3.projects implies u3 != u2
inv14 O: all u1: Person, u2: Person, u3: Person, proj: Project | proj in u1.projects and proj in u2.projects and proj in u3.projects implies u3 != u2
inv14 S: all u1: Person, u2: Person, proj1: Project, proj2: Project | u1->proj1 in projects and u2->proj1 implies and u1->proj2 in projects and u2->proj2 in projects implies proj1 = proj2
inv14 T: all u1: Person, u2: Person, proj1: Project, proj2: Project | u1->proj1 in projects and u2->proj1 and u1->proj2 in projects and u2->proj2 in projects implies proj1 = proj2
inv14 O: all u1: Person, u2: Person, proj1: Project, proj2: Project | u1->proj1 in projects and u2->proj1 in projects and u1->proj2 in projects and u2->proj2 in projects implies proj1 = proj2

