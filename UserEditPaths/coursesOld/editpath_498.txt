NA H: THEME UPDATE
inv3 O: all c: Course | some c.teaches
inv3 C: all c: Course | some teaches.c
inv3 O: all c: Course | some c.teaches
inv3 C: all c: Course | some teaches.c
inv2 T: all p: Person, c: Course | no (p && Professor) implies c not in p.teaches
inv2 C: all p: Person, c: Course | no (p & Professor) implies c not in p.teaches
inv4 T: all p: Project | lone projects.p
inv4 T: all p: Project | lone projects.p
inv4 U: all p: Project | lone Course <: projects.p
inv4 C: all p: Project | one c: Course | p in c.projects
inv5 C: all pr: Project, p : Person | no (p & Student) implies pr not in p.projects  	  	  all p: Project | some s : Student | p in s.projects
inv6 B: all p: Project, c: Course, s: Student | p in c.projects and p in s.projects implies c in s.enrolled
inv8 U: all pf : Professor | no (pf.teaches & pf.enrolled)
inv9 U: all pf: Professor , p: Person | p in pf.enrolled implies p in Student
inv9 S: all pf: Professor , c : Course | some (c & p.teaches) implies no (c & p.enrolled)
inv9 B: all pf: Professor , c : Course | some (c & pf.teaches) implies no (c & pf.enrolled)
inv9 B: all pf: Professor , c : Course | some c & pf.teaches implies no (c & pf.enrolled)
inv9 U: all p1,p2 : Professor | all c1:Course |	      (p1!=p2 and p1->c1 in teaches and p2->c1 in teaches) implies 	       (all c2 : Course | p1->c2 in teaches implies p2->c2 not in enrolled)
inv9 U: all p1,p2: Professor , c : Course | (p1 != p2 and c in p1.teaches and c in p2.teaches ) implies (all c2: Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv10 O: all c: Course, p: Person | p in  c.grades.Person
inv10 C: all p: Person - Student , c: Course | no (p-> Grade & c.grades)
inv10 T: all c: Course, p: Person | p in  c.grades implies p in Student
inv10 U: all c: Course, p,pe: Person | p in c.grades.pe implies p in Student
inv10 C: all c: Course, p: Person, g:Grade | p in c.grades.g implies p in Student
inv11 T: all s: Student, c: Course | some g: Grade | c in s.enrolled implies g in c.grades
inv11 S: all s: Student, c: Course,  | some g: Grade | c in s.enrolled implies g in c.grades.s
inv11 S: all s: Student, c: Course,  |  c in s.enrolled implies some c.grades.s
inv11 B: all s: Student, c: Course |  c in s.enrolled implies some c.grades.s
inv11 U: all s: Student, c: Course |  some c.grades.s implies c in s.enrolled
inv11 T: all s: Student, c: Course |  c.grades.s implies c in s.enrolled
inv11 B: all s: Student, c: Course |  some c.grades implies c in s.enrolled
inv11 U: all s: Student, c: Course |  some c.grades.s implies c in s.enrolled
inv11 U: all s: Student,p:Person, c: Course |  s = p and some c.grades.p implies c in s.enrolled
inv11 U: all p: Person - Student, c: Course | some c.grades.p implies c in p.enrolled
inv11 U: all p: Student, c: Course, g: Grade | p in c.grades.g implies c in p.enrolled
inv12 S: all s : Student, c: Course | p in s.enrolled implies one c.grades.s
inv12 B: all s : Student, c: Course | c in s.enrolled implies one c.grades.s
inv12 U: all s : Student, c: Course | c in s.enrolled implies lone c.grades.s
inv12 B: all s : Student, c: Course | lone g: Grade | c in s.enrolled implies g in c.grades.s
inv12 T: all s : Student, c: Course | c in s.enrolled implies c.grades.s
inv12 U: all s : Student, c: Course | c in s.enrolled implies lone c.grades.s
inv12 U: all s : Student, c: Course | lone c.grades.s
inv12 S: all s : Person, c: Course | lone c.grades.p
inv12 U: all s : Person, c: Course | lone c.grades.s
inv12 U: all s : Person, c: Course | lone c.grades.Person
inv12 U: all s : Person, c: Course | lone c.grades.s
inv12 O: all s : Person, c: Course | lone c.grades
inv12 B: all s : Person, c: Course | lone c.projects
inv12 O: all s : Person, c: Course | lone c.grades
inv12 B: all s : Student, c: Course | c in s.enrolled implies lone c.grades
inv12 U: all s : Student, c: Course | c in s.enrolled implies lone c.grades.s
inv12 U: all s : Person - Professor, c: Course | c in s.enrolled implies lone c.grades.s
inv12 U: all p1 : Student | all c1 : Course |	  	(p1->c1 in enrolled) implies (lone g1 : Grade | c1->p1->g1 in grades)
inv12 U: all p1 : Student | all c1 : Course | c1 in p1.enrolled implies (lone g1 : Grade | c1->p1->g1 in grades)
inv12 T: all s : Student, c: Course, g: Grade | c in s.enrolled implies lone c->s->g in grades
inv12 T: all s : Student, c: Course, g: Grade | c in s.enrolled implies lone (c->s->g in grades)
inv12 B: all s : Student, c: Course | lone g: Grade | c in s.enrolled implies c->s->g in grades
inv12 U: all s : Student, c: Course | c in s.enrolled implies (lone g: Grade | c->s->g in grades)
inv13 U: all s : Student | all c : Course | s in c.grades.last implies (some p : Project | p in c.projects and p in s.projects)
inv13 B: all s : Student | all c : Course| some p : Project | s in c.grades.last implies p in c.projects and p in s.projects
inv13 U: all s : Student | all c : Course | s in c.grades.last implies (some p : Project | p in c.projects and p in s.projects)
NA H: THEME UPDATE
inv1 C: all p : Person, c : Course | no ( p & Student ) implies c not in p.enrolled
inv2 C: all p: Person, c: Course | no (p & Professor) implies c not in p.teaches
inv3 C: all c: Course | some teaches.c
inv4 C: all p: Project | one c: Course | p in c.projects
inv5 C: all pr: Project, p : Person | no (p & Student) implies pr not in p.projects  	  	  all p: Project | some s : Student | p in s.projects
inv6 B: all p: Project, c: Course, s: Student | p in c.projects and p in s.projects implies c in s.enrolled
inv8 U: all pf : Professor | no (pf.teaches & pf.enrolled)
inv9 U: all p1,p2: Professor , c : Course | (p1 != p2 and c in p1.teaches and c in p2.teaches ) implies (all c2: Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv10 C: all c: Course, p: Person, g:Grade | p in c.grades.g implies p in Student
inv11 U: all p: Student, c: Course, g: Grade | p in c.grades.g implies c in p.enrolled
inv12 U: all s : Student, c: Course | c in s.enrolled implies (lone g: Grade | c->s->g in grades)
inv13 U: all s : Student | all c : Course | s in c.grades.last implies (some p : Project | p in c.projects and p in s.projects)
NA H: THEME UPDATE
inv12 U: all s : Student, c: Course | c in s.enrolled implies (lone g: Grade | c->s->g in grades)
inv11 U: all p: Student, c: Course, g: Grade | p in c.grades.g implies c in p.enrolled

