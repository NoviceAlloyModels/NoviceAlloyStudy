NA H: THEME UPDATE
inv1 T: Student.enrolled
inv1 C: no (Person-Student).enrolled
inv1 S: enrolled . Studen in Course
inv1 U: enrolled . Student in Course
inv1 C: enrolled . Course in Student
inv1 O: enrolled . Course in Course
inv1 T: enrolled  in Student
inv1 T: enrolled in Course
inv1 T: enrolled in Course
inv1 T: Person->Course . Course in Student
inv1 C: enrolled . Course in Student
inv2 U: (teaches . Person) in Professor
inv2 U: (teaches . Person) in Professor
inv2 O: (Person . teaches) in Professor
inv2 C: (teaches . Course) in Professor
inv3 B: some teaches.Course
inv3 C: all c:Course | some teaches.c
inv3 C: Course in (Person . teaches)
inv4 B: one Course . projects
inv4 S: Course in one Course . projects
inv4 B: Course . projects in Person
inv4 T: projects . Course in Person
inv4 T: projects . Course in Person
inv4 B: Course.projects in Person
inv4 O: one Project.projects
inv4 U: Project.projects in Person
inv4 T: Project.projects
inv4 T: Course.projects
inv4 T: projects.Project
inv4 T: all p:Project | one Course.p
inv4 T: all p:Project | one projects.p
inv4 O: all p:Project | one p.projects
inv4 C: all p:Project | one c:Course | c->p in projects
inv4 C: all p:Project | one c:Course | c->p in projects
inv4 C: all p:Project | one c:Course | c->p in projects
inv5 B: some Student.projects
inv5 B: no (Person-Student).projects	  	some Student.projects
inv5 T: no (Person-Student).projects	  	projects in Student some -> Project
inv5 C: no (Person-Student).projects	  	(this/Person <: projects) in Student some -> Project
inv5 C: (this/Person <: projects) in Student some -> Project
inv6 B: all s:Student, c:Course, p:Project | c->p in projects implies s->c in enrolled
inv6 B: all s:Student, c:Course, p:Project | s->p in projects and c->p in projects implies s->c in enrolled
inv7 O: all c:Course | (this/Person <: projects) in Student -> lone Project
inv7 B: all c:Course, s:Student | s->c in enrolled => (this/Person <: projects) in Student -> lone Project
inv7 T: all c:Course | c.projects in Student -> lone Project
inv7 S: lone Student.projects.c
inv7 T: all c:Course | lone Student.projects.c
inv7 T: all c:Course | lone (Student.projects).(c.projects)
inv7 B: all c:Course | lone (Student.projects) & (c.projects)
inv7 B: all c:Course | no (Student.projects) & (c.projects)
inv7 B: all c:Course | lone (Student.projects) & (c.projects)
inv7 U: all c:Course, s:Student | lone (s.projects) & (c.projects)
inv8 U: no teaches.Professor
inv8 B: no Professor.teaches
inv8 T: Professor.teaches
inv8 B: no (Professor.teaches & Professor.enrolled)
inv8 U: all p:Professor | no (p.teaches & p.enrolled)
inv9 B: all p:Professor | no (p.teaches & Professor.enrolled)
inv9 B: no (Professor.enrolled)
inv9 B: all disj p1, p2:Professor | no p1.teaches & p2.enrolled
inv9 B: not some disj p1, p2:Professor, c:Course | p1->c in teaches and p2->c in enrolled

