NA H: THEME UPDATE
inv5 S: all disj s1,s2: student | s1!=s2 lone s1.projects & s2.projects
inv5 S: all disj s1,s2: Student | s1!=s2 lone s1.projects & s2.projects
inv5 S: all disj s1, s2: Student | s1 != s2 lone s1.projects & s2.projects
inv5 S: all disj s1, s2: Student | s1 != s2 lone s1.projects & s2.projects
inv5 T: all disj s1, s2: Student | s1 != s2 iden lone s1.projects & s2.projects
inv5 S: all disj (s1, s2): Student | s1 != s2 iden lone s1.projects & s2.projects
inv5 T: all disj s1,s2: Student | s1 != s2 iden lone s1.projects & s2.projects
inv5 T: all disj s1,s2: Student | s1 != s2 iden lone (s1.projects & s2.projects)
inv5 T: all  s1,s2: Student | s1 != s2 iden lone (s1.projects & s2.projects)
inv5 B: all  s1,s2: Student | lone (s1.projects & s2.projects)
inv5 T: all disj s1,s2: Student | s1 !=s2 iden
inv5 T: all disj s1,s2: Student | s1 !=s2 iden lone s1.projects&s2.projects
inv13 T: all p: Project | (Course <:projects).p
inv13 T: all p: Project | (Course <:projects).p
inv1 B: all e: Student | e in e.grades.Course
inv1 T: all e: Student | e in e.Course
inv1 T: all e: Student | e in e.Person.grades.Course
inv1 T: all e: Student | e in e.Person.grades
inv1 B: all e: Student | e in e.grades.Course
inv1 T: all e: Student | e in e.Course
inv1 T: all e: Student | e in e.Course.grades
inv1 T: all p: Person | p.Student & p.enrolled.Course
inv1 S: all p: Person | set p in p.Student & p.enrolled.Course
inv1 S: all p: Person | set p in p.Student & p.Course.enrolled
inv1 T: all p: Person | (p.enrolled).~Student
inv1 T: all p: Person | Student.(p.enrolled)
inv1 T: all p: Person | p.enrolled
inv1 T: all p: Person | p.enrolled.Course
inv1 T: all p: Person | set p in p.Student & p.enrolled
inv1 S: all p: Person | set (p in p.Student & p.enrolled)
inv1 S: all p: Person | set p in Student & p.enrolled
inv1 S: all p: Person | p not in Student implies no c.enrolled
inv1 U: all p: Person, c: Course | p not in Student implies no c.enrolled
inv1 S: all c: course | c.enrolled in Student
inv1 U: all c: Course | c.enrolled in Student
inv1 T: all c: Course | c.enrolled in Student implies c.enrolled not in teaches

