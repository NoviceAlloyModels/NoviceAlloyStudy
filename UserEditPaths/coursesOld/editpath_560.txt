NA H: THEME UPDATE
inv5 U: all p: Project | some s: Student | s->p in projects
inv5 B: some s: Student | all p: Project | s->p in projects
inv6 S: all s: Students, p: Projects | s->p in projects implies (all c: Courses | c->p in projects and s->c in enrolled)
inv6 S: all s: Student, p: Projects | s->p in projects implies (all c: Courses | c->p in projects and s->c in enrolled)
inv6 B: all s: Student, p: Project | s->p in projects implies (all c: Course | c->p in projects and s->c in enrolled)
inv6 B: all s: Student, p: Project | s->p in projects iff (all c: Course | c->p in projects and s->c in enrolled)
inv5 B: all p: Project | one s: Student | s->p in projects
inv5 U: all p: Project | some s: Person | s->p in projects implies s in Student
inv6 B: all s: Student, p: Project, c: Course | s->p in projects iff ( c->p in projects and s->c in enrolled)
inv6 B: all s: Student, p: Project, c: Course | s->p in projects iff (c->p in projects and s->c in enrolled)
inv6 B: all s: Student, p: Project, c: Course | s->p in projects implies (c->p in projects and s->c in enrolled)
inv6 B: all s: Student, p: Project, c: Course | s->p in projects implies (s->c in enrolled)
inv6 B: all s: Student, p: Project, c: Course | s->p in projects iff s->c in enrolled
inv6 B: all s: Student, p: Project, c: Course | s->p in projects implies s->c in enrolled
inv6 S: all s: Student, p: Project | s->p in projects implies (all c: Course s->c in enrolled)
inv6 B: all s: Student, p: Project | s->p in projects implies (all c: Course | s->c in enrolled)
inv6 B: all s: Student, p: Project | s->p in projects iff (all c: Course | s->c in enrolled)
inv7 S: all s: Student, c: Course | one p: Project | s->p in project and s->c in enrolled
inv7 B: all s: Student, c: Course | one p: Project | s->p in projects and s->c in enrolled
inv8 U: all p: Professor | p->p not in teaches
inv8 B: all p,j: Professor | p->j in teaches and p!=j
inv8 S: all p,j: Professor | p->j in implies and p!=j
inv8 S: all p,j: Professor | p->j in implies p!=j
inv8 U: all p,j: Professor | p->j in teaches implies p!=j
inv8 U: all p,j: Person | p->j in teaches implies p!=j
inv8 U: all p,j: Person | p->j in teaches implies p!=j
inv8 S: all p,, c: Course | p->c in teaches implies p->c not in enrolled
inv8 U: all p, c: Course | p->c in teaches implies p->c not in enrolled
inv8 C: all p: Person, c: Course | p->c in teaches implies p->c not in enrolled
inv8 U: all p: Professor, c: Course | p->c in teaches implies p->c not in enrolled
inv8 U: all p: Professor, c: Course | p->c in teaches implies p->c not in enrolled
inv9 B: all p,j: Professor, c: Course | p->c in teaches implies j->c not in enrolled
inv9 B: all p,j: Professor, c: Course | p->c in teaches and j->c in teaches implies j->c not in enrolled
inv9 B: all p,j: Professor, c,h: Course | p->c in teaches and j->h in teaches implies j->c not in enrolled
inv9 B: all p,j: Professor, c: Course | (p->c in teaches and j->c in teaches) implies j->c not in enrolled
inv9 B: all p,t: Professor, c,j: Course | (p->c in teaches and t->j in teaches) implies t->c not in enrolled
inv10 T: all p: Person, c: Course | p->c in grades implies p in Student
inv10 U: all p: Person, c: Course,g: Grade | p->c->g in grades implies p in Student
inv10 U: all p: Person, c: Course,g: Grade | (p->c)->g in grades implies p in Student
inv10 C: all p: Person, c: Course,g: Grade | c->p->g in grades implies p in Student

