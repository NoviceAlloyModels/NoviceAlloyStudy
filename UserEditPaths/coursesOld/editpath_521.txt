NA H: THEME UPDATE
inv9 U: all p : Person | no p.teaches.grades.Student & p.enrolled.grades.Student
inv8 U: all p : Professor, c : Course | p->c in teaches => p->c not in enrolled
inv9 U: all p : Person | no p.teaches.grades.Student & p.enrolled.grades.Student
inv9 B: all p : Person | no p.teaches.grades.Grade & p.enrolled.grades.Grade
inv9 B: all p : Person | p in Professor => no p.teaches.grades.Grade & p.enrolled.grades.Grade
inv9 B: all p : Person | p in Professor => no (p.teaches.grades.Grade & p.enrolled.grades.Grade) - p
inv9 B: all p : Person | p in Professor => no p.teaches.grades.Grade & Professor
inv9 U: all p1, p2: Professor, c1, c2: Course | p1!=p2 && c1!=c2 && c1 in p1.teaches && c1 in p2.teaches &&  c2 in p1.teaches => c2 not in p2.enrolled
inv9 U: all disj p1, p2 : Professor, c1, c2 : Course |	  		p1 in teaches.c1	  		&& p2 in teaches.c1	  		&& p1 in teaches.c2	  		=> p2 not in enrolled.c2
inv9 U: all disj p1, p2 : Professor, c1, c2 : Course |	  		p1 + p2 in teaches.c1	  		&& p1 in teaches.c2	  		=> p2 not in enrolled.c2
inv15 S: all disj s1, s2 : Student | all p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		=> c.grades.p1 = c.grade.p2	  			|| c.grades.p1.prev = c.grade.p2	  			|| c.grades.p1 = c.grade.p2.prev
inv15 S: all disj s1, s2 : Student | all p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		=> c.grades.s1 = c.grade.s2	  			|| c.grades.s1.prev = c.grade.s2	  			|| c.grades.s1 = c.grade.s2.prev
inv15 U: all disj s1, s2 : Student | all p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		=> c.grades.s1 = c.grades.s2	  			|| c.grades.s1.prev = c.grades.s2	  			|| c.grades.s1 = c.grades.s2.prev
inv14 U: all s1, s2 : Student, p1, p2 : Project | 	  		s1 != s2 && p1 != p2 && s1->p1 in projects && s2->p1 in projects 	  			=> not (s1->p2 in projects && s2->p2 in projects)
inv15 U: all disj s1, s2 : Student | all p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		=> c.grades.s1 = c.grades.s2	  			|| c.grades.s1.prev = c.grades.s2	  			|| c.grades.s1 = c.grades.s2.prev
inv15 U: all disj s1, s2 : Student | all p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		=> s1.(c.grades) = s2.(c.grades)	  			|| c.grades.s1.prev = c.grades.s2	  			|| c.grades.s1 = c.grades.s2.prev
inv15 B: all disj s1, s2 : Student | all p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		=> s1.(c.grades) = s2.(c.grades)	  			|| s1.(c.grades).prev = s2.(c.grades)	  			|| s1.(c.grades) = s2.(c.grades).prev
inv15 B: all disj s1, s2 : Student | all p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		=> s1.(c.grades) = s2.(c.grades)	  			|| (s1.(c.grades)).prev = s2.(c.grades)	  			|| s1.(c.grades) = (s2.(c.grades)).prev
inv15 B: all disj s1, s2 : Student | all p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		=> s1.(c.grades) = s2.(c.grades)	  			|| (s1.(c.grades)).prev = s2.(c.grades)	  			|| s1.(c.grades) = (s2.(c.grades)).prev
inv15 B: all disj s1, s2 : Student | all p : Project, c : Course |	  		p in s1.projects && p in s2.projects	  		&& s1 + s2 in enrolled.c	  		&& p in c.projects	  		=> s1.(c.grades) = s2.(c.grades)	  			|| (s1.(c.grades)).prev = s2.(c.grades)	  			|| s1.(c.grades) = (s2.(c.grades)).prev
inv15 B: all disj s1, s2 : Student | all p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		=> s1.(c.grades) = s2.(c.grades)	  			|| (s1.(c.grades)).prev = s2.(c.grades)	  			|| s1.(c.grades) = (s2.(c.grades)).prev
inv15 B: all disj s1, s2 : Student, g1, g2 : Grade | all p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		&& s1->g1 + s2->g2 in c.grades	  		=> s1.(c.grades) = s2.(c.grades)	  			|| (s1.(c.grades)).prev = s2.(c.grades)	  			|| s1.(c.grades) = (s2.(c.grades)).prev
inv15 B: all disj s1, s2 : Student, g1, g2 : Grade | all p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		&& s1->g1 + s2->g2 in c.grades	  		=> g1 = g2 || g1.prev = g2 || g1 = g2.prev
inv15 B: all disj s1, s2 : Student, g1, g2 : Grade, p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		&& s1->g1 + s2->g2 in c.grades	  		=> g1 = g2 || g1.prev = g2 || g1 = g2.prev
inv15 B: all disj s1, s2 : Student, disj g1, g2 : Grade, p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		&& s1->g1 + s2->g2 in c.grades	  		=> g1 = g2 || g1.prev = g2 || g1 = g2.prev
inv15 B: all s1, s2 : Student, disj g1, g2 : Grade, p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		&& s1->g1 + s2->g2 in c.grades	  		=> g1 = g2 || g1.prev = g2 || g1 = g2.prev
inv15 B: all s1, s2 : Student, g1, g2 : Grade, p : Project, c : Course |	  		s1 + s2 in projects.p	  		&& s1 + s2 in enrolled.c		  		&& p in c.projects	  		&& s1->g1 + s2->g2 in c.grades	  		=> g1 = g2 || g1.prev = g2 || g1 = g2.prev
inv15 B: all s1, s2 : Student, g1, g2 : Grade, p : Project, c : Course |	  		s1 + s2 in projects.p & enrolled.c		  		&& p in c.projects	  		&& s1->g1 + s2->g2 in c.grades	  		=> g1 = g2 || g1.prev = g2 || g1 = g2.prev
inv1 C: all p : Person, c : Course | some p.enrolled => p in Student
inv1 C: all p : Person | some p.enrolled => p in Student
inv1 C: enrolled.Course in Student
inv2 C: all p : Person, c : Course | p->c in teaches => p in Professor	  	teaches.Course in Professor
inv2 C: teaches.Course in Professor
inv3 O: all c : Course | some p : Professor | p->c in teaches	  	teaches.Course & Course = Course
inv3 O: all c : Course | some p : Professor | p->c in teaches	  	Professor.teaches & Course = Course
inv3 O: all c : Course | some p : Professor | p->c in teaches	  	no Professor.teaches - Course
inv3 O: all c : Course | some p : Professor | p->c in teaches	  	no Professor.teaches - Course
inv3 O: all c : Course | some p : Professor | p->c in teaches	  	no Course - Professor.teaches

