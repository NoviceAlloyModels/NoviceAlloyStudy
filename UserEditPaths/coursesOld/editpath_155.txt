NA H: THEME UPDATE
inv1 T: all p: Person | p in enrolled implies p in Student
inv1 T: all p: Person | enrolled.p implies p in Student
inv1 U: all p: Person | enrolled.p in Student
inv1 T: all p: Person | enrolled.~p in Student
inv1 U: all p: Person | enrolled.Person in Student
inv1 U: all p: Person | enrolled.Person in Student
inv7 B: all s1,s2: Student | s1!=s2 implies lone s1.projects&s2.projects
inv7 B: all s1,s2: Student | s1!=s2 implies lone s1.projects&s2.projects
inv7 B: all s1,s2: Student | s1!=s2 implies lone s1.projects&s2.projects
inv1 E: 
inv1 U: all p: Person | p in Project.enrolled implies p in Student
inv1 C: all p: Person | p in enrolled.Course implies p in Student
inv2 C: all p: Person | p in teaches.Course implies p in Professor
inv3 B: some teaches.Course
inv3 C: no c:Course | no teaches.c
inv3 S: all c: Couse | some teaches.c
inv3 C: all c: Course | some teaches.c
inv4 T: all p: Project | one projects.p
inv4 T: all p: Project | one projects.Course
inv4 T: all p: Project | one projects.Project
inv7 B: all s1,s2: Student | s1!=s2 implies lone s1.projects&s2.projects
inv4 T: all c: Course | one projects.c
NA M: MOD BASE MODEL
inv4 B: all c1, c2: Course, p1,p2: Project | p1 in c1.projects and p2 in c2.projects implies p1!=p2
inv4 B: all c1, c2: Course, p1,p2: Project | (p1 in c1.projects and p2 in c2.projects) implies p1!=p2
inv4 B: all c1, c2: Course | some p1,p2: Project | (p1 in c1.projects and p2 in c2.projects) implies p1!=p2
inv4 T: all p: Project | one Course.p
inv4 O: all p: Project | one p.projects
inv4 T: all p: Project | one projects.p
inv4 T: all p: Project | one projects.Course
inv4 S: all p: Project | one (Course c.projects).p
inv4 S: all p: Project | one (Course c: projects).p
inv4 S: all p: Project | one (Course c<:projects).p
inv4 C: all p: Project | one (Course<:projects).p
inv5 U: all p: Person | p in projects.Project implies p in Student
inv5 C: all p: Person | p in projects.Project implies p in Student 	  	all p: Project | some (Person<:projects).p
inv6 U: all s: Student, p: Project, c: Course | s in p.projects implies (p in c.projects and s in c.enrolled)
inv6 U: all s: Student, p: Project, c: Course | s in p.projects implies (p in c.projects and s in enrolled.c)
inv6 T: all s: Student, p: Project, c: Course | s in p.projects implies (p in projects.c and s in enrolled.c)
inv6 B: all s: Student, p: Project, c: Course | s in p.projects
inv6 B: all s: Student, p: Project, c: Course | s in projects.p
inv6 B: all s: Student, p: Project, c: Course | s in projects.p and s in enrolled.c implies p in c.projects
inv7 B: all disj s1,s2: Student | s1!=s2 implies lone s1.projects&s2.projects
inv6 U: all s: Student, p: Project | s in p.projects implies s in (Course<:projects).p
inv6 B: all s: Student, p: Project | s in (Person<:projects).p implies s in (Course<:projects).p
inv6 U: all s: Student, p: Project | s in (Person<:projects).p implies s in enrolled.(Course<:projects).p
inv7 B: all disj s1,s2: Student | s1!=s2 implies lone s1.projects&s2.projects
inv6 U: all s: Student, p: Project | s in (Person<:projects).p implies s in enrolled.(Course<:projects).p
inv7 T: all s: Student, p: Project, c: Course | s in enrolled.c implies lone s in c.projects
inv7 B: all s: Student, p: Project, c: Course | s in enrolled.c implies lone c.projects
inv7 B: all s: Student | lone s.projects
inv7 B: all s: Student, p1,p2: Project | p1 in s.projects and p2 in s.projects implies (Course<:projects).p1 != (Course<:projects).p2
inv7 S: all s: Student, p: Project | lone s in c.projects
inv7 S: all s: Student, c: Course | lone s in c.projects
inv7 T: all s: Student, c: Course | lone s in c.projects
inv7 T: all s: Student, c: Course | s in c.projects
NA H: THEME UPDATE

