NA H: THEME UPDATE
inv1 C: all w : Worker | w in Human or w in Robot
inv2 C: all ws : Workstation | some ws.workers	all w : Worker | one ws : Workstation | w in ws.workers
inv2 C: all ws : Workstation | some ws.workers	all w : Worker | one ws : Workstation | w in ws.workers
inv3 B: one ws: Workstation | ws in Component.workstation
inv3 C: all c: Component | one ws: Workstation | ws in c.workstation
inv4 C: all p: Product | no p.parts implies p in Material	all p: Product | some p.parts implies p in Component
inv5 E: 
inv4 C: all p: Product | no p.parts implies p in Material	all p: Product | some p.parts implies p in Component
inv5 T: all w1,w2: Worker , ws: Workstation | w1 in ws.workers and w2 in ws.workers implies (w1 and w2 in Human) or (w1 and w2 in Robot)
inv5 T: all w1,w2: Worker , ws: Workstation | w1 in ws.workers and w2 in ws.workers implies (w1 and w2 in Human) or (w1 and w2 in Robot)
inv5 S: all w1,w2: Worker | all: ws: Workstation | w1 in ws.workers and w2 in ws.workers implies (w1 and w2 in Human) or (w1 and w2 in Robot)
inv5 S: all w1,w2: Worker | all: ws: Workstation | w1 in ws.workers and w2 in ws.workers and w1 in Human implies  w2 in Human
inv5 S: all w1,w2: Worker | all: ws: Workstation | w1 in ws.workers and w2 in ws.workers and w1 in Human implies  w2 in Human
inv5 O: all w1,w2: Worker | all ws: Workstation | w1 in ws.workers and w2 in ws.workers and w1 in Human implies  w2 in Human
inv6 U: all c: Product | c in Component implies c not in c.parts
inv6 C: all c: Product | c in Component implies c not in c.^(parts)
inv7 C: all c: Component , p: Product | p in c.parts and p in Dangerous implies c in Dangerous
inv8 O: all c: Component , ws: Workstation | c in Dangerous and ws in c.workstation implies (all w: Worker | w in ws.workers implies w in Robot)
inv9 S: all ws: Workstation | w not in w.^(succ)	all ws: Workstation | w not in end implies one ws.succ	all ws1,ws2: Workstation | ws2 in begin and ws1 != ws2 implies ws1 in ws2.^(succ)
inv9 C: all ws: Workstation | ws not in ws.^(succ)	all ws: Workstation | ws not in end implies one ws.succ	all ws1,ws2: Workstation | ws2 in begin and ws1 != ws2 implies ws1 in ws2.^(succ)
inv10 B: all c1,c2 : Component | all w1,w2 : Workstation |	w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies	w1 in w2.^(succ)

