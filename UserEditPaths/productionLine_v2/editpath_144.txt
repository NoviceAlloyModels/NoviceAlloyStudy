NA H: THEME UPDATE
inv1 C: all w : Worker | w in Human or w in Robot
inv2 T: all w: Workstation | some x : Worker | w->x
inv2 T: all w: Workstation | some x : Worker | w->x
inv2 U: all w: Workstation | some x : Worker | w->x in workers
inv2 S: all w: Workstation | some x : Worker | w->x in workers	all x: Worker | some x: Workstation | x->w in workers
inv2 U: all w: Workstation | some x : Worker | w->x in workers	all w: Worker | some x: Workstation | x->w in workers
inv2 C: all w: Workstation | some x : Worker | w->x in workers	all w: Worker | one x: Workstation | x->w in workers
inv3 C: all c : Component | one w : Workstation | c->w in workstation
inv4 S: all c : Components | some p : Product | c->p in parts	all m : Material | all p: Product | m->p not in parts
inv4 C: all c : Component | some p : Product | c->p in parts	all m : Material | all p: Product | m->p not in parts
inv5 T: all h: Human | all w : Workstation | w->h in workers implies all r : Robot | w->r not in w
inv5 C: all h: Human | all w : Workstation | w->h in workers implies all r : Robot | w->r not in workers
inv6 U: all c0, c1 : Component | c0->c1 in parts implies c0!=c1
inv6 U: all c0, c1 : Component | c0->c1 in parts implies c0!=c1	all c0, c1 : Component | c0->c1 in parts implies c1->c0 not in parts
inv6 U: all c0, c1 : Component | c0->c1 in parts implies c1->c0 not in parts
inv6 U: all c0, c1 : Component | c0->c1 in parts implies c0!=c1	all c0, c1 : Component | c0->c1 in parts implies c1->c0 not in parts
inv6 C: all c : Component | c not in c.^parts
inv7 O: all c : Component | all p : Product | p in c.^parts and p in Dangerous implies c in Dangerous
inv8 B: all c : Component |  c in Dangerous implies c.workstation.workers not in Human
inv9 S: all w0, w1 : Workstations | w0 in begin and w0!=w1 implies w1 in w0.^parts	all w : Workstation | w not in w.^succ	all w0, w1 : Workstation | w0 in end and w0!=w1 implies w0->w1 not in succ
inv9 O: all w0, w1 : Workstation | w0 in begin and w0!=w1 implies w1 in w0.^parts	all w : Workstation | w not in w.^succ	all w0, w1 : Workstation | w0 in end and w0!=w1 implies w0->w1 not in succ
inv9 O: all w0, w1 : Workstation | w0 in begin and w0!=w1 implies w1 in w0.^parts	all w : Workstation | w not in w.^succ	all w0 : Workstation | w0 in end implies all w1 : Workstation | w0->w1 not in succ
inv9 S: all w0, w1 : Workstation | w0 in begin and w0!=w1 implies w1 in w0.^parts	all w : Workstation | w not in w.^succ	all w : Workstation | w not in end implies one w.succ
inv9 S: all w0, w1 : Workstation | w0 in begin and w0!=w1 implies w1 in w0.^parts	all w : Workstation | w not in w.^succ	all w : Workstation | w not in end implies one w.succ
inv9 O: all w0, w1 : Workstation | w0 in begin and w0!=w1 implies w1 in w0.^parts	all w : Workstation | w not in w.^succ	all w : Workstation | w not in end implies one w.succ
inv9 C: all w0, w1 : Workstation | w0 in begin and w1!=w0 implies w1 in w0.^succ	all w : Workstation | w not in w.^succ	all w : Workstation | w not in end implies one w.succ
inv10 B: all c0, c1 : Component | all w0, w1 : Workstation | c0->w0 in workstation and c1->w1 in workstation and c1 in c0.^parts implies w0 in w1.^succ

