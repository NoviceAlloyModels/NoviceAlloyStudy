NA H: THEME UPDATE
inv1 C: all w:Worker | w in Human+Robot
inv1 C: Worker = Human + Robot
inv1 C: Worker in Human + Robot
inv2 C: workers in Workstation one -> some Worker
inv2 S: all w:Worker | one workers.w	all w:Wokstation | some w.workers
inv2 C: all w:Worker | one workers.w	all w:Workstation | some w.workers
inv3 C: all c:Component | one c.workstation
inv3 C: all c:Component | one c.workstation
inv2 C: all w:Worker | one workers.w	Workstation = workers.Worker
inv2 C: all w:Worker | one w.~workers	all w:Workstation | some w.workers
inv4 B: all c:Component, m:Material, p:Product | c->p in parts and m->p not in parts
inv4 U: all c:Component, m:Material | some p:Product | c->p in parts and m->p not in parts
inv4 C: all c:Component | some c.parts	all m:Material | no m.parts
inv4 U: parts in Component -> Product
inv4 C: parts in Component -> some Product
inv4 C: parts.Product = Component
inv5 S: all w:Worstation, h:Human, r:Robot | h not in w.works or r not in w.works
inv5 S: all w:Workstation, h:Human, r:Robot | h not in w.works or r not in w.works
inv5 C: all w:Workstation, h:Human, r:Robot | h not in w.workers or r not in w.workers
inv5 S: all w:Worstation | w.workers in Human + Robot
inv5 B: all w:Workstation | w.workers in Human + Robot
inv5 O: all w:Workstation | w.workers in Human or w.workers in Robot
inv5 C: no workers.Human & workers.Robot
inv6 S: Components not in Component.parts
inv5 C: no workers.Human & workers.Robot
inv6 B: Component not in Component.parts
inv6 C: all c:Component | c not in c.^parts
inv6 U: not iden in ^parts
inv6 O: no iden & ^parts
inv7 B: Dangerous.parts = Dangerous
inv7 B: all d:Dangerous | some d.parts
inv7 B: all d:Dangerous | some d1: Dangerous | d->d1 in parts
inv7 B: all d1, d2:Dangerous | d1->d2 in parts
inv7 B: all d2:Dangerous | some d1:Dangerous | d1->d2 in parts
inv7 B: Dangerous.parts = Dangerous
inv7 O: ^parts.Dangerous in Dangerous
inv7 O: parts.Dangerous in Dangerous
inv7 O: parts.Dangerous = Dangerous
inv7 C: all c:Component | some c.parts & Dangerous implies c in Dangerous
inv7 O: parts.Dangerous = Dangerous
inv8 T: all c:Component, ws:c.Workstation | c in Dangerous implies no w:ws.workers | w in Human
inv8 T: all c:Component, ws:c.Workstation | c in Dangerous implies no w:ws.workers | w in Human
inv8 T: all c:Dangerous, ws:c.Workstation | c in Dangerous implies no w:ws.workers | w in Human
inv8 C: all c:Dangerous, ws:c.workstation | c in Dangerous implies no w:ws.workers | w in Human
inv8 C: all c:Dangerous, ws:c.workstation, w:ws.workers | w not in Human
inv8 C: all c:Dangerous, w:c.workstation.workers | w not in Human
inv8 C: no Dangerous.workstation.workers & Human
inv8 C: Dangerous.workstation.workers & Human = none
inv8 C: no Dangerous.workstation.workers & Human
inv9 B: begin.succ = end
inv9 B: begin.succ in end
inv9 B: begin.^succ = end
inv9 B: begin.*succ = end
inv9 U: all w:Workstation-end | one w.succ	no end.succ	end in begin.*succ
inv9 C: all w:Workstation-end | one w.succ	no end.succ	Workstation in begin.*succ

