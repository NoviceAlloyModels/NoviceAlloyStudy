NA H: THEME UPDATE
inv1 S: all w : Work | w in Human or w in Robot
inv1 C: all w : Worker | w in Human or w in Robot
inv2 S: (some w : Worker | all ws : Workstation | w in ws.workers) and (one ws : Workstation | all w : Worker | w2 in ws3.workers)
inv2 B: (some w : Worker | all ws : Workstation | w in ws.workers) and (one ws : Workstation | all w : Worker | w in ws.workers)
inv2 O: (some w : Worker | all ws : Workstation | w in ws.workers) and (all w : Worker | one ws : Workstation | w in ws.workers)
inv2 C: (all ws : Workstation | some w : Worker | w in ws.workers) and (all w : Worker | one ws : Workstation | w in ws.workers)
inv3 C: all c : Component | one w : Workstation | w in c.workstation
inv4 S: all c : Components | all m : Material | all p : Product | c in p.parts and m not in p.parts
inv4 B: all c : Component | all m : Material | all p : Product | c in p.parts and m not in p.parts
inv4 S: all c : Component | some p : Product | c in p.parts) and (all m : Material | no p : Product | p in m.parts
inv4 B: (all c : Component | some p : Product | c in p.parts) and (all m : Material | no p : Product | p in m.parts)
inv4 C: (all c : Component | some p : Product | p in c.parts) and (all m : Material | no p : Product | p in m.parts)
inv5 O: all w1,w2 : Worker | all ws : Workstation | w1 in Human and w2 in Robot implies ((w1 in ws.workers and w2 not in ws.workers) or (w1 not in ws.workers and w2 in ws.workers))
inv6 C: all c : Component | c not in c.^(parts)
inv7 S: all p : Product | c : Component | p in Dangerous and c in p.parts implies c in Dangerous
inv7 S: all p : Product | c : Component | p in Dangerous and p in c.^parts implies c in Dangerous
inv7 O: all p : Product | all c : Component | p in Dangerous and p in c.^parts implies c in Dangerous
inv8 O: all w : Worker | all c : Component | c in Dangerous implies w not in Human
inv8 O: all c : Component | all w : Worker | c in Dangerous implies w not in Human
inv8 B: all c : Component | all w : Workstation | c in Dangerous and w in c.workstation implies w.workers not in Human
inv8 O: all c : Component | all w : Workstation | c in Dangerous and w in c.workstation implies w.workers in Robot
inv9 T: all w,wb : Workstation | wb in begin and w != wb implies w in wb.^(succ)	all w : Workstation | w not in w.^(succ)	all w : Workstation | w not int end implies one w.succ
inv9 C: all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)	all w : Workstation | w not in w.^(succ)	all w : Workstation | w not in end implies one w.succ
inv9 T: all w,wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ)	all w : Workstation | w not in w.^(succ)	all w : Workstation | w not int end implies one w.succ
inv9 S: all w,wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ)	all w : Workstation | w not in w.^(succ)	all w : Workstation | w not int end implies one w.succ
inv9 S: all w,wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ)	all w : Workstation | w not in w.^(succ)	all w : Workstation | w not int end implies one w.succ
inv9 T: all w,wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ)	all w : Workstation | w not in w.^(succ)	all w : Workstation | w not int end implies one w.succ
inv9 T: all w,wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ)	all w : Workstation | w not in w.^(succ)	all w : Workstation | w not int end implies one w.succ
inv9 C: all w,wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ)	all w : Workstation | w not in w.^(succ)	all w : Workstation | w not in end implies one w.succ
inv10 B: all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)

