NA H: THEME UPDATE
inv5 C: no (workers.Human & workers.Robot)
inv6 O: no (iden & ^parts)
inv7 O: parts.Dangerous in Dangerous
inv8 C: no (Human & Dangerous.workstation.workers)
inv10 B: parts in (workstation.~succ).~workstation
inv10 B: parts :> Component in (workstation.~succ).~workstation
inv10 B: parts :> Component in ^(workstation.~succ.~workstation)
inv10 B: parts :> Component in ^(workstation.~succ.(~workstation :> Product))
NA M: MOD BASE MODEL
NA M: MOD BASE MODEL
inv10 B: parts :> Component in ^((Component <: workstation ).~succ.(~workstation :> Component))
inv10 B: parts :> Component in ((Component <: workstation ).~succ.(~workstation :> Component))
inv10 B: parts :> Component in ^((Component <: workstation).succ.(~workstation :> Component))
inv10 B: parts :> Component in ^((Component <: workstation).~succ.(~workstation :> Component))
inv10 B: parts :> Component not in ^(workstation.succ.~workstation) + workstation.~workstation
inv10 O: no (parts :> Component & ^(workstation.succ.~workstation) + workstation.~workstation)
inv10 B: no (parts :> Component & (^(workstation.succ.~workstation) + workstation.~workstation))
inv10 S: no (parts :> Component & ^(workstation.succ.~workstation)
inv10 B: no (parts :> Component & ^(workstation.succ.~workstation))
inv10 S: no (parts :> Component & (^(workstation.succ.~workstation) + (Component <:workstation ).(~workstation :> Component))
inv10 B: no (parts :> Component & (^(workstation.succ.~workstation) + (Component <:workstation ).(~workstation :> Component)))
NA M: MOD BASE MODEL
inv10 B: no (parts :> Component & (workstation.~workstation + ^(workstation.succ.~workstation)))
inv10 S: no (parts :> Component & (Component->Component <: (workstation.~workstation)) + ^(workstation.succ.~workstation)))
inv10 S: no (parts :> Component & (workstation.~workstation + ^(workstation.succ.~workstation))
inv10 B: no (parts :> Component & (workstation.~workstation + ^(workstation.succ.~workstation)))
inv10 S: no (parts :> Component & (workstation.~workstation + ^(workstation.succ).~workstation)))
inv10 B: no (parts :> Component & (workstation.~workstation + ^(workstation.succ).~workstation))
inv10 B: no (parts :> Component & (workstation.~workstation + workstation.^succ.~workstation))
inv10 B: no (parts :> Component & (workstation.*succ.~workstation))
inv10 B: no (parts :> Component & workstation.*succ.~workstation)
inv9 T: begin.(^succ - ^(succ).end) = end
inv10 B: no (parts :> Component & workstation.*succ.~workstation)
inv9 O: begin.(^succ - (^succ :> end)) = end
inv9 B: one (begin.^succ :> end)
inv9 T: one (begin.^succ :> end - iden)
inv9 B: one (begin.^succ :> end - begin)
inv9 U: lone (begin.^succ :> end - begin)
inv9 B: no (begin & end) and lone (begin.^succ :> end - begin)
inv9 B: no (Workstation & begin & end) and lone (begin.^succ :> end - begin)
inv9 B: no (Workstation & begin & end) and one (begin.^succ :> end - begin)
inv9 U: begin != end implies one (begin.^succ :> end - begin)
inv9 S: no (Workstations & begin & end) implies one (begin.^succ :> end - begin)
inv9 U: no (Workstation & begin & end) implies one (begin.^succ :> end - begin)
inv9 U: Workstation :> begin != Workstation :> end implies one (begin.^succ :> end - begin)
inv9 T: (begin.^succ :> (end - begin))
inv9 B: one (begin.^succ :> (end - begin))
inv9 U: lone (begin.^succ :> (end - begin))
inv9 T: lone (begin.^succ :> end - iden)
inv9 U: lone ((begin.^succ :> end) - begin)
inv9 U: lone ((begin.^succ :> (end + begin)) - begin)
inv9 B: one ((begin.^succ :> (end + begin)) - begin)
inv9 U: lone ((begin.^succ :> (end + begin)) - begin)
NA H: THEME UPDATE

