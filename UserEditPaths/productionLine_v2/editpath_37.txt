NA H: THEME UPDATE
inv1 C: all w: Worker | w in Human or w in Robot
inv2 S: all ws: Workstation, some w: Worker | w in ws	all w: Worker | w in Workstation
inv1 C: all w: Worker | w in Human or w in Robot
inv2 O: all ws: Workstation | some w: Worker | w in ws	all w: Worker | w in Workstation
inv2 O: all ws: Workstation | some w: Worker | w in ws
inv2 U: all ws: Workstation | some w: Worker | w in ws.workers
inv2 O: all ws: Workstation | some w: Worker | w in ws.workers	all w: Worker | w in Workstation
inv2 U: all ws: Workstation | some w: Worker | w in ws.workers	all w: Worker | w in Workstation.workers
inv2 S: all ws: Workstation | some w: Worker | w in ws.workers	all w: Worker | w in one Workstation.workers
inv2 T: all ws: Workstation | some w: Worker | w in ws.workers	all w: Worker | w in (one Workstation).workers
inv2 S: all ws: Workstation | some w: Worker | w in ws.workers	all w: Worker, one ws: Workstation | w in ws.workers
inv2 C: all ws: Workstation | some w: Worker | w in ws.workers	all w: Worker | one ws: Workstation | w in ws.workers
inv2 C: all ws: Workstation | some w: Worker | w in ws.workers	all w: Worker | one ws: Workstation | w in ws.workers
inv3 C: all c: Component | one ws: Workstation | ws in c.workstation
inv3 C: all c: Component | one ws: Workstation | ws in c.workstation
inv4 U: all c: Component | some c.parts
inv4 C: all c: Component | some c.parts	all m: Material | no m.parts
inv4 B: some (Component.parts)		no (Material.parts)
inv4 C: all c: Component | some c.parts		no (Material.parts)
inv4 C: all c: Component | some c.parts		no (Material.parts)
inv5 O: all ws: Workstation, w1, w2: Worker | w1 != w2 and w1 in ws.workers and w2 in ws.workers => (w1 in Human and w2 in Human) or (w1 in Robot and w2 in Robot)
inv5 O: all ws: Workstation, w1, w2: Worker | w1 != w2 and w1 in ws.workers and w2 in ws.workers => (w1 in Human and w2 in Human) or (w1 in Robot and w2 in Robot)
inv6 C: all c: Component | c not in c.^parts
inv7 O: all c: Component, p: Product | p in c.^parts and p in Dangerous => c in Dangerous
inv8 S: all c: Components | c in Dangerous => Humans not in c.workstation
inv8 S: all c: Component | c in Dangerous => Humans not in c.workstation
inv7 O: all c: Component, p: Product | p in c.^parts and p in Dangerous => c in Dangerous
inv8 T: all c: Component | c in Dangerous => (Human & c.workstation)
inv8 T: all c: Component | c in Dangerous => (Human & c.workstation.workers)
inv7 O: all c: Component, p: Product | p in c.^parts and p in Dangerous => c in Dangerous
inv8 C: all c: Component | c in Dangerous => no (Human & c.workstation.workers)
inv9 U: all w: Workstation | w not in w.^succ
inv9 U: all w: Workstation | w not in w.^succ	all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)
inv9 C: all w: Workstation | w not in w.^succ	all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)	all w : Workstation | w not in end implies one w.succ
inv9 U: all w: Workstation | w not in w.^succ	all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)
inv9 U: all w: Workstation | w not in w.^succ	all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)	all w : Workstation | w not in end implies some w.succ
inv9 U: all w: Workstation | w not in w.^succ	all w,wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)
inv9 C: all w: Workstation | w not in w.^succ	all w, wb : Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)	all w : Workstation | w not in end implies one w.succ
inv10 B: all c1,c2 : Component, w1,w2 : Workstation |	w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies	w1 in w2.^(succ)
NA H: THEME UPDATE

