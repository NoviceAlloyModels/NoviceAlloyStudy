NA H: THEME UPDATE
inv1 C: all w : Worker | w in Human or w in Robot
inv2 S: all ws : Workstation | some w.workers	all w : Worker | one ws : Workstation | w in ws.workers
inv2 C: all ws : Workstation | some ws.workers	all w : Worker | one ws : Workstation | w in ws.workers
inv3 C: all c : Component | one ws : Workstation | ws in c.workstation
inv4 B: some Component.parts and no Material.parts
inv4 C: all c : Component |some c.parts	no Material.parts
inv5 B: all ws : Workstation | Human in ws.workers iff Robot not in ws.workers
inv5 B: all ws : Workstation | Human in ws.workers implies Robot not in ws.workers
inv5 B: all ws : Workstation | Human in ws.workers implies Robot not in ws.workers	all ws : Workstation | Robot in ws.workers implies Human not in ws.workers
inv5 S: all ws : Workstation, some h : Human, some r : Robot | h in ws.workers iff r not in ws.workers
inv5 B: all ws : Workstation | some h : Human | some r : Robot | h in ws.workers iff r not in ws.workers
inv5 O: all ws:Workstation | ws.workers in Human iff ws.workers not in Robot
inv6 C: all c : Component | c not in c.^parts
inv7 O: all c : Component | some (c.^parts & Dangerous) implies c in Dangerous
inv8 B: all d : Dangerous | d.workstation.workers not in Human
inv8 B: all c : Component | c in Dangerous implies c.workstation.workers not in Human
inv9 S: Worstation.^succs = Workstation
inv9 S: Workstation.^succs = Workstation
inv9 B: Workstation.^succ = Workstation
inv9 B: all w : Workstation | w.^succ = Workstation
inv9 C: all w: Workstation | w not in w.^succ	all w, wb : Workstation | (wb in begin and w != wb) implies w in wb.^(succ)	all w : Workstation | w not in end implies one w.succ
inv10 B: all c1,c2 : Component, w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) => w1 in w2.^(succ)

