NA H: THEME UPDATE
inv1 B: all w: Worker, h: Human, r: Robot | w = h or w = r
inv2 T: all ws: Workstation, w: Worker | ws-> w
inv1 C: not some w:Worker | not w  in Human + Robot
inv1 C: all w: Worker | w in Human + Robot
inv1 C: Worker in  Human + Robot
inv1 C: Worker =  Human + Robot
inv1 C: all w: Worker | w in Human or w in Robot
inv2 T: all ws: Workstation, w: Worker | ws->w in Worker
inv1 C: Worker =  Human + Robot
inv2 B: all ws: Workstation, w: Worker | ws->w in workers
inv2 B: all ws: Workstation, w: Worker | ws->w in workers and w->ws in workers
inv2 B: all ws: Workstation, w: Worker | ws->w in workers
inv2 S: all ws: Workstation, w: Worker | ws->w in workers and
inv2 B: all ws: Workstation, w: Worker | ws->w in workers
inv2 T: all ws: Workstation | ws.workers
inv2 U: all ws: Workstation | some ws.workers
inv2 O: all ws: Workstation | some ws.workers	all w: Worker | one w.workstation
inv2 C: all ws: Workstation | some ws.workers	all w: Worker | one workers.w
inv2 C: all ws: Workstation | some ws.workers	all w: Worker | one w.~workers
inv2 C: workers in Workstation one -> some Worker
inv2 S: workers in one Workstation -> some Worker
inv3 S: workstation in Workstation one -> some component
inv2 C: workers in Workstation one -> some Worker
inv3 O: workstation in Workstation one -> some Component
inv3 T: all c: Component | one c.Workstation
inv3 C: all c: Component | one c.workstation
inv4 B: all c: Component, m: Material | c->c in parts and  m->m not in parts
inv4 O: Component in parts.Component and Material.parts = none
inv4 C: Component in parts.Product and Material.parts = none
inv4 C: Component = parts.Product
inv5 O: Human = Workstation.workers or Robot = Workstation.workers
inv5 O: all w: Workstation | w.workers in Human or w.workers in Robot
inv5 B: all w: Workstation | some w.workers & Robot or no w.workers &Human
inv5 C: all w: Workstation | no w.workers & Robot or no w.workers &Human
inv6 S: Component in parts.*(Component, Product)
inv6 T: Component in parts.*(Product)
inv6 T: all c1,c2: Component | c1 in parts.*(c2)
inv6 S: all c1,c2: Component | c1 in parts.*(c2,Product)
inv6 T: all c : Component | c in parts.*Product
inv5 C: all w: Workstation | no w.workers & Robot or no w.workers &Human
inv6 C: all c : Component | c not in c.^parts
inv6 O: no iden & ^parts
inv7 T: some c: Component | (c in Product.^parts) in Dangerous implies c in Dangerous
inv6 O: no iden & ^parts
inv7 B: some c: Component | some Dangerous & c.^parts implies c in Dangerous
inv7 O: all c: Component | some Dangerous & c.^parts implies c in Dangerous
inv9 S: all w1,w2,w3: Workstatiion | w1 in begin & w3 in begin & w2.^succ
inv9 T: all w1,w2,w3: Workstation | w1 in begin & w3 in begin & w2.^succ
inv9 C: succ in Workstation lone -> lone Workstation	Workstation in begin.*succ	no end.succ
inv9 U: Workstation in begin.*succ	no end.succ
inv9 C: succ in Workstation lone -> lone Workstation	Workstation in begin.*succ	no end.succ

