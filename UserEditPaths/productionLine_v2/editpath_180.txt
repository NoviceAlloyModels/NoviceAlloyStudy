NA H: THEME UPDATE
inv1 C: all w : Worker | w in Human or w in Robot
inv2 U: all w : Workstation | all t : Worker | some w.workers and one workers.t
inv2 C: all w : Workstation | some w.workers	and	all t : Worker | one workers.t
inv2 C: (all w : Workstation | some w.workers) and (all t : Worker | one workers.t)
inv2 C: (all w : Workstation | some t : Worker | w->t in workers) and (all t : Worker | one w : Workstation | w->t in workers)
inv3 C: all c : Component | one c.workstation
inv3 C: all c : Component | one w : Workstation | c->w in workstation
inv4 C: (all c : Component | some c.parts) and (all m : Material | no m.parts)
inv5 T: all w : Workstation | w.workers in (Human or Robot)
inv5 S: all w : Workstation | w.workers all in (Human or Robot)
inv5 C: all h : Human | all r : Robot | no (workers.h & workers.r)
inv5 S: all h : Human | all r : Robot | all w : Workstation | h in w.worker implies r not in w.workers
inv5 C: all h : Human | all r : Robot | all w : Workstation | h in w.workers implies r not in w.workers
inv6 U: all c : Component | c not in (c.parts)
inv6 C: all c : Component | c not in (c.^parts)
inv7 S: all c : Component | d : Dangerous | d in c.parts implies c in Dangerous
inv7 C: all c : Component | all d : Dangerous | d in c.parts implies c in Dangerous
inv7 C: all c : Component | all p : Product | p in Dangerous and p in c.parts implies c in Dangerous
inv7 C: all c : Component | all d : Dangerous | d in c.parts implies c in Dangerous
inv8 O: all c : Component | c in Dangerous implies c.workstation.workers in Robot
inv9 S: all b : Begin | all e : End | b.succ in Workstation and no e.succ
inv9 U: all b : begin | all e : end | b.succ in Workstation and no e.succ
inv9 U: one b : begin | one e : end | b.^succ in (Workstation-b) and no e.^succ
inv9 U: one b : begin | one e : end | (b.^succ in (Workstation-b)) and (no e.^succ)
inv9 U: all b : begin | all e : end | (b.^succ in (Workstation-b)) and (no e.^succ)
inv9 U: one b : begin | one e : end | (b.^succ in (Workstation-b)) and (no e.^succ)
inv9 U: one b : begin | one e : end | ((Workstation-b) in b.^succ) and (no e.^succ)
inv8 C: all d : Dangerous | no (d.workstation.workers & Human)
inv9 S: one b : begin | one e : end | all w : Workstation | w not in w.^succ | (b.^succ in (Workstation-b)) and (no e.^succ) and
inv9 S: one b : begin | one e : end | all w : Workstation | w not in w.^succ and (b.^succ in (Workstation-b)) and (no e.^succ) and
inv9 U: one b : begin | one e : end | all w : Workstation | (w not in w.^succ) and (b.^succ in (Workstation-b)) and (no e.^succ)
inv9 U: one b : begin | one e : end | all w : Workstation | (w not in w.^succ) and (b.^succ in Workstation) and (no e.^succ)
inv9 U: one b : begin | one e : end | all w : Workstation | (w not in w.^succ) and (b.^succ in Workstation) and (no e.succ)
inv9 U: one b : begin | one e : end | all w : Workstation | (w not in w.^succ) and (b.^succ in Workstation) and (no e.succ)
inv10 B: all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^parts	implies w1 in w2.^succ
inv9 C: all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ)	all w : Workstation | lone w.succ
inv9 C: all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ)	all w : Workstation | lone w.succ
inv9 B: one b : begin | one e : end | all w : Workstation | lone w.^succ and (b.^succ in Workstation) and (no e.succ)
inv9 C: one b : begin | one e : end | all w : Workstation | lone w.succ and (b.^succ in Workstation) and (no e.succ)	all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ)	all w : Workstation | lone w.succ
inv9 U: one b : begin | one e : end | all w : Workstation | lone w.succ and (b.^succ in Workstation) and (no e.succ)
inv9 C: one b : begin | one e : end | all w : Workstation | lone w.succ and (b.^succ in (Workstation-b)) and (no e.succ)	all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ)	all w : Workstation | lone w.succ
inv9 U: one b : begin | one e : end | all w : Workstation | lone w.succ and (b.^succ in (Workstation-b)) and (no e.succ)
inv9 C: all b : begin | all e : end | Workstation-b in b.^(succ) and no e.^(succ)	all w : Workstation | lone w.succ
inv10 B: all c1,c2 : Component | all w1,w2 : Workstation | w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts	implies w1 in c2.workstation.^succ
inv10 B: all c1,c2 : Component | all w1,w2 : Workstation | c1!=c2 and w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts	implies w1 in c2.workstation.^succ
inv10 B: all c1,c2 : Component | all w1,w2 : Workstation | c1!=c2 and w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts	implies w1 in c2.workstation
inv10 B: all c1,c2 : Component | all w1,w2 : Workstation | c1!=c2 and w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts	implies w1 in c1.workstation.^succ
inv10 B: all c1,c2 : Component | all w1,w2 : Workstation | c1!=c2 and w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts	implies w2 in c2.workstation.^succ
inv10 B: all c1,c2 : Component | all w1,w2 : Workstation | c1!=c2 and w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts	implies w1 in c2.workstation.^succ
inv10 B: all c1,c2 : Component | all w1,w2 : Workstation | c1!=c2 and w1 in c1.workstation and w2 in c2.workstation and c1 in c2.^parts	implies w2 in c1.workstation.^succ

