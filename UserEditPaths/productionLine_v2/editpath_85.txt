NA H: THEME UPDATE
inv1 T: all w : Worker | w is Human or w is Robot
inv1 C: all w : Worker | w in Human or w in Robot
inv1 C: Worker in (Robot+Human)
inv2 S: all ws : Workstation , some w : Worker | ws->w in workers
inv2 S: all ws : Workstation , some w : Worker | ws->w in workers
inv2 E: 
inv1 C: Worker in (Robot+Human)
inv2 S: all ws : Workstation , some w : Worker | ws->w in workers
inv2 U: all ws : Workstation | some w : Worker | ws->w in workers
inv2 B: all ws : Workstation | one w : Worker | ws->w in workers
inv2 C: all ws : Workstation | some w : Worker | ws->w in workers	all w : Worker | one ws : Workstation | ws->w in workers
inv3 C: all c : Component | one ws : Workstation | c->ws in workstation
inv4 C: all c : Component | some (c.parts)	all m : Material | no (m.parts)
inv5 B: all ws : Workstation | (Human+Robot) not in ws.workers
inv5 T: all ws : Workstation | (Human+Robot) not in workers
inv5 T: (Human+Robot) not in workers
inv5 B: (Human+Robot) not in Workstation.workers
inv5 T: all h : Human, r : Robot | h in workers iff r not in workers
inv5 O: all h : Human, r : Robot | h in Workstation.workers iff r not in Workstation.workers
inv5 C: no (Robot.~workers & Human.~workers)
inv5 C: all h : Human, r : Robot, ws : Workstation | h in ws.workers implies r not in ws.workers
inv5 O: all h : Human, r : Robot | h in Workstation.workers implies r not in Workstation.workers
inv5 C: all h : Human, r : Robot, ws : Workstation | h in ws.workers implies r not in ws.workers
inv6 T: Component not Component.parts
inv6 B: Component not in Component.parts
inv6 U: all c : Component | c not in c.parts
inv6 C: all c : Component | c not in c.^parts
inv6 U: all c : Component | c not in c.parts
inv6 C: all c : Component | c not in c.^parts
inv7 B: all c : Component | Dangerous in c.^parts implies c in Dangerous
inv7 B: all c : Component | Dangerous in c.^parts iff c in Dangerous
inv7 T: all c : Component | some Dangerous in c.^parts implies c in Dangerous
inv7 T: all c : Component | (some Dangerous) in c.^parts implies c in Dangerous
inv7 B: all c : Component | some d : Dangerous | d in c.^parts implies c in Dangerous
inv7 B: all p : Product | some d : Dangerous | d in p.^parts implies p in Dangerous
inv7 O: all p : Product | p in Dangerous implies p.^(~parts) in Dangerous
inv8 B: all p : Product | p in Dangerous implies (Robot in p.workstation)
inv8 B: all p : Product | p in Dangerous implies (Robot in p.workstation.workers)
inv8 B: all p : Product | p in Dangerous implies (Robot in p.workstation.workers and Human not in p.workstation.workers)
inv8 B: all c : Component | c in Dangerous implies (Robot in c.workstation.workers and Human not in c.workstation.workers)
inv8 B: all c : Component | c in Dangerous implies c.workstation.workers not in Human
inv9 C: all w : Workstation | w in begin implies Workstation-{w} in w.^(succ)	all w : Workstation | w not in w.^(succ)	all w : Workstation | w not in end iff one w.succ
inv10 B: all c: Component| (c.^(~parts)).workstation in (c.workstation).^(succ)
inv10 B: all c: Component| (c.^(~parts)).workstation in (c.workstation).^(succ)

