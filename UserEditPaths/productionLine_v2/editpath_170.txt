NA H: THEME UPDATE
inv1 C: all w: Worker | w in Human or w in Robot
inv2 S: all ws: Workstation | all w: Worker | ws.workers != none and w in one ws.workers
inv2 B: all ws: Workstation | all w: Worker | ws.workers != none and w in ws.workers
inv2 C: all ws: Workstation | ws.workers != none and (all w: Worker | one wks: Workstation | w in wks.workers)
inv3 C: all comp: Component | one w: Workstation | w in comp.workstation
inv4 E: 
inv5 E: 
inv5 E: 
inv5 E: 
inv5 E: 
inv5 E: 
inv5 E: 
inv5 E: 
inv5 E: 
inv4 S: (all c: Component | some p: Product | p in c.parts) and	(all m: Material | no prod: Product | p in m.parts)
inv5 E: 
inv4 C: (all c: Component | some p: Product | p in c.parts) and	(all m: Material | no prod: Product | prod in m.parts)
inv4 C: all p: Product | p.parts = none implies p in Material else p in Component
inv5 O: Workstation.workers in Human or Workstation.workers in Robot
inv5 T: all ws: Workstation | all w1, w2: Worker | ws.w1 in Human implies ws.w2 in Human else ws.w2 in Robot
inv5 O: all ws: Workstation | all w1, w2: Worker | (w1+w2) in ws.workers implies ((w1+w2) in Human or (w1+w2) in Robot)
inv6 U: all c: Component | c not in c.parts
inv6 C: all c: Component | c not in c.^(parts)
inv7 O: all c: Component | all d: Dangerous | d in c.^(parts) implies c in Dangerous
inv8 S: all c: Component | all w: worker | all ws: Workstation | c in Dangerous and w in c.ws implies w in Robot
inv8 T: all c: Component | all w: Worker | all ws: Workstation | c in Dangerous and w in c.ws implies w in Robot
inv8 T: all c: Component | all w: Worker | all ws: Workstation | c in Dangerous and w in c.ws.workers implies w in Robot
inv8 O: all c: Component | all w: Worker | c in Dangerous and w in c.workstation.workers implies w in Robot
inv9 C: all w, wb: Workstation | (wb in begin and w!=wb) implies w in wb.^(succ)	all w: Workstation | w not in w.^(succ)	all w: Workstation | w not in end implies one w.succ
inv10 B: all c: Component | c.^(parts.workstation) not in end implies c.workstation not in end
inv10 T: all c: Component | c.^(parts.workstation not in end) implies c.workstation not in end
inv10 B: all c1, c2: Component | all w1, w2: Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w2 in w1.^(succ)
inv10 B: all c1, c2: Component | all w1, w2: Workstation | w1 in c1.workstation and w2 in c2.workstation and c2 in c1.^(parts) implies w1 in w2.^(succ)

