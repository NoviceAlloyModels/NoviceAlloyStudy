NA H: THEME UPDATE
prop1 S: no Trash & no Protected
prop1 C: no Trash and no Protected
prop2 S: no File and some f : File
prop2 O: no File and some File
prop2 T: no File and after File
prop2 C: no File and after some File
prop3 C: always some File
prop4 T: eventually some File in Trash
prop4 C: eventually some Trash
prop5 U: eventually some File
prop5 B: eventually (some f : File | f in Trash)
prop5 B: eventually (some f : File | after f in Trash)
prop5 C: eventually (some f : File | after f not in File)
prop6 T: always (some f : File in Trash | f in Trash)
prop6 B: always File in Trash
prop6 B: all f : File | always f in Trash
prop6 B: some f : File | always f in Trash
prop6 C: always Trash in Trash'
prop7 C: eventually some Protected
prop8 S: eventually Link in Trash
prop8 T: eventually link in Trash
prop8 B: eventually File.link in Trash
prop8 S: always (f : File | f.link eventually in Trash
prop8 S: always (all f : File | f.link eventually in Trash)
prop8 S: always (all f : File | some f.link implies eventually in Trash)
prop8 C: always (all f : File | some f.link implies eventually f in Trash)
prop8 U: (all f : File | some f.link implies eventually f in Trash)
prop8 C: always (all f : File | some f.link implies eventually f in Trash)
prop9 B: always Protected not in Trash
prop9 C: always no Protected & Trash
prop10 T: always Protected
prop10 C: always Protected = Protected'
prop11 C: always (all f : File | f not in Protected implies after f in Protected)
prop12 B: eventually always File in Trash
prop12 B: all f : File | eventually always f in Trash
prop12 O: some f : File | eventually always f in Trash
prop12 C: eventually (some f : File | eventually always f in Trash)
prop12 O: always (some f : File | eventually always f in Trash)
prop12 C: eventually (some f : File | eventually always f in Trash)
prop13 O: File in Trash historically File not in Trash
prop13 S: always (File in Trash historically File not in Trash)
prop13 B: always (File in Trash implies historically File not in Trash)
prop13 B: always (File in Trash implies once File not in Trash)
prop13 S: always (f : Trash | once f not in Trash)
prop13 C: always (all f : Trash | once f not in Trash)
prop14 B: always (all f : Protected | f in Trash implies after f not in Trash)
prop14 C: always (all f : Protected | f in Trash implies after f not in Protected)
prop15 C: always (all f : File| eventually f in Trash)
prop16 S: always f in Protected
prop16 B: always File in Protected
prop16 B: always (all f : Protected | always f in Protected)
prop16 B: always historically File in Protected
prop16 O: always (all f : File | historically f in Protected)
prop16 C: always (all f : Protected | historically f in Protected)
prop17 B: always (all f : File | after f in Trash)
prop17 B: always (all f : File | after f in Trash)
prop17 O: always (all f : File | after f not in File)
prop17 C: always (all f : Trash | after f not in File)
prop18 B: always (all f : Protected | f in Trash implies after f not in Protected)
prop18 U: always (all f : Protected | f not in Protected implies after f in Trash)
prop18 U: always (all f : Protected | f not in Protected implies once f in Trash)
prop18 U: always (all f : Protected | f not in Protected implies before f in Trash)
prop18 C: always (all f : Protected | f in Trash releases f in Protected)
prop19 T: always (all f : Protected | f until f in Trash)
prop19 B: all f : File | f in Protected until f in Trash
prop19 O: always (all f : File | f in Protected until f in Trash)
prop19 C: always (all f : Protected | f in Protected until f in Trash)
prop19 T: always (all f : Protected | f until f in Trash)
prop19 T: always (all f : File | Protected until f in Trash)
prop20 S: always (all f : Trash | f in Protected realeases f in Trash)
prop20 B: always (all f : Trash | f in Protected releases f in Trash)
prop20 O: always (all f : Trash | f not in Protected releases f not in Trash)
prop20 U: always (all f : Trash | f in Protected since f in Trash)
prop20 U: always (all f : Trash | f not in Protected since f in Trash)
prop20 B: always (all f : Trash | f in Protected since f not in Trash)
prop20 C: always (all f : Trash | f in Trash since f not in Protected)
prop1 C: no Trash and no Protected
prop2 C: no File and after some File
prop3 C: always some File
prop4 C: eventually some Trash
prop5 C: eventually (some f : File | after f not in File)
prop6 C: always Trash in Trash'
prop7 C: eventually some Protected
prop9 C: always no Protected & Trash
prop8 C: always (all f : File | some f.link implies eventually f in Trash)
prop10 C: always Protected = Protected'
prop11 C: always (all f : File | f not in Protected implies after f in Protected)
prop12 C: eventually (some f : File | eventually always f in Trash)
prop13 C: always (all f : Trash | once f not in Trash)
prop14 C: always (all f : Protected | f in Trash implies after f not in Protected)
prop15 C: always (all f : File | eventually f in Trash)
prop16 C: always (all f : Protected | historically f in Protected)
prop17 C: always (all f : Trash | after f not in File)
prop18 C: always (all f : Protected | f in Trash releases f in Protected)
prop19 C: always (all f : Protected | f in Protected until f in Trash)
prop20 C: always (all f : Trash | f in Trash since f not in Protected)

