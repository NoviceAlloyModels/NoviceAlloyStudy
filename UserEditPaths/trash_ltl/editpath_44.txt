NA H: THEME UPDATE
inv1 S: no Trash & no Protected
inv1 C: no Trash and no Protected
inv2 S: no File and some f : File
inv2 O: no File and some File
inv2 T: no File and after File
inv2 C: no File and after some File
inv3 C: always some File
inv4 T: eventually some File in Trash
inv4 C: eventually some Trash
inv5 U: eventually some File
inv5 B: eventually (some f : File | f in Trash)
inv5 B: eventually (some f : File | after f in Trash)
inv5 C: eventually (some f : File | after f not in File)
inv6 T: always (some f : File in Trash | f in Trash)
inv6 B: always File in Trash
inv6 B: all f : File | always f in Trash
inv6 B: some f : File | always f in Trash
inv6 C: always Trash in Trash'
inv7 C: eventually some Protected
inv8 S: eventually Link in Trash
inv8 T: eventually link in Trash
inv8 B: eventually File.link in Trash
inv8 S: always (f : File | f.link eventually in Trash
inv8 S: always (all f : File | f.link eventually in Trash)
inv8 S: always (all f : File | some f.link implies eventually in Trash)
inv8 C: always (all f : File | some f.link implies eventually f in Trash)
inv8 U: (all f : File | some f.link implies eventually f in Trash)
inv8 C: always (all f : File | some f.link implies eventually f in Trash)
inv9 B: always Protected not in Trash
inv9 C: always no Protected & Trash
inv10 T: always Protected
inv10 C: always Protected = Protected'
inv11 C: always (all f : File | f not in Protected implies after f in Protected)
inv12 B: eventually always File in Trash
inv12 B: all f : File | eventually always f in Trash
inv12 O: some f : File | eventually always f in Trash
inv12 C: eventually (some f : File | eventually always f in Trash)
inv12 O: always (some f : File | eventually always f in Trash)
inv12 C: eventually (some f : File | eventually always f in Trash)
inv13 O: File in Trash historically File not in Trash
inv13 S: always (File in Trash historically File not in Trash)
inv13 B: always (File in Trash implies historically File not in Trash)
inv13 B: always (File in Trash implies once File not in Trash)
inv13 S: always (f : Trash | once f not in Trash)
inv13 C: always (all f : Trash | once f not in Trash)
inv14 B: always (all f : Protected | f in Trash implies after f not in Trash)
inv14 C: always (all f : Protected | f in Trash implies after f not in Protected)
inv15 C: always (all f : File| eventually f in Trash)
inv16 S: always f in Protected
inv16 B: always File in Protected
inv16 B: always (all f : Protected | always f in Protected)
inv16 B: always historically File in Protected
inv16 O: always (all f : File | historically f in Protected)
inv16 C: always (all f : Protected | historically f in Protected)
inv17 B: always (all f : File | after f in Trash)
inv17 B: always (all f : File | after f in Trash)
inv17 O: always (all f : File | after f not in File)
inv17 C: always (all f : Trash | after f not in File)
inv18 B: always (all f : Protected | f in Trash implies after f not in Protected)
inv18 U: always (all f : Protected | f not in Protected implies after f in Trash)
inv18 U: always (all f : Protected | f not in Protected implies once f in Trash)
inv18 U: always (all f : Protected | f not in Protected implies before f in Trash)
inv18 C: always (all f : Protected | f in Trash releases f in Protected)
inv19 T: always (all f : Protected | f until f in Trash)
inv19 B: all f : File | f in Protected until f in Trash
inv19 O: always (all f : File | f in Protected until f in Trash)
inv19 C: always (all f : Protected | f in Protected until f in Trash)
inv19 T: always (all f : Protected | f until f in Trash)
inv19 T: always (all f : File | Protected until f in Trash)
inv20 S: always (all f : Trash | f in Protected realeases f in Trash)
inv20 B: always (all f : Trash | f in Protected releases f in Trash)
inv20 O: always (all f : Trash | f not in Protected releases f not in Trash)
inv20 U: always (all f : Trash | f in Protected since f in Trash)
inv20 U: always (all f : Trash | f not in Protected since f in Trash)
inv20 B: always (all f : Trash | f in Protected since f not in Trash)
inv20 C: always (all f : Trash | f in Trash since f not in Protected)
inv1 C: no Trash and no Protected
inv2 C: no File and after some File
inv3 C: always some File
inv4 C: eventually some Trash
inv5 C: eventually (some f : File | after f not in File)
inv6 C: always Trash in Trash'
inv7 C: eventually some Protected
inv9 C: always no Protected & Trash
inv8 C: always (all f : File | some f.link implies eventually f in Trash)
inv10 C: always Protected = Protected'
inv11 C: always (all f : File | f not in Protected implies after f in Protected)
inv12 C: eventually (some f : File | eventually always f in Trash)
inv13 C: always (all f : Trash | once f not in Trash)
inv14 C: always (all f : Protected | f in Trash implies after f not in Protected)
inv15 C: always (all f : File | eventually f in Trash)
inv16 C: always (all f : Protected | historically f in Protected)
inv17 C: always (all f : Trash | after f not in File)
inv18 C: always (all f : Protected | f in Trash releases f in Protected)
inv19 C: always (all f : Protected | f in Protected until f in Trash)
inv20 C: always (all f : Trash | f in Trash since f not in Protected)

