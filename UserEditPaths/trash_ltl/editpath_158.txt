NA H: THEME UPDATE
inv1 E: 
inv1 C: no Trash and no Protected
inv2 C: no File	after some File
inv2 C: no File and after some File
inv2 C: no File and after some File
inv3 C: always some File
inv4 U: eventually some File
inv4 C: eventually some Trash
inv5 B: some f : File | eventually f in Trash
inv5 B: some f : File | f in Trash implies eventually File' = File - f
inv5 O: some f : Trash | eventually File' = File - f
inv5 O: some f : File | eventually File' = File - f
inv5 O: eventually (some f : File | File' = File - f)
inv5 O: eventually (some f : File | f not in File)
inv5 O: some f : File | eventually f not in File
inv5 O: eventually (some f : File | f not in File)
inv5 C: eventually (some f : File | after f not in File)
inv6 C: always (all f : Trash | after f in Trash)
inv6 C: always (Trash in Trash')
inv6 C: always (Trash in Trash')
inv7 C: eventually some Protected
inv6 C: always Trash in Trash'
inv8 S: always (some File.link implies eventually F.link in Trash)
inv8 B: always (some File.link implies eventually File.link in Trash)
inv8 T: always (all f : File | f.link implies eventually f.link in Trash)
inv8 T: always (all f : File | f.link implies eventually f.link in Trash)
inv8 B: always (all f : File | some f.link implies (eventually f.link in Trash))
inv8 B: always (all f : File | some link.f implies eventually link.f in Trash)
inv8 B: always (all f : File | some link.f implies eventually f.link in Trash)
inv8 B: always (all f : File | some f.link implies eventually f.link in Trash)
inv8 B: always (all f : File | some f.link implies eventually link.f in Trash)
inv8 B: always (all f : File | some link.f implies eventually link.f in Trash)
inv8 C: always (all f : File | some f.link implies eventually f in Trash)
inv9 B: always Protected not in Trash
inv9 O: always (all f : Trash | f not in Trash)
inv9 C: always (all f : Protected | f not in Trash)
inv9 C: always no Protected & Trash
inv10 U: always Protected in Protected'
inv10 C: always Protected = Protected'
inv11 C: always File - Protected in Protected'
inv12 B: eventually (all f : File | f in Trash)
inv12 U: eventually (some f : File | f in Trash)
inv12 U: eventually (some f : File | eventually f in Trash)
inv12 U: eventually (some f : File | eventually after f in Trash)
inv12 C: eventually (some f : File | eventually always f in Trash)
inv13 O: always (some f : Trash | once f not in Trash)
inv13 C: always (all f : Trash | once f not in Trash)
inv14 S: always (Proteced' = Protected - Protected & Trash)
inv14 O: always (Protected' = Protected - Protected & Trash)
inv14 O: always (Protected' = Protected - (Protected & Trash))
inv14 O: always (Protected' in Protected - (Protected & Trash))
inv14 C: always (all f : Protected | f in Trash implies after f not in Protected )
inv15 C: always (all f : File | eventually f in Trash)
inv15 B: always eventually File in Trash
inv16 U: historically Protected = Protected
inv16 B: historically Protected = Protected'
inv16 C: always (all f : Protected | historically f in Protected)
inv16 S: always historically Protected = Proteced'
inv16 O: always historically Protected = Protected'
inv16 U: always historically Protected = Protected
inv16 C: always (all f : Protected | historically f in Protected)
inv16 C: always (all f : Protected | historically f in Protected)
inv17 C: always (all f : File | before f in Trash implies File = File - f)
inv17 C: always (all f : File | f in Trash implies after File = File - f)
inv18 B: always (all f : File | (before f in Protected) implies f in Trash)
inv18 S: always (f in Trash triggered F in Protected)
inv18 S: always (all f : File | f in Trash triggered F in Protected)
inv18 B: always (all f : File | f in Trash triggered f in Protected)
inv18 S: always (all f : File | f in Protected f in Trash)
inv17 C: always (all f : Trash | after f not in File)
inv18 O: always (all f : File | f in Protected triggered f in Trash)
inv18 B: always (all f : File | f in Protected until f in Trash)
inv19 O: always (all f : File | f in Protected until f in Trash)
inv19 O: always (all f : File | f in Protected until f in Trash)
inv18 O: always (all f : File | f in Protected triggered f in Trash)

