NA H: THEME UPDATE
prop1 C: all f : File | historically ((f not in (Trash+Protected)))
prop2 U: eventually some File
prop2 U: no File until (eventually some File)
prop2 U: (eventually some File)
prop3 C: always some File
prop4 O: some f : File | eventually f in Trash
prop4 B: all f : File | eventually f in Trash
prop4 O: some f : File | eventually f in Trash
prop2 B: no File since some File
prop2 U: all f : File | no f since some f
prop2 U: some File since no File
prop2 U: no File until some File
prop3 C: always some File
prop4 O: some f : File | eventually f in Trash
prop2 U: no File until some File
prop1 C: all f : File | historically ((f not in (Trash+Protected)))
prop3 C: always some File
prop4 O: some f : File | eventually f in Trash
prop4 O: some f : File | eventually f in Trash
prop5 B: some f : File | eventually f in Trash
prop5 O: some f : File | eventually f not in File
prop4 O: some f : File | eventually (f in Trash)
prop5 O: some f : File | eventually (f not in File)
prop4 S: some f : File | implies eventually f in Trash
prop5 O: some f : File | eventually (f not in File)
prop5 O: some f : File | eventually (f not in File)
prop7 O: some f : File | f in Protected
prop7 O: some f : File | eventually f in Protected
prop7 C: eventually (some f : File |  f in Protected)
prop4 C: eventually ( some f : File | ( f in Trash ))
prop5 O: eventually some f : File | (f not in File)
prop4 C: eventually  some f : File | ( f in Trash )
prop7 C: eventually (some f : File |  f in Protected)
prop7 C: eventually (some f : File |  f in Protected)
prop5 O: eventually some f : File | f not in File
prop6 S: all f : File | f in Trash implies always f in Trasg
prop6 U: all f : File | f in Trash implies always f in Trash
prop6 U: all f : File | f in Trash implies always (f in Trash)
prop6 S: all f : File | f in Trash after always (f in Trash)
prop6 U: all f : File | f in Trash implies always (f in Trash)
prop6 S: all f : File | f in Trash after always (f in Trash)
prop6 U: all f : File | always f in Trash implies (f in Trash)
prop6 U: all f : File | always (f in Trash implies (f in Trash))
prop6 U: all f : File | always (f in Trash implies always (f in Trash))
prop6 U: all f : File | always (f in Trash implies always f in Trash)
prop5 O: eventually some f : File | f not in File
prop6 U: all f : File | always (f in Trash implies always f in Trash)
prop7 C: eventually (some f : File |  f in Protected)
prop6 U: all f : File | always (f in Trash implies always f in Trash)
prop6 U: all f : File |  (f in Trash implies always f in Trash)
prop6 C: always all f : File |  (f in Trash implies always f in Trash)
prop6 C: always all f : File |  f in Trash implies always f in Trash
prop7 C: eventually (some f : File |  f in Protected)
prop8 B: eventually ( some f1,f2 : File | f1->f2 in link implies f2 in Trash  )
prop8 B: ( some f1,f2 : File | f1->f2 in link implies eventually f2 in Trash  )
prop8 B: eventually ( some f1,f2 : File | f1->f2 in link implies f1 in Trash  )
prop10 U: always all f:File | f in Protected implies always f in Protected
prop10 U: always all f:File | f in Protected implies f in Protected
prop8 B: eventually ( all f1,f2 : File | f1->f2 in link implies f2 in Trash )
prop8 S: ( all f1,f2 : File | f1->f2 in link eventually implies f2 in Trash )
prop8 S: all f1,f2 : File | f1->f2 in link eventually implies f2 in Trash
prop8 S: all f1,f2 : File | f1->f2 in link eventually implies f2 in Trash
prop8 B: ( all f1,f2 : File | f1->f2 in link implies f2 in Trash )
prop9 C: always all f : File | f in Protected implies f not in Trash
prop10 U: always all f : File | f in Protected implies f  in Protected
prop10 U: all f : File {	always (f in Protected implies f in Protected)	always (f not in Protected implies f not in Protected)	}
prop10 U: always all f : File | ((f in Protected implies f  in Protected) or ( f not in Protected implies f not in Protected))
prop10 U: always all f : File | f in Protected implies f  in Protected
prop10 U: always all f : File | f not in Protected implies f not in Protected
prop10 U: always all f : File {	(f in Protected implies f in Protected)	(f not in Protected implies f not in Protected)	}
prop10 U: always all f : File {	(f in Protected implies f in Protected)	(f not in Protected implies f not in Protected)	}
prop10 U: always all f : File {	(f in Protected implies f in Protected)	(f not in Protected implies f not in Protected)	}
prop10 U: always all f : File {	(f in Protected implies f in Protected)	}
prop10 U: always all f : File | f  in Protected implies f  in Protected
prop10 U: always File in Protected implies File in Protected
prop11 U: all f:File | f not in Protected implies after f in Protected
prop11 B: after all f:File | f not in Protected implies f in Protected
prop11 B: all f:File | always (f not in Protected implies after f in Protected)
prop11 U: all f:File | always f not in Protected implies after f in Protected
prop11 C: always all f:File |  f not in Protected implies after f in Protected
prop12 S: eventually f:File | f in Trash always f in Trash
prop12 S: eventually f:File | f in Trash implies always (f in Trash)
prop12 S: eventually f:File | f in Trash implies  (f in Trash)
prop12 E: 
prop12 B: eventually all f:File | eventually f in Trash implies f in Trash
prop12 B: always all f:File | eventually f in Trash implies f in Trash
prop12 U: eventually all f:File | always f in Trash implies f in Trash
prop12 B: eventually all f:File |  f in Trash implies always f in Trash
prop12 B: eventually all f:File |  f in Trash implies always (f in Trash)
prop12 B: eventually all f:File |  f in Trash implies always f in Trash
prop12 B: all f:File | f in Trash implies always f in Trash
prop12 U: always all f:File | f in Trash implies  f in Trash
prop12 B: always all f:File | eventually f in Trash implies  f in Trash
prop12 B: all f:File | eventually f in Trash implies always f in Trash
prop12 B: all f:File | eventually f in Trash implies  f in Trash
prop12 B: always all f:File | eventually f in Trash implies  f in Trash
prop12 U: eventually all f:File | f in Trash implies  f in Trash
prop12 B: eventually all f:File | f in Trash implies always f in Trash
prop7 C: eventually some f : File |  f in Protected
prop12 B: eventually all f:File | f in Trash implies always f in Trash
prop12 S: eventually all f:File | f in Trash implies  f always in Trash
prop12 B: eventually all f:File | f in Trash
prop12 S: eventually all f:File | f in Trash always implies f in Trash
prop12 S: eventually some f:File | f in Trash always implies f in Trash
prop12 U: eventually some f:File | f in Trash implies always f in Trash

