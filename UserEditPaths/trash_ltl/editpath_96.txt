NA H: THEME UPDATE
prop13 T: all f : File | historically  (f in Trash & f not in Trash)
prop13 S: all f : File | historically  (f in Trash) implies historically f not in Trash)
prop13 S: all f : File | historically  (f in Trash) implies historically f not in Trash)
prop13 E: 
prop13 S: all f:File | historically  (f in Trash) implies historically f not in Trash)
prop13 B: all f:File | historically  (f in Trash)
prop13 S: all f:File | historically  (f in Trash) implies historically once f not in Trash)
prop13 C: all f:File |  (f in Trash) implies historically once (f not in Trash)
prop13 C: all f:File |  (f in Trash) implies historically  (f not in Trash)
prop13 C: all f:File |  (f in Trash) implies  once (f not in Trash)
prop14 U: always some (Protected & Trash) implies (Protected & Trash) not in Protected'
prop14 U: always some (Protected & Trash) implies no (Protected' & (Protected & Trash))
prop14 U: all f:Protected | always some (f & Trash) implies no (Protected' & f)
prop14 C: always (all f:Protected |  some (f & Trash) implies no (Protected' & f) )
prop15 C: always (all f:File | eventually f in Trash  )
prop16 B: always (all f:Protected |  f in Protected'  )
prop16 B: always (all f:File |  f in Protected implies f in  Protected'  )
prop16 B: always (all f:File |  f in Protected implies always (f in  Protected')  )
prop16 B: all f:Protected | always  some (f  & Protected')
prop16 B: all f:Protected | always  some (f  & Protected)
prop16 O: always Protected'=  Protected
prop16 B: always Protected in   Protected'
prop16 B: always (all f:File | f in Protected implies f in   Protected')
prop17 S: always (all f:File | f in Trash  after  f not in File
prop17 S: always (all f:File | f in Trash  after  f not in File)
prop17 C: always (all f:File | f in Trash implies after  f not in File)
prop18 U: all f:Protected | after f not in Protected implies f in Trash
prop18 C: always (all f:Protected | after f not in Protected implies f in Trash)
prop19 C: always ( all f:Protected  | f in Protected until  f in Trash )
prop20 B: always (all f:File | no (f&Protected) since  f in Trash)
prop20 O: always (all f:File | f in Trash since no (f&Protected) )
prop20 O: always (all f:File | f in Trash since  (f not in Protected) )
prop20 B: always (all f:File | f in Trash since  (f not in Protected') )
prop16 U: all f:File | f in Protected implies historically f in   Protected
prop16 B: all f:File | f in Protected implies always (historically f in   Protected)
prop16 C: always (all f:File | f in Protected implies  (historically some (f &   Protected)))
prop20 S: always (all f:File | f in Trash implies since  (f not in Protected) )
prop20 O: always (all f:File | f in Trash  since  (f not in Protected) )
prop20 O: always (all f:File | f in Trash  since  no(f & Protected) )
prop20 S: always (all f:File | f in Trash  since  fnot in  Protected) )
prop20 S: always (all f:File | f in Trash  since  fnot in  Protected)
prop20 O: always (all f:File | f in Trash  since  f not in  Protected)
prop20 C: always (all f:Trash | f in Trash  since  f not in  Protected)
prop20 C: always (all f:Trash | f in Trash  since  no (f & Protected) )
prop8 B: always ( all f:File | some f.^link implies eventually f.^link in Trash )
prop8 B: always (all f:File| some f.^link  implies  eventually  f.^link  in Trash)
prop8 B: always (all f:File.^link| some f implies  eventually  f  in Trash)
prop8 B: always (all f:File| some f.^link  implies  eventually  f.*link  in Trash)
prop8 B: always (all f:File| some f &f.^link  implies  eventually  f.*link  in Trash)
prop8 B: always (all f:File| some f.*link  implies  eventually  f.*link  in Trash)
prop12 U: all f:File | eventually f in Trash implies eventually f in Trash
prop12 U: eventually (some f:File | eventually f in Trash )
prop12 O: some f:File | eventually always (f in Trash )
prop12 C: eventually some f:File | eventually always (f in Trash )
prop12 U: eventually some f:File | eventually  (f in Trash )
prop12 C: eventually some f:File | eventually always  (f in Trash )
prop8 B: always (all f:File| some f.link  implies  eventually  f.link  in Trash)
prop5 O: eventually (some f:File |  f  not in File)
prop5 O: (some f:File | eventually f  not in File)
prop5 O: (some f:File | eventually no(f & File))
prop5 C: eventually (some f:File | eventually no(f & File))
prop8 C: always (all f:File| some f.link  implies  eventually  f  in Trash)
prop18 S: all f:Protected | | f not in Protected  releases  f in Trash
prop18 B: all f:Protected |  f not in Protected   releases  f in Trash
prop18 O: always all f:Protected |  f not in Protected   releases  f in Trash
prop18 O: always all f:Protected |     f in Trash  releases f not in Protected
prop18 O: always (all f:Protected |  f in Trash  releases f not in Protected )
prop18 O: always (all f:Protected |  f not in Protected releases f in Trash  )
prop18 B: always (all f:Protected |  f in Trash  releases f not in Protected' )
prop18 C: always (all f:Protected |  f in Trash  releases f in Protected )
prop6 C: always (all f:Trash | after f in Trash)

