NA H: THEME UPDATE
prop1 T: no File in Trash
prop1 U: no Trash
prop1 S: no Trash & no Protected
prop1 S: no Trash & no Protected in File
prop1 C: no Trash and no Protected
prop2 S: no Files and
prop2 S: no Files and
prop1 C: no Trash	no Protected
prop2 S: no Files	after some File
prop2 C: no File	after some File
prop3 T: always File
prop3 C: always some File
prop4 T: eventually some File in Trash
prop4 C: eventually some Trash
prop5 S: eventually some no Trash
prop5 B: eventually some File	after no File
prop5 S: eventually some File	after some no File
prop5 T: eventually some File	after some (no File)
prop5 B: eventually some File	after no File
prop5 O: eventually some f:File | f not in File
prop5 C: eventually some f:File | after f not in File
prop5 C: eventually some f:File | f not in File'
prop6 S: all f : File | f in Trash eventually implies f always in Trash
prop6 S: all f : File | f in Trash implies eventually f always in Trash
prop6 U: all f : File | f in Trash implies always f in Trash
prop6 S: all f : File | f in Trash eventually implies always f in Trash
prop6 U: eventually all f : File | f in Trash implies always f in Trash
prop6 U: all f : File | f in Trash implies always f in Trash
prop6 U: all f : File | f in Trash implies always f in Trash'
prop6 U: all f : File | always f in Trash implies f in Trash'
prop6 U: all f : File | always f in Trash implies f in Trash
prop6 U: all f : File | always f in Trash implies always f in Trash'
prop6 U: all f : File | always f in Trash implies always f in Trash
prop6 C: always all f : Trash |  always f in Trash
prop6 C: always all f : Trash | f in Trash'
prop6 C: always Trash in Trash'
prop6 C: always all f : Trash |  always f in Trash
prop7 O: some f : File | f in Protected
prop7 O: some f : File | after f in Protected
prop7 B: all f : File | after f in Protected
prop7 B: always all f : File | after f in Protected
prop7 T: always all f : File | after some f in Protected
prop7 B: always all f : File | after eventually f in Protected
prop7 B: always all f : File | after f in Protected
prop7 T: always all f : File | after some f in Protected
prop7 T: always all f : File | some f in Protected
prop7 B: always all f : File | after f in Protected
prop7 S: always all f : File | some after f in Protected
prop7 B: always all f : File | after f in Protected
prop7 O: always some f : File | after f in Protected
prop8 S: always all f, g : File | eventually
prop7 O: always some f : File | f in Protected
prop7 B: always all f : File | f in Protected
prop7 T: always all f : File | some f in Protected
prop8 T: always all l : link | eventually l in Trash
prop8 S: always all link | eventually link in Trash
prop8 T: always all f, g : File | f->g in link implies eventually link in Trash
prop8 S: always all f, g : File | f->g in link implies eventually in Trash
prop8 C: always all f, g : File | f->g in link implies eventually f in Trash
prop9 C: always all f : Protected | f not in Trash
prop10 U: always all f : Protected | f in Protected'
prop10 U: always all f : Protected | after f in Protected
prop10 U: always all f : Protected | always f in Protected
prop10 U: always all f : File | f in Protected implies f in Protected'
prop10 U: always all f : File | f in Protected implies after f in Protected
prop10 U: always all f : File | f in Protected implies f in Protected'
prop10 U: always all f : File | f in Protected implies always f in Protected'
prop10 U: always all f : Protected | always f in Protected'
prop11 C: always all f : File | f not in Protected implies after f in Protected
prop10 C: always Protected = Protected'

