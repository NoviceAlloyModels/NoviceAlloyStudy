NA H: THEME UPDATE
inv1 T: no File in Trash
inv1 U: no Trash
inv1 S: no Trash & no Protected
inv1 S: no Trash & no Protected in File
inv1 C: no Trash and no Protected
inv2 S: no Files and
inv2 S: no Files and
inv1 C: no Trash	no Protected
inv2 S: no Files	after some File
inv2 C: no File	after some File
inv3 T: always File
inv3 C: always some File
inv4 T: eventually some File in Trash
inv4 C: eventually some Trash
inv5 S: eventually some no Trash
inv5 B: eventually some File	after no File
inv5 S: eventually some File	after some no File
inv5 T: eventually some File	after some (no File)
inv5 B: eventually some File	after no File
inv5 O: eventually some f:File | f not in File
inv5 C: eventually some f:File | after f not in File
inv5 C: eventually some f:File | f not in File'
inv6 S: all f : File | f in Trash eventually implies f always in Trash
inv6 S: all f : File | f in Trash implies eventually f always in Trash
inv6 U: all f : File | f in Trash implies always f in Trash
inv6 S: all f : File | f in Trash eventually implies always f in Trash
inv6 U: eventually all f : File | f in Trash implies always f in Trash
inv6 U: all f : File | f in Trash implies always f in Trash
inv6 U: all f : File | f in Trash implies always f in Trash'
inv6 U: all f : File | always f in Trash implies f in Trash'
inv6 U: all f : File | always f in Trash implies f in Trash
inv6 U: all f : File | always f in Trash implies always f in Trash'
inv6 U: all f : File | always f in Trash implies always f in Trash
inv6 C: always all f : Trash |  always f in Trash
inv6 C: always all f : Trash | f in Trash'
inv6 C: always Trash in Trash'
inv6 C: always all f : Trash |  always f in Trash
inv7 O: some f : File | f in Protected
inv7 O: some f : File | after f in Protected
inv7 B: all f : File | after f in Protected
inv7 B: always all f : File | after f in Protected
inv7 T: always all f : File | after some f in Protected
inv7 B: always all f : File | after eventually f in Protected
inv7 B: always all f : File | after f in Protected
inv7 T: always all f : File | after some f in Protected
inv7 T: always all f : File | some f in Protected
inv7 B: always all f : File | after f in Protected
inv7 S: always all f : File | some after f in Protected
inv7 B: always all f : File | after f in Protected
inv7 O: always some f : File | after f in Protected
inv8 S: always all f, g : File | eventually
inv7 O: always some f : File | f in Protected
inv7 B: always all f : File | f in Protected
inv7 T: always all f : File | some f in Protected
inv8 T: always all l : link | eventually l in Trash
inv8 S: always all link | eventually link in Trash
inv8 T: always all f, g : File | f->g in link implies eventually link in Trash
inv8 S: always all f, g : File | f->g in link implies eventually in Trash
inv8 C: always all f, g : File | f->g in link implies eventually f in Trash
inv9 C: always all f : Protected | f not in Trash
inv10 U: always all f : Protected | f in Protected'
inv10 U: always all f : Protected | after f in Protected
inv10 U: always all f : Protected | always f in Protected
inv10 U: always all f : File | f in Protected implies f in Protected'
inv10 U: always all f : File | f in Protected implies after f in Protected
inv10 U: always all f : File | f in Protected implies f in Protected'
inv10 U: always all f : File | f in Protected implies always f in Protected'
inv10 U: always all f : Protected | always f in Protected'
inv11 C: always all f : File | f not in Protected implies after f in Protected
inv10 C: always Protected = Protected'

