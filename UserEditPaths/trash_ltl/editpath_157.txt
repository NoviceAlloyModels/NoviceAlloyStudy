NA H: THEME UPDATE
inv1 C: no Trash and no Protected
inv2 C: no File and after some File
inv3 C: always some File
inv4 O: some f : File | eventually f in Trash
inv4 O: some f : File | eventually (f not in Trash and f in Trash')
inv4 O: some f : File | eventually ((f not in Trash) and f in Trash')
inv4 C: eventually (some f : File | f in Trash)
inv5 O: (some f : File | eventually f not in File)
inv5 C: eventually (some f : File | f not in File')
inv4 O: eventually (some f : File | f in Trash')
inv4 O: eventually (some f : File | f in Trash')
inv4 C: eventually (some f : File | f in Trash)
inv5 O: eventually (some f : File | f not in File)
inv6 U: all f : File | f in Trash implies after always f in Trash
inv6 C: always (all f : File | f in Trash implies after always f in Trash)
inv7 C: eventually (some f : File | f in Protected)
inv8 S: always (some f : File | some f.link implies eventually f in Trash
inv8 B: always (some f : File | some f.link implies eventually f in Trash)
inv8 B: always (some f : File | some link.f implies eventually f in Trash)
inv8 B: always (some f : File | some f.link implies after eventually f in Trash)
inv8 B: always (some f : File | some f.link implies eventually f in Trash')
inv8 C: always (all f : File | some f.link implies eventually f in Trash)
inv9 C: always no Protected & Trash
inv10 U: all f : Protected | always f in Protected
inv10 U: always all f : Protected | always f in Protected
inv10 U: always (all f : Protected | always f in Protected)
inv8 C: always (all f : File | some f.link implies eventually f in Trash)
inv10 U: all f : File | once f in Protected implies f in Protected
inv10 U: after all f : File | once f in Protected implies f in Protected
inv10 U: always Protected in Protected'
inv10 C: always Protected = Protected'
inv10 C: always Protected = Protected'
inv11 C: always File - Protected in Protected'
inv12 U: eventually always some f : File | f in Trash
inv12 U: eventually always (some f : File | f in Trash)
inv12 C: eventually (some f : File | always f in Trash)
inv13 C: always (all f : File | f in Trash implies once f not in Trash)
inv14 B: always (some f : Protected | f in Trash implies f not in Protected')
inv14 C: always (all f : Protected | f in Trash implies f not in Protected')
inv14 S: always Protecte & Trash not in Protected
inv14 O: always Protected & Trash not in Protected
inv14 B: always Protected & Trash not in Protected'
inv14 B: always (Protected & Trash) not in Protected'
inv14 B: always ((Protected & Trash) not in Protected')
inv14 B: always ((Protected & Trash) not in Protected')
inv14 C: always no Protected & Trash & Protected'
inv15 B: always some f : File | eventually f in Trash
inv15 C: always all f : File | eventually f in Trash
inv16 C: always (all f : Protected | historically f in Protected)
inv17 U: always no Trash & Trash'
inv17 C: always no Trash & File'
inv18 B: always no Protected & Protected' & Trash'
inv18 B: always Protected & Protected' not in Trash'
inv18 B: always Trash not in Protected & Protected'
inv18 B: always all f : Protected | f not in Protected' implies f in Trash'
inv18 C: always all f : Protected | f not in Protected' implies f in Trash
inv18 B: always no Protected & Protected' & Trash
inv18 B: always Protected & Protected' not in Trash
inv18 B: always Protected & Protected' not in Trash + Trash'
inv19 C: always all f : Protected | f in Protected until f in Trash
inv6 C: always (all f : Trash | always f in Trash)
inv6 C: always Trash in Trash'
inv20 B: always all f : File | f in Trash since f in Protected
inv20 B: always all f : Trash | f in Trash since f in Protected
inv20 C: always all f : Trash | f in Trash since f not in Protected
inv20 O: always all f : File | f in Trash since f not in Protected
inv20 C: always all f : Trash | f in Trash since f not in Protected
inv2 C: no File and some File'
inv4 C: eventually some Trash
inv5 C: eventually some File - File'
inv5 C: eventually File not in File'
inv7 C: eventually some Protected
inv8 B: always eventually link.File in Trash

