NA H: THEME UPDATE
prop1 C: no Trash	no Protected
prop2 B: no File	after some File'
prop2 C: no File	some File'
prop3 C: always some File
prop4 C: eventually some Trash
prop5 B: eventually some Trash
prop5 O: eventually some f:File | File' = File -f
prop5 O: eventually some f:File | f not in Protected and File' = File -f
prop5 B: eventually no Trash
prop5 O: some f : File| f not in Trash and eventually f not in File
prop5 O: eventually some f : File| f in Trash and f not in File'
prop5 O: eventually some f : File| f in Trash and File' = File - f
prop5 O: eventually some f : File| f in Trash and File' = File - f and Trash' = Trash - f
prop5 O: eventually some f : Trash| File' = File - f and Trash' = Trash - f
prop5 O: eventually some f : Trash| f not in File'
prop5 C: eventually some f : File| f not in File'
prop6 O: always ( some f:File| f not in Trash  and after (always (f in Trash)))
prop6 O: always ( some f:File| f not in Trash  and after (f in Trash and after always f in Trash))
prop6 B: always some f:File | (always f in Trash) releases (f in Trash and after f in Trash)
prop6 B: always some f:File | (not always f in Trash) releases (f in Trash and after f in Trash)
prop6 B: always some f:File | (not (always f in Trash)) releases (f in Trash and after f in Trash)
prop6 O: always all f:File | (f in Trash) releases (f not in Trash) and after always (f in Trash)
prop6 C: always all f:File | (f in Trash) implies always f in Trash
prop6 C: always all f:File | (f in Trash) implies always f in Trash
prop7 O: always some Protected
prop7 S: always some Protected or
prop9 C: always no Protected & Trash
prop9 C: always no Protected & Trash
prop10 U: always Protected in Protected'
prop10 C: always Protected = Protected'
prop11 C: always all f:File | f not in Protected implies after f in Protected
prop7 C: eventually some Protected
prop12 B: always( all f: File | f not in Trash and eventually f in Trash and after always f in Trash)
prop12 O: always( some f: File | f not in Trash and eventually f in Trash and after always f in Trash)
prop12 O: always( some f: File | f not in Trash and eventually always f in Trash)
prop12 O: always( some f: File | eventually always f in Trash)
prop12 O: some f: File |always( eventually always f in Trash)
prop8 B: eventually File.link in Trash
prop8 B: eventually link.File in Trash
prop8 B: eventually all f: File| f.link  in Trash
prop8 U: all f: File| f in link.File implies eventually f in Trash
prop8 U: all f,g: File| f->g in link implies eventually f in Trash
prop8 B: all f,g: File| f->g in link implies eventually always f in Trash
prop8 O: always all f,g: File| f->g in link implies eventually always f in Trash
prop8 C: always all f,g: File| f->g in link implies eventually f in Trash
prop8 S: always all f| f in link.File implies eventually f in Trash
prop8 C: always all f:File| f in link.File implies eventually f in Trash
prop8 C: always all f:File| f in link.File implies eventually f in Trash
prop13 C: all f: File | f in Trash implies once f not in Trash
prop14 S: always f:Protected | f in Trash implies after f not in Protected
prop14 C: always all f:Protected | f in Trash implies after f not in Protected
prop15 C: always all f:File | eventually f in Trash
prop15 B: always eventually File in Trash
prop15 C: always all f:File | eventually f in Trash
prop16 C: always all f: Protected | historically f in Protected
prop17 U: always all f:File | f not in Trash and f in Trash' implies f not in File''
prop17 B: always all f:File | f not in Trash and eventually f in Trash implies f not in File
prop17 T: always all f:File | f not in Trash and eventually f in Trash implies f after f not in File''
prop17 B: always all f:File | f not in Trash and eventually f in Trash implies after f not in File''
prop17 O: always all f:File | eventually f in Trash implies after f not in File
prop17 C: always all f:File | f in Trash implies after f not in File
prop18 B: all f:Protected | eventually f in Trash implies f not in Protected
prop19 C: always all f: Protected | f in Protected until f in Trash
prop12 O: some f: File |eventually always f in Trash
prop12 O: some f: File |always( eventually always f in Trash)
prop12 B: all f: File | eventually f in Trash and after always f in Trash
prop12 O: some f: File | eventually f in Trash and after always f in Trash
prop12 C: eventually some f: File |  f in Trash and after always f in Trash
prop12 C: eventually some f: Trash | always f in Trash
NA H: THEME UPDATE

