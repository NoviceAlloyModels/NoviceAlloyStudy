NA H: THEME UPDATE
inv1 C: no Trash	no Protected
inv2 B: no File	after some File'
inv2 C: no File	some File'
inv3 C: always some File
inv4 C: eventually some Trash
inv5 B: eventually some Trash
inv5 O: eventually some f:File | File' = File -f
inv5 O: eventually some f:File | f not in Protected and File' = File -f
inv5 B: eventually no Trash
inv5 O: some f : File| f not in Trash and eventually f not in File
inv5 O: eventually some f : File| f in Trash and f not in File'
inv5 O: eventually some f : File| f in Trash and File' = File - f
inv5 O: eventually some f : File| f in Trash and File' = File - f and Trash' = Trash - f
inv5 O: eventually some f : Trash| File' = File - f and Trash' = Trash - f
inv5 O: eventually some f : Trash| f not in File'
inv5 C: eventually some f : File| f not in File'
inv6 O: always ( some f:File| f not in Trash  and after (always (f in Trash)))
inv6 O: always ( some f:File| f not in Trash  and after (f in Trash and after always f in Trash))
inv6 B: always some f:File | (always f in Trash) releases (f in Trash and after f in Trash)
inv6 B: always some f:File | (not always f in Trash) releases (f in Trash and after f in Trash)
inv6 B: always some f:File | (not (always f in Trash)) releases (f in Trash and after f in Trash)
inv6 O: always all f:File | (f in Trash) releases (f not in Trash) and after always (f in Trash)
inv6 C: always all f:File | (f in Trash) implies always f in Trash
inv6 C: always all f:File | (f in Trash) implies always f in Trash
inv7 O: always some Protected
inv7 S: always some Protected or
inv9 C: always no Protected & Trash
inv9 C: always no Protected & Trash
inv10 U: always Protected in Protected'
inv10 C: always Protected = Protected'
inv11 C: always all f:File | f not in Protected implies after f in Protected
inv7 C: eventually some Protected
inv12 B: always( all f: File | f not in Trash and eventually f in Trash and after always f in Trash)
inv12 O: always( some f: File | f not in Trash and eventually f in Trash and after always f in Trash)
inv12 O: always( some f: File | f not in Trash and eventually always f in Trash)
inv12 O: always( some f: File | eventually always f in Trash)
inv12 O: some f: File |always( eventually always f in Trash)
inv8 B: eventually File.link in Trash
inv8 B: eventually link.File in Trash
inv8 B: eventually all f: File| f.link  in Trash
inv8 U: all f: File| f in link.File implies eventually f in Trash
inv8 U: all f,g: File| f->g in link implies eventually f in Trash
inv8 B: all f,g: File| f->g in link implies eventually always f in Trash
inv8 O: always all f,g: File| f->g in link implies eventually always f in Trash
inv8 C: always all f,g: File| f->g in link implies eventually f in Trash
inv8 S: always all f| f in link.File implies eventually f in Trash
inv8 C: always all f:File| f in link.File implies eventually f in Trash
inv8 C: always all f:File| f in link.File implies eventually f in Trash
inv13 C: all f: File | f in Trash implies once f not in Trash
inv14 S: always f:Protected | f in Trash implies after f not in Protected
inv14 C: always all f:Protected | f in Trash implies after f not in Protected
inv15 C: always all f:File | eventually f in Trash
inv15 B: always eventually File in Trash
inv15 C: always all f:File | eventually f in Trash
inv16 C: always all f: Protected | historically f in Protected
inv17 U: always all f:File | f not in Trash and f in Trash' implies f not in File''
inv17 B: always all f:File | f not in Trash and eventually f in Trash implies f not in File
inv17 T: always all f:File | f not in Trash and eventually f in Trash implies f after f not in File''
inv17 B: always all f:File | f not in Trash and eventually f in Trash implies after f not in File''
inv17 O: always all f:File | eventually f in Trash implies after f not in File
inv17 C: always all f:File | f in Trash implies after f not in File
inv18 B: all f:Protected | eventually f in Trash implies f not in Protected
inv19 C: always all f: Protected | f in Protected until f in Trash
inv12 O: some f: File |eventually always f in Trash
inv12 O: some f: File |always( eventually always f in Trash)
inv12 B: all f: File | eventually f in Trash and after always f in Trash
inv12 O: some f: File | eventually f in Trash and after always f in Trash
inv12 C: eventually some f: File |  f in Trash and after always f in Trash
inv12 C: eventually some f: Trash | always f in Trash
NA H: THEME UPDATE

