NA H: THEME UPDATE
inv1 C: no Trash and no Protected
inv1 C: no Trash and no Protected
inv2 O: before no File
inv2 O: before no File and after some File
inv2 C: no File and after some File
inv3 C: always some File
inv4 C: eventually some Trash
inv5 T: after no (eventually some Trash)
inv6 B: eventually always some Trash
inv6 B: always eventually some Trash
inv6 B: all f : File | always f in Trash since f in Trash
inv6 B: some f : File | always f in Trash since f in Trash
inv6 B: some f : File | always f in Trash since eventually f in Trash
inv6 B: all f : File | eventually f in Trash implies always f in Trash
inv6 S: all f : File | f not in Protected /\ eventually f in Trash implies always f in Trash
inv6 U: all f : File | f in Trash implies always f in Trash
inv6 B: all f : File | (eventually f in Trash) implies (always f in Trash)
inv6 U: all f : File | always ((f in Trash) implies (always f in Trash))
inv6 U: all f : File | f in Trash implies always f in Trash
inv6 U: all f : File | once f in Trash implies always f in Trash
inv7 C: eventually some Protected
inv9 C: always (all f : Protected | f not in Trash)
inv9 C: always all f : Protected | f not in Trash
inv9 C: always all f : Protected | f not in Trash
inv9 B: all f : Protected | always (f not in Trash)
inv9 B: all f : Protected { always (f not in Trash) }
inv6 B: once some f : Trash | once f in Trash implies always f in Trash
inv6 B: always some f : Trash | once f in Trash implies always f in Trash
inv6 B: always some f : Trash | always f in Trash
inv6 B: once some f : Trash | always f in Trash
inv6 U: once all f : Trash | always f in Trash
inv6 C: always all f : Trash | eventually f in Trash implies always f in Trash
inv5 O: always some f : Trash | eventually f not in File
inv5 B: always some f : Trash | f in Trash releases f in File
inv8 B: always some f : File | eventually f.link in Trash
inv8 B: always some l : File.link | eventually l in Trash
inv8 B: always all l : File.link | eventually l in File.link implies l in Trash
inv8 B: always all l : File.link | eventually l in File.link implies always l in Trash
inv8 B: always all l : File.link | eventually l in Trash
inv10 S: always all f : Protected implies always f in Protected
inv10 U: always all f : Protected | always f in Protected
inv10 U: always all f : Protected | eventually f in Protected implies always f in Protected
inv20 S: always f : Trash | f in Trash since f not in Protected
inv20 S: always (f : Trash | f in Trash since f not in Protected)
inv20 S: always (f : Trash | f in Trash since f not in Protected)
inv12 E: 
inv10 U: always all f : Protected | eventually f in Protected implies always f in Protected

