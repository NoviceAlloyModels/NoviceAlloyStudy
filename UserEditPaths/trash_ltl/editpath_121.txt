NA H: THEME UPDATE
inv1 C: no Protected	no Trash
inv2 C: no File	some File'
inv3 C: always some File
inv4 C: eventually some Trash
inv5 S: eventually some f:File-Trash and f' in Trash
inv6 U: all f:File | always f in Trash implies always f in Trash
inv6 U: all f:File | always f in Trash implies always f in Trash
inv7 O: always some Protected
inv7 C: eventually some Protected
inv8 T: some link implies eventually link in Trash
inv8 B: some link implies eventually File.link in Trash
inv8 B: some link implies eventually link.File in Trash
inv8 B: some link implies eventually link.File in Trash
inv8 B: some link implies eventually link.File-Protected in Trash
inv8 B: some link implies eventually link.(File-Protected) in Trash
inv8 B: some link implies eventually (link.File)-Protected in Trash
inv9 C: always no Protected & Trash
inv9 C: always no Protected & Trash
inv10 U: always Protected in Protected'
inv10 S: all f:file | always f in Protected implies always f in Protected
inv10 U: all f:File | always (f in Protected implies always f in Protected)
inv10 U: all f:File | always (f in Protected implies (always f in Protected))
inv11 S: always f:File | f not in Protected implies after f in Protected
inv11 S: always f:File | f not in Protected implies after f in Protected
inv11 C: always all f:File | f not in Protected implies after f in Protected
inv12 S: all f:file | eventually always f in Trash
inv12 B: all f:File | eventually always f in Trash
inv12 B: all f:File-Protected | eventually always f in Trash
inv12 O: some f:File-Protected | eventually always f in Trash
inv12 O: some f:File | eventually always f in Trash
inv13 C: all f:Trash | once f not in Trash
inv14 U: all f:Protected&Trash | after f not in Protected
inv15 U: all f:File | eventually f in Trash
inv16 U: all f:Protected | historically f in Protected
inv16 U: all f:File | f in Protected implies historically f in Protected
inv17 U: all f:File | before f not in Trash implies after File'=File-f

