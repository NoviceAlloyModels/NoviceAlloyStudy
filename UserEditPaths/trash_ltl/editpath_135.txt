NA H: THEME UPDATE
inv1 S: historically once
inv1 T: historically once no Trash and Protected
inv1 T: historically once (no Trash and Protected)
inv1 T: historically (once (no Trash and Protected))
inv1 U: historically (once (no Trash & Protected))
inv1 T: historically (once (no Trash or Protected))
inv1 C: historically (once (no Trash + Protected))
inv1 C: once (no Trash + Protected)
inv1 C: no Trash + Protected
inv1 C: no Trash + Protected
inv2 C: no File and after some File
inv3 C: always some File
inv4 C: eventually some Trash
inv5 B: eventually some Trash
inv5 B: eventually some Trash
inv3 C: always some File
inv3 U: some File
inv3 C: always some File
inv5 B: eventually some Trash
inv5 B: no Trash and eventually some Trash
inv5 B: eventually some Trash
inv5 B: eventually some Trash
inv5 U: eventually (Trash & File = Trash)
inv5 B: eventually (Trash + File = Trash)
inv5 U: eventually (no Trash - File)
inv5 B: eventually (no File - Trash)
inv5 B: some f: File | eventually f in Trash
inv5 B: some f: File | eventually (f in Trash)
inv5 B: some f: File | eventually f in Trash
inv5 B: some f: File | eventually (f in Trash)
inv5 B: no Trash and some f: File | eventually (f in Trash)
inv5 B: no Trash and eventually some Trash
inv5 B: no Trash and (eventually (some Trash))
inv5 B: no Trash and eventually some Trash
inv5 B: some f: File | f not in Trash and eventually f in Trash
inv5 B: eventually some Trash
inv5 B: some f: File | f not in Trash until f in Trash
inv5 B: no Trash until some Trash
inv5 B: no Trash and no Trash until some Trash
inv5 B: some f: File | f not in Trash and eventually f in Trash
inv5 B: some f: File | no Trash and eventually f in Trash
inv5 B: some f: File | no Trash and eventually f in Trash
inv6 U: all f: File | f in Trash implies after f in Trash
inv6 C: always (all t: Trash | always t in Trash)
inv6 U: all t: Trash | t in Trash triggered t in Trash
inv6 C: always (all t:Trash | always t in Trash)
inv7 C: eventually some Protected
inv7 C: eventually some Protected
inv8 B: always( all f: File | eventually f.link in Trash)
inv8 B: always(all f: File | eventually f.link in Trash)
inv8 T: always(all f: File | f.link implies eventually f.link in Trash)
inv8 B: always(all f: File | some f.link implies eventually f.link in Trash)
inv8 S: eventually f.link in Trash
inv8 B: eventually File.link in Trash
inv8 B: eventually link.File in Trash
inv8 B: eventually link.File in Trash
inv8 B: always(eventually link.File in Trash)
inv8 B: always(eventually File.link in Trash)
inv8 B: always(eventually File.link in Trash)
inv8 B: always(after eventually File.link in Trash)
inv8 B: always(after (eventually File.link in Trash))
inv8 B: always(eventually File.link in Trash)
inv9 C: always(no Protected & Trash)
inv9 C: always no Protected & Trash
inv10 T: one Protected always Protected
inv10 T: all f:File | once Protected implies always Protected
inv10 U: all f:File | once f in Protected implies always f in Protected
inv10 T: all f:File | f.Protected implies always f in Protected
inv10 U: all f:File | f in Protected implies always f in Protected
inv10 U: always(all f:File | f in Protected implies always f in Protected)
inv10 U: always(all p: Protected | always p in Protected)
inv9 C: always no Protected & Trash
NA H: THEME UPDATE

