NA H: THEME UPDATE
prop1 C: historically no (Trash+Protected)
prop2 U: historically no File
prop1 C: historically no (Trash+Protected)
prop1 C: historically no (Trash+Protected)
prop2 U: (no File) until (some File)
prop2 U: (historically no File) until (some File)
prop2 U: historically no File until (some File)
prop2 U: historically no File
prop2 U: historically no (File+Trash+Protected)
prop3 C: always some File
prop2 C: historically no File and after some File
prop3 C: always some File
prop4 C: eventually some Trash
prop5 B: eventually some Trash
prop4 T: eventually some link in Trash
prop4 T: all f:File | eventually some (f.link:> File).Trash
prop4 T: all f:File | eventually some (f.link :> File).Trash
prop4 T: all f:File | eventually some (f.link).Trash
prop4 T: all f:File | eventually some (f.link)in Trash
prop5 B: eventually some Trash
prop4 T: all f:File | eventually some (f in Trash and f.link & Trash)
prop4 T: eventually some link in Trash
prop5 B: all f:File | eventually some (f.link & Trash)
prop4 C: eventually some Trash
prop6 B: all f:File | f in Trash triggered (always f in Trash)
prop6 S: all f:File | (f in Trash) triggered (f always in Trash)
prop6 B: all f:File | (f in Trash) triggered (f in Trash)
prop6 U: all f:File | f in Trash implies always (f in Trash)
prop6 U: all f:File | some (f & Trash) implies always (f in Trash)
prop6 C: always (all t:Trash | after t in Trash)
prop7 C: eventually some Protected
prop8 B: always (all f:File | some f.link implies eventually f.link in Trash)
prop8 B: all f:File | some f.link implies eventually f.link in Trash
prop8 B: all f:File | some link.f implies eventually f in Trash
prop8 T: all f:File | some File.link.f implies eventually f in Trash
prop8 B: all f:File | some link.f implies eventually f in Trash
prop8 B: all f:File | some link.f implies (eventually f in Trash)
prop8 T: all f:File | link.f implies (eventually f in Trash)
prop8 T: all f:File | link.f implies (eventually f in Trash)
prop8 B: all f:File | some link.f implies (eventually f in Trash)
prop8 T: all f:File | some link.f implies (eventually link in Trash)
prop8 B: all f:File | some link.f implies eventually ( f in Trash)
NA H: THEME UPDATE
prop9 S: always (all f:File | f in Protected immplies f not in Trash)
prop9 S: always (all f:File | f in Protected immplies f not in Trash)
prop9 C: always (all f:File | f in Protected implies f not in Trash)
NA H: THEME UPDATE
prop10 B: always (all f:File | f in Protected since f in Protected)
prop10 S: all f:File | f in protected implies always (f in protected)
prop10 S: all f:File | f in Protected implies always (f in protected)
prop10 U: all f:File | f in Protected implies always (f in Protected)
prop10 B: all f:File | always (f in Protected) since f in Protected
prop10 U: always (all f:File | f in Protected implies always (f in Protected))
prop10 T: once Protected always Protected
prop10 T: once Protected always Protected
prop10 U: always (all f:File | f in Protected implies after f in Protected)
prop10 U: always (Protected in Protected')
prop10 U: always (Protected in Protected')
prop6 C: always (Trash in Trash')
prop5 C: eventually (some f:File | f not in File')
prop10 U: always (Protected in Protected')
prop11 C: always (all f:File | f not in Protected implies after f in Protected)
prop11 U: all f:File | f not in Protected implies after f in Protected
prop11 C: always (all f:File | f not in Protected implies after f in Protected)
prop13 C: always (all f:File | f in Trash implies once f not in Trash)
prop13 C: all f:File | f in Trash implies once f not in Trash
prop14 C: always (all f:File | f in Trash and f in Protected implies after f not in Protected)
prop15 C: always (all f:File | eventually f in Trash)
prop16 C: always (all f:File | f in Protected implies historically f in Protected)
prop17 B: always (all f:File | f in Trash implies after f not in File')
prop17 B: all f:File | f in Trash implies after f not in File'
prop17 C: always (all f:File | f in Trash implies after f not in File)
prop10 U: always (Protected in Protected')
prop10 U: always (Protected in Protected)
prop18 C: always (all f:File | f in Protected implies f in Trash releases f in Protected)
prop18 C: always (all f:File | f in Protected implies (f in Trash) releases (f in Protected))
prop19 C: always (all f:File | f in Protected implies f in Protected until f in Trash)
prop20 C: always (all f:File | f in Trash implies f in Trash since f not in Protected)
prop10 C: always Protected' = Protected
prop12 B: some f:File | eventually f in Trash
prop12 B: some f:File | eventually f in Trash implies after f in Trash
prop12 B: some f:File | eventually f in Trash implies always f in Trash
NA H: THEME UPDATE
NA H: THEME UPDATE
prop8 B: all f:File | some link.f implies eventually ( f in Trash)
prop8 U: all f:File | some f.link implies eventually ( f in Trash)
prop8 U: all f:File | some f.link implies eventually f in Trash
prop12 B: some f:File | eventually f in Trash implies always f in Trash
prop12 O: some f:File | eventually always f in Trash
prop12 B: always( some f:File | eventually f in Trash)

