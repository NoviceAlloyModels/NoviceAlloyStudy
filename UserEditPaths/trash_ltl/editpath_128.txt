NA H: THEME UPDATE
prop1 C: no Trash	no Protected
prop2 C: no File	some File'
prop3 C: always some File
prop4 C: eventually some Trash
prop5 C: eventually (some f : File | f not in File')
prop6 S: all f : File : f in Trash => always f in Trash
prop6 S: all f : File : f in Trash implies always f in Trash
prop6 S: all f : File : f | in Trash => always f in Trash
prop6 S: all f : File | in Trash => always f in Trash
prop6 U: all f : File | f in Trash => always f in Trash
prop6 U: all f : File | f in Trash => always f in Trash
prop7 O: always some Protected
prop7 C: eventually some Protected
prop8 T: all l : link | eventually File.l in Trash
prop8 T: all l : link | eventually (File.l in Trash)
prop8 S: all f : f | some f.link => eventually (f.link in Trash)
prop8 B: all f : File | some f.link => eventually (f.link in Trash)
prop9 B: all p : Protected | always p not in Trash
prop9 B: all p : Protected | p not in Trash'
prop9 B: all p : Protected | p not in Trash and p not in Trash'
prop9 B: all p : Protected | p not in Trash'
prop9 B: all p : Protected | always p not in Trash'
prop9 B: all p : Protected | always p not in Trash
prop9 B: all p : Protected | p not in Trash'
prop9 B: all p : Protected | p not in Trash' and p.*link not in Trash'
prop9 B: all p : Protected | p not in Trash' and p.(^link) not in Trash'
prop9 B: all p : Protected | p not in Trash' and p.^link not in Trash'
prop9 B: all p : Protected | p not in Trash'
prop10 U: all p : Protected | p in Protected => always p in Protected
prop11 U: all f : File - Protected | f in Protected'
prop11 C: always all f : File - Protected | f in Protected'
prop11 C: always all f : File - Protected | f in Protected'
prop10 U: always all p : Protected | p in Protected => always p in Protected
prop6 C: always all f : File | f in Trash => always f in Trash
prop8 B: always all f : File | some f.link => eventually (f.link in Trash)
prop8 C: always all f : File | some f.link => eventually (f in Trash)
prop8 C: always all f : File | some f.link => eventually f in Trash
prop9 B: always all p : Protected | p not in Trash'
prop9 C: always all p : Protected | p not in Trash
prop10 U: always all p : Protected | p in Protected => always p in Protected
prop10 U: always all p : Protected | once p in Protected => p in Protected
prop10 U: always all p : Protected | p in Protected => always p in Protected
prop10 E: 
prop11 C: always all f : File - Protected | f in Protected'
prop12 B: always all f : File | eventually f in Trash	always all f : Trash | f in Trash'
prop12 B: always all f : File - Protected | eventually f in Trash	always all f : Trash - Protected | f in Trash'
prop12 B: always all f : File | eventually f in Trash	always all f : Trash | f in Trash'
prop12 B: always all f : Trash | f in Trash'
prop13 C: always all f : Trash | once f not in Trash
prop14 C: always all f : Trash & Protected | f not in Protected'
prop15 C: always all f : File | eventually f in Trash
prop16 C: always all p : Protected | historically p in Protected
prop17 C: always all f : File | f in Trash => f not in File'
prop18 U: always all p : Protected | always p not in Protected => p in Trash
prop18 U: always all p : Protected | always p not in Protected => once p in Trash
prop18 B: always all p : Protected | p not in Protected' => p in Trash'
prop19 U: always all p : Protected | eventually p in Trash && (always p not in Trash => p in Protected)
prop19 C: always all p : Protected | p in Protected until p in Trash
prop20 S: always all f : Trash | once p in Protected && p not in Protected'
prop20 B: always all f : Trash | once f in Protected && f not in Protected'
prop20 O: always all f : Trash | f not in Protected

