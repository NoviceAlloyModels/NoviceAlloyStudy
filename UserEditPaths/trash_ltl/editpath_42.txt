NA H: THEME UPDATE
inv1 C: no Trash and no Protected
inv1 C: no Trash and no Protected
inv2 B: no Trash && some Trash'
inv2 C: no File and some File'
inv3 C: always some File
inv4 C: eventually some Trash
inv5 C: eventually some f:File | f not in File'
inv6 U: always all f:Trash | f in Trash
inv6 C: always all f:Trash | always f in Trash
inv6 U: all f:Trash | always f in Trash
inv6 C: always all f:Trash | always f in Trash
inv7 C: eventually some Protected
inv8 T: all f1:File , f2:File | f1.link = f2 implies eventually f2 & Trash
inv8 B: all f1:File , f2:File | f1.link = f2
inv8 T: all f1:File , f2:File | f1.link = f2 implies f2 & Trash
inv8 B: all f1:File , f2:File | f1.link = f2 implies eventually some f2 & Trash
inv8 B: all f1:File , f2:File | f1.link = f2 implies eventually f2 in Trash
inv9 C: always no Protected & Trash
inv10 U: always all f:Protected | always f in Protected
inv10 U: always all f:Protected | always f in Protected
inv10 U: all f:Protected | always f in Protected
inv11 B: not Protected & Protected' = File
inv11 B: Protected' = File
inv11 T: (not Protected) + Protected' = File
inv11 B: Protected + Trash = Protected'
inv11 B: all f:File' | f in Protected
inv12 B: always all f:File | eventually f in Trash
inv12 B: always all f:File | eventually f in Trash && eventually f not in Trash
inv12 B: always all f:File | eventually f in Trash && historically f not in Trash
inv10 B: always all f:File | once f in Protected && always f in Protected
inv10 B: once File in Protected implies always File in Protected
inv10 S: always f:File | once f in Protected implies always f in Protected
inv10 U: always all f:File | once f in Protected implies always f in Protected
inv13 C: always all f:Trash | once f not in Trash
inv14 O: always all f:Trash | f in Protected and f not in Protected'
inv14 C: always all f:Trash | f in Protected implies f not in Protected'
inv15 C: always all f:File | eventually f in Trash
inv16 C: always all f:Protected | historically f in Protected
inv17 C: always all f:Trash | f not in File'
inv18 U: always all f:Protected | f not in Protected implies f in Trash
inv18 C: always all f:Protected | f not in Protected' implies f in Trash
inv19 U: always all f:Protected | f in Protected until eventually f in Trash
inv19 C: always all f:Protected | f in Protected until f in Trash
inv20 C: always all f:Trash | f in Trash since f not in Protected
inv10 U: always all f:Protected | always f in Protected
inv11 O: always (File - Protected) = Protected'
inv11 O: always ((File - Protected) = Protected')
inv11 C: always all f:File | f not in Protected implies f in Protected'
inv10 U: always all f:File | f in Protected implies always f in Protected
inv12 S: always all f:File | eventually f in Trash && f in Trash until
inv12 B: always all f:File | eventually f in Trash && f in Trash until f not in Trash
inv12 B: always all f:File | eventually f in Trash && (f in Trash until f not in Trash)
inv12 B: always all f:File | eventually f in Trash implies (f in Trash until f not in Trash)

