NA H: THEME UPDATE
inv1 C: no Trash and no Protected
inv2 S: no Files and after some Files
inv2 S: no Files and after some File
inv2 C: no File and after some File
inv3 C: always some File
inv4 C: eventually some Trash
inv5 S: eventually some File & Deleted
inv5 B: eventually some File & Trash
inv5 B: no File & Trash and eventually some File & Trash
inv5 B: some f : File | f not in Trash and eventually f in Trash
inv5 B: some f : File - Protected | f not in Trash and eventually f in Trash
inv6 U: all f : File | f in Trash => always f in Trash
inv6 U: all f : File-Protected | f in Trash => always f in Trash
inv6 T: let x = File & Trash | always x
inv6 S: all f : File | f not in trash and after f in Trash => always f in Trash
inv6 B: all f : File | f not in Trash and after f in Trash => always f in Trash
inv6 B: all f : File-Protected | f not in Trash and after f in Trash => always f in Trash
inv7 C: eventually some Protected
inv8 B: all f : File.link | eventually f in Trash
inv8 B: all f : File.link | f not in Trash and eventually f in Trash
inv9 C: always no Protected & Trash
inv10 U: all f : File | f in Protected => always f in Protected
inv10 U: all f : Protected | always f in Protected
inv10 B: all f : Protected.link | always f in Protected
inv10 U: all f : Protected | always f in Protected
inv10 B: all f : Protected | always f in Protected and f not in Trash
inv10 B: all f : File | f in Protected => always f in Protected and f not in Trash
inv10 U: all f : File | f in Protected => always f in Protected
inv11 S: all f : File-Protected | after f in Proteced
inv11 U: all f : File-Protected | after f in Protected
inv11 B: all f : File | f not in Protected and after f in Protected
inv13 C: all f : File | eventually f in Trash => once f not in Trash
inv14 B: all f : Protected | eventually f in Trash => after f not in Protected
inv15 E: 

