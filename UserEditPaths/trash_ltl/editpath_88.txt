NA H: THEME UPDATE
prop1 C: no (Trash + Protected)
prop2 C: no File and after some File
prop2 C: no File and some File'
prop2 U: File' in File + File'
prop2 U: File' = File + File'
prop3 C: always some File
prop4 C: eventually some Trash
prop6 S: always all f : Trash : always f in Trash
prop6 C: always all f : Trash | always f in Trash
prop7 C: eventually some Protected
prop8 B: always all f : File.link | eventually f in Trash
prop8 B: always some f : File.link | eventually f in Trash
prop9 C: always no (Protected & Trash)
prop10 C: always Protected' = Protected
prop11 B: always all f : File - Protected | f in Trash'
prop11 C: always all f : File - Protected | f in Protected'
prop11 C: always (File - Protected) in Protected'
prop13 C: always all f : Trash | once f not in Trash
prop14 C: always all f : Protected & Trash | f not in Protected'
prop15 C: always all f : File | eventually f in Trash
prop15 O: always no File & Trash and eventually some File & Trash
prop15 O: always (no File & Trash and eventually some File & Trash)
prop15 B: always (no File & Trash => eventually some File & Trash)
prop16 B: all f : File | historically f in Protected
prop16 O: always all f : File | historically f in Protected
prop16 U: all f : Protected | historically f in Protected
prop16 C: always all f : Protected | historically f in Protected
prop17 B: always File & Trash not in File' & Trash'
prop17 B: always File & Trash not in File'
prop17 O: always File' = File - File & Trash
prop17 O: always File' = File - (File & Trash)
prop17 O: always File' = File - Trash
prop17 O: always File' = File - Trash
prop17 O: always File' = File - File & Trash
prop17 C: always all f : Trash | f not in File'
prop17 O: always File' = File - Trash
prop17 C: always no File' & File & Trash
prop14 C: always no Protected & Trash & Protected'
prop19 T: no Protected & Trash until Protected & Trash
prop19 B: all f : File | f in Protected until f in Trash
prop19 U: all f : Protected | f in Protected until f in Trash
prop19 U: all f : Protected | f in Protected until f in Trash
prop19 C: always all f : Protected | f in Protected until f in Trash
prop19 O: always (Protected' = Protected until Protected in Trash)
prop19 B: always (Protected' = Protected until some Protected & Trash)
prop8 B: always all f : File.link | eventually f in Trash
prop8 C: always all f : link.File | eventually f in Trash
prop5 B: always all f : File | eventually f in Trash
prop5 B: always some f : File | eventually f in Trash
prop5 O: always some f : File | File' = File - f
prop5 B: always all f : File | File' = File - f
prop5 B: always all f : File | eventually File' = File - f
prop5 B: some f : File | eventually f in Trash
prop5 B: always some f : File | eventually f in Trash
prop5 O: some f : File | eventually f not in File
prop5 O: always some f : File | eventually f not in File
prop5 B: always all f : File | eventually f not in File
prop5 B: all f : File | eventually f not in File
prop5 O: some f : File | eventually f not in File
prop5 O: some f : Trash | eventually f not in File
prop12 B: some f : File | eventually f in Trash => always f in Trash
prop12 B: some f : File | eventually f in Trash => eventually f not in Trash
prop12 B: always all f : File | eventually f in Trash => eventually f not in Trash
prop12 B: always some f : File | eventually f in Trash => eventually f not in Trash
prop12 B: some f : File | eventually f in Trash => eventually f not in Trash
prop20 O: always all f : File | f in Trash => historically f not in Protected
prop20 B: all f : File | f in Trash since f not in Protected
prop20 O: always all f : File | f in Trash since f not in Protected
prop20 O: always all f : File | f in Trash since f in File - Protected
prop20 O: always all f : File | f in Trash since f not in Protected
prop18 B: always all f : Protected | f in Trash' => f not in Protected'
prop18 B: always all f : Protected | f in Trash => f not in Protected'
prop20 O: always all f : File | f in Trash since f not in Protected
prop20 B: all f : File | f in Trash since f not in Protected
prop20 O: always all f : File | f in Trash since f not in Protected
prop20 C: always all f : Trash | f in Trash since f not in Protected
prop12 B: always all f : File | eventually f in Trash => always f in Trash
prop12 B: all f : File | eventually f in Trash => always f in Trash
prop12 B: always some f : File | eventually f in Trash => always f in Trash
prop12 B: some f : File | eventually f in Trash => always f in Trash
prop12 B: some f : File | eventually f in Trash => eventually f in Trash
prop12 U: always all f : File | eventually f in Trash => eventually f in Trash
prop12 B: always all f : File | eventually f in Trash => eventually f not in Trash
prop12 B: all f : File | eventually f in Trash => eventually f not in Trash
prop12 B: always some f : File | eventually f in Trash => eventually f not in Trash
prop12 B: always some f : File | eventually f in Trash => after eventually f not in Trash
prop12 B: all f : File | always (	eventually f in Trash => always f in Trash	)
prop12 B: all f : File | eventually f in Trash => always (eventually f not in Trash)
prop5 O: some f : File | eventually f not in File
prop5 O: some f : Trash | eventually f not in File
prop5 O: some f : Trash | eventually f not in (File + Protected + Trash)
prop5 O: some f : File | eventually f not in (File + Protected + Trash)

