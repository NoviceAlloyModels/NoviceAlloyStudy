NA H: THEME UPDATE
inv1 C: no (Trash + Protected)
inv2 C: no File and after some File
inv2 C: no File and some File'
inv2 U: File' in File + File'
inv2 U: File' = File + File'
inv3 C: always some File
inv4 C: eventually some Trash
inv6 S: always all f : Trash : always f in Trash
inv6 C: always all f : Trash | always f in Trash
inv7 C: eventually some Protected
inv8 B: always all f : File.link | eventually f in Trash
inv8 B: always some f : File.link | eventually f in Trash
inv9 C: always no (Protected & Trash)
inv10 C: always Protected' = Protected
inv11 B: always all f : File - Protected | f in Trash'
inv11 C: always all f : File - Protected | f in Protected'
inv11 C: always (File - Protected) in Protected'
inv13 C: always all f : Trash | once f not in Trash
inv14 C: always all f : Protected & Trash | f not in Protected'
inv15 C: always all f : File | eventually f in Trash
inv15 O: always no File & Trash and eventually some File & Trash
inv15 O: always (no File & Trash and eventually some File & Trash)
inv15 B: always (no File & Trash => eventually some File & Trash)
inv16 B: all f : File | historically f in Protected
inv16 O: always all f : File | historically f in Protected
inv16 U: all f : Protected | historically f in Protected
inv16 C: always all f : Protected | historically f in Protected
inv17 B: always File & Trash not in File' & Trash'
inv17 B: always File & Trash not in File'
inv17 O: always File' = File - File & Trash
inv17 O: always File' = File - (File & Trash)
inv17 O: always File' = File - Trash
inv17 O: always File' = File - Trash
inv17 O: always File' = File - File & Trash
inv17 C: always all f : Trash | f not in File'
inv17 O: always File' = File - Trash
inv17 C: always no File' & File & Trash
inv14 C: always no Protected & Trash & Protected'
inv19 T: no Protected & Trash until Protected & Trash
inv19 B: all f : File | f in Protected until f in Trash
inv19 U: all f : Protected | f in Protected until f in Trash
inv19 U: all f : Protected | f in Protected until f in Trash
inv19 C: always all f : Protected | f in Protected until f in Trash
inv19 O: always (Protected' = Protected until Protected in Trash)
inv19 B: always (Protected' = Protected until some Protected & Trash)
inv8 B: always all f : File.link | eventually f in Trash
inv8 C: always all f : link.File | eventually f in Trash
inv5 B: always all f : File | eventually f in Trash
inv5 B: always some f : File | eventually f in Trash
inv5 O: always some f : File | File' = File - f
inv5 B: always all f : File | File' = File - f
inv5 B: always all f : File | eventually File' = File - f
inv5 B: some f : File | eventually f in Trash
inv5 B: always some f : File | eventually f in Trash
inv5 O: some f : File | eventually f not in File
inv5 O: always some f : File | eventually f not in File
inv5 B: always all f : File | eventually f not in File
inv5 B: all f : File | eventually f not in File
inv5 O: some f : File | eventually f not in File
inv5 O: some f : Trash | eventually f not in File
inv12 B: some f : File | eventually f in Trash => always f in Trash
inv12 B: some f : File | eventually f in Trash => eventually f not in Trash
inv12 B: always all f : File | eventually f in Trash => eventually f not in Trash
inv12 B: always some f : File | eventually f in Trash => eventually f not in Trash
inv12 B: some f : File | eventually f in Trash => eventually f not in Trash
inv20 O: always all f : File | f in Trash => historically f not in Protected
inv20 B: all f : File | f in Trash since f not in Protected
inv20 O: always all f : File | f in Trash since f not in Protected
inv20 O: always all f : File | f in Trash since f in File - Protected
inv20 O: always all f : File | f in Trash since f not in Protected
inv18 B: always all f : Protected | f in Trash' => f not in Protected'
inv18 B: always all f : Protected | f in Trash => f not in Protected'
inv20 O: always all f : File | f in Trash since f not in Protected
inv20 B: all f : File | f in Trash since f not in Protected
inv20 O: always all f : File | f in Trash since f not in Protected
inv20 C: always all f : Trash | f in Trash since f not in Protected
inv12 B: always all f : File | eventually f in Trash => always f in Trash
inv12 B: all f : File | eventually f in Trash => always f in Trash
inv12 B: always some f : File | eventually f in Trash => always f in Trash
inv12 B: some f : File | eventually f in Trash => always f in Trash
inv12 B: some f : File | eventually f in Trash => eventually f in Trash
inv12 U: always all f : File | eventually f in Trash => eventually f in Trash
inv12 B: always all f : File | eventually f in Trash => eventually f not in Trash
inv12 B: all f : File | eventually f in Trash => eventually f not in Trash
inv12 B: always some f : File | eventually f in Trash => eventually f not in Trash
inv12 B: always some f : File | eventually f in Trash => after eventually f not in Trash
inv12 B: all f : File | always (	eventually f in Trash => always f in Trash	)
inv12 B: all f : File | eventually f in Trash => always (eventually f not in Trash)
inv5 O: some f : File | eventually f not in File
inv5 O: some f : Trash | eventually f not in File
inv5 O: some f : Trash | eventually f not in (File + Protected + Trash)
inv5 O: some f : File | eventually f not in (File + Protected + Trash)

