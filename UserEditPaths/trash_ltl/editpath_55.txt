NA H: THEME UPDATE
inv1 C: no Trash and no Protected
inv2 B: some File
inv2 U: no File
inv2 C: no File	some File'
inv3 C: always some File
inv4 S: some File eventually in Trash
inv4 T: eventually some File in Trash
inv4 B: eventually File in Trash
inv4 T: eventually File not Protected in Trash
inv4 T: eventually File not Protected implies File in Trash
inv4 T: eventually File and File not in Protected implies File in Trash
inv4 B: eventually some File and File not in Protected implies File in Trash
inv4 B: some f: File | f not in Protected implies f in Trash
inv4 B: some f: File | always f not in Protected implies f in Trash
inv4 S: some f: File | (always f not in ProtectedI ) implies f eventually in Trash
inv4 S: some f: File | (always f not in ProtectedI ) implies eventually f in Trash
inv4 B: some f: File | (always f not in Protected) implies eventually f in Trash
inv4 O: some f: File | eventually f in Trash
inv4 B: some f: File | (f not in Protected) implies eventually f in Trash
inv4 B: some f: File | (always f not in Protected) implies eventually f in Trash
inv6 S: once in Trash implies always in Trash
inv6 B: once File in Trash implies always File in Trash
inv6 B: eventually File in Trash implies always File in Trash
inv6 B: File in Trash implies always File in Trash
inv6 B: File in Trash implies (always File in Trash)
inv6 B: once File in Trash implies (always File in Trash)
inv6 S: once File in Trash implies (since File in Trash)
inv6 S: since File in Trash implies File in Trash
inv6 B: File in Trash since File in Trash
inv6 B: once File in Trash since File in Trash
inv6 B: always File in Trash since File in Trash
inv6 B: once File in Trash since File in Trash
inv6 S: all File in Trash since File in Trash
inv6 T: some File in Trash since File in Trash
inv6 B: always File in Trash since File in Trash
inv6 B: File in Trash since File in Trash
inv6 B: always File in Trash since File in Trash
inv5 B: always File in Trash
inv5 B: eventually File in Trash
inv5 S: some f: File | f eventually in Trash
inv5 S: some f: File | f eventually not in File
inv5 T: some f: File | f eventually no File
inv5 O: some f: File | eventually f not in File
inv4 B: some f: File | (always f not in Protected) implies eventually f in Trash
inv4 B: some f: File | (f not in Protected) implies eventually f in Trash
inv4 O: some f: File | eventually f in Trash
inv4 S: some f: File | f not in PRotected implies eventually f in Trash
inv4 B: some f: File | f not in Protected implies eventually f in Trash
inv5 O: some f: File | eventually f not in File
inv5 O: some f: File | eventually f not in File
inv4 B: some f: File | f not in Protected implies eventually f in Trash and no f.link
inv4 O: some f: File | f not in Protected and eventually f in Trash
inv4 O: some f: File | eventually f in Trash
inv4 S: some f: File | f not in Protected eventually f in Trash
inv4 O: some f: File | f not in Protected and eventually f in Trash
inv4 S: some f: File | f not in Protected eventually f in Trash
inv4 O: some f: File | eventually always f in Trash
inv4 B: some f: File | f not in Protected implies eventually always f in Trash
inv4 O: some f: File | eventually always f in Trash
inv4 O: some f: File | always eventually f in Trash
inv4 O: some f: File | eventually always  f in Trash
inv4 O: some f: File | eventually always f in Trash
inv4 B: some f: File | f not in Protected implies eventually always f in Trash
inv4 B: some f: File | after f not in Protected implies eventually always f in Trash
inv4 B: some f: File | once f not in Protected implies eventually always f in Trash
inv5 O: some f: File | eventually always f in Trash and eventually f not in File
inv5 O: some f: File | eventually f in Trash and eventually always f not in File
inv4 O: some f: File | f not in Protected and eventually always f in Trash
inv4 O: some f: File | once f not in Protected and eventually always f in Trash
inv4 S: some f: File | since f not in Protected and eventually always f in Trash
inv4 B: some f: File | eventually always f in Trash since f not in Protected
inv4 B: some f: File | eventually f in Trash since f not in Protected
inv4 B: some f: File | always eventually f in Trash since f not in Protected
inv4 B: some f: File | eventually (always f in Trash) since f not in Protected
inv4 O: some f: File | eventually (always f in Trash)
inv4 O: some f: File | eventually (always f in Trash) and eventually (always f.link in Trash)
inv4 B: some f: File | f not in Protected implies eventually (always f in Trash) and eventually (always f.link in Trash)
inv4 B: some f: File | always f not in Protected implies eventually (always f in Trash) and eventually (always f.link in Trash)
inv4 B: some f: File | (always f not in Protected) implies eventually (always f in Trash) and eventually (always f.link in Trash)
inv4 B: some f: File | (once f not in Protected) implies eventually (always f in Trash) and eventually (always f.link in Trash)
inv6 S: some f: File |  always f in Trash once f in Trash
inv6 B: some f: File | once f in Trash implies always f in Trash
inv7 O: some f: File | eventually f in Protected
inv7 O: some f: File | eventually f' in Protected
inv7 O: some f: File | f in File and eventually f' in Protected
inv7 O: some f: File | f in File implies eventually f' in Protected
inv6 B: some f: File | always( f in Trash implies always f in Trash)
inv6 U: all f: File | always( f in Trash implies always f in Trash)
inv6 B: all f: File | always( f in Trash implies always f in Trash and no f.link)
inv6 U: all f: File | always( f in Trash implies always f in Trash)
inv7 O: some f: File | always (eventually f' in Protected)
inv7 O: some f: File | always (eventually f in Protected)
inv7 O: some f: File | (eventually f in Protected)
inv4 B: some f: File | always( f in Trash implies always f in Trash)
inv4 B: some f: File | always( eventually f in Trash implies always f in Trash)
inv4 O: some f: File | eventually always f in Trash
inv4 O: some f: File | eventually f in Trash
inv4 B: some f: File | eventually f in Trash implies f not in Protected
inv4 S: some f: File | always none none implies eventually f in Trash implies
inv4 S: some f: File | always no none implies eventually f in Trash implies
inv4 O: some f: File | eventually f in Trash
inv5 O: some f: File | eventually f in Trash and eventually always f not in File
inv4 O: some f: File | eventually f in Trash
inv5 B: some f: File | eventually always f not in File since f in Trash
inv5 O: some f: File | eventually always f not in File
inv10 T: once Protected always Protected
inv10 T: always Protected since Protected
inv10 T: always Protected once Protected
inv10 T: after Protected always Protected
inv10 T: Protected since Protected
inv10 T: always Protected since Protected
inv10 T: always (Protected since Protected)
inv10 T: all f: File | f always Protected since f in Protected
inv10 S: all f: File | f always in Protected since f in Protected
inv10 B: all f: File | always f in Protected since f in Protected
inv10 S: all f: File | once f in Protected always f in Protected
inv10 B: all f: File | f in Protected since f in Protected
inv11 B: all f: File | f not in Protected implies f' in Protected
inv11 B: all f: File | always (f not in Protected implies f' in Protected)
inv12 B: all f: File | eventually always f in Trash
inv12 B: all f: File | eventually (always f in Trash)
inv12 B: all f: File |always eventually f in Trash
inv12 B: all f: File |always f in Trash
inv13 C: all f: File | eventually f in Trash implies once f not in Trash
inv14 B: all f: Protected | eventually f in Trash implies f' not in Protected
inv14 B: all f: Protected | eventually f in Trash implies after f not in Protected
inv14 S: all f: File | eventually f in Protected and in Trash implies after f not in Protected
inv14 S: all f: File | eventually f in Protected & in Trash implies after f not in Protected
inv14 T: all f: File | eventually f in Protected & f in Trash implies after f not in Protected
inv14 T: all f: File | eventually f in Protected & f in Trash implies after f in Trash and f not in Protected
inv14 S: all f: File | onve (f in Protected & f in Trash implies always (after f in Trash and f not in Protected))
inv14 T: all f: File | once (f in Protected & f in Trash implies always (after f in Trash and f not in Protected))
inv14 B: all f: File | once (f in Protected and f in Trash implies always (after f in Trash and f not in Protected))
inv14 S: all f: File | (once f in Protected and f in Trash) implies always (after f in Trash and f not in Protected))
inv14 S: all f: File | eventually (once f in Protected and f in Trash) implies always (after f in Trash and f not in Protected))
inv14 S: all f: File | eventually (once f in Protected and f in Trash) implies always (after f in Trash and f not in Protected))
inv15 B: eventually File in Trash
inv15 B: always eventually File in Trash
inv16 T: once Protected always Protected
inv16 T: always Protected since Protected
inv16 B: all f: File | always f in Protected since f in Protected
inv16 S: all f: File | once f in Protected always f in Protected
inv16 B: all f: File | once f in Protected implies always f in Protected
inv14 E: 

