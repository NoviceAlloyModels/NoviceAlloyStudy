NA H: THEME UPDATE
prop1 C: no Trash && no Protected
prop2 T: no File && next some File
prop2 U: no File
prop2 S: no File	File'= some File
prop2 S: no File	File' = some File
prop2 S: no File;	File' = some File
prop2 T: no File and next some File
prop2 T: no File && next some File
prop2 T: no File implies next some File
prop2 S: no File	File'=some File
prop2 T: no File && next some File
prop1 E: 
prop1 E: 
prop1 E: 
prop1 E: 
prop1 E: 
prop1 E: 
prop1 E: 
prop2 E: 
prop2 B: some File
prop2 T: next some File
prop2 T: next (some File)
prop2 S: File	File'= some File
prop2 U: no File
prop2 T: no File	next some File
prop2 T: no File next some File
prop2 T: no File next File
prop2 U: no File
prop2 C: no File	some File'
prop2 C: no File		after some File
prop3 C: always some File
prop4 B: some File
prop4 T: some File	eventually some File in Trash
prop4 O: some File	eventually some Trash
prop4 O: some File && no Trash	eventually some Trash
prop4 O: some File	eventually some Trash
prop4 S: some f:File	eventually f in Trash
prop4 O: some f:File | eventually f in Trash
prop4 O: some File	some f:File | eventually f in Trash
prop4 O: always some f:File | eventually f in Trash
prop5 S: eventually f:File | f not in File'
prop5 C: eventually some f:File | f not in File'
prop4 O: some f:File | eventually f in Trash
prop4 O: some File	some f:File | eventually f in Trash
prop4 O: some f:File | eventually f in Trash
prop4 O: some f:File | eventually f in Trash'
prop4 O: some f:File | eventually f in Trash
prop4 O: some f:File | eventually f in Trash'
prop4 O: some f:File | eventually f in Trash
prop4 B: some File
prop4 O: some File	some f:File | eventually f in Trash
prop4 O: some File	some f:File | eventually f in Trash'
prop4 O: some File	some f:File | eventually f in Trash
prop4 O: some f:File | eventually f in Trash
prop4 B: some File
prop4 O: some f:File | eventually f in Trash
prop6 C: always all f:Trash | always f in Trash
prop4 O: always some f:File | eventually f in Trash
prop4 O: some f:File | eventually f in Trash
prop4 T: some f:File not in Trash | eventually f in Trash
prop4 O: some f:Protected | eventually f in Trash
prop4 O: some f:File | f not in Trash implies eventually f in Trash
prop4 O: some f:File | eventually f in Trash
prop4 O: some f:File | f not in Trash implies eventually f in Trash
prop4 C: eventually some f:File | f in Trash
prop7 C: eventually some f:File | f in Protected
prop8 S: always l in link | eventually l in Trash
prop8 S: l in link
prop8 S: all f,f1 in File | f.f1 in link
prop8 S: all f,f1 in File | f->f1 in link
prop8 S: all f,f1: in File | f->f1 in link
prop8 S: all f,f1: in File | no Trash
prop8 E: 
prop8 B: some f:File | some f.link
prop8 B: always all f:File | some f.link implies eventually f.link in Trash
prop8 S: always all f:File | all f.link implies eventually f.link in Trash
prop8 S: always all f:File | some f.link implies eventually all f.link in Trash
prop8 B: always all f:File | some f.link implies eventually  f.link in Trash
prop8 T: always all f,g:File | f->g in link implies eventually  f->g in Trash
prop8 B: always all f:File | isLink[f] implies eventually f.link in Trash	}		pred isLink[f:File]{	some g:File | g->f in link
prop8 B: all f:File | isLink[f] implies eventually f.link in Trash	}		pred isLink[f:File]{	some g:File | g->f in link
prop8 S: all f:File | some g:File | f->g in Link implies eventually f->g in Trash
prop8 B: always all f,g:File | some f.link implies eventually  f.link in Trash
prop8 B: always all f:File | some f.link implies eventually  f.link in Trash
prop8 C: always all f:File | some f.link implies eventually  f in Trash
prop9 T: always no Protected && Trash
prop9 T: always no Protected and Trash
prop9 T: Trash & Trash
prop9 T: Trash && Trash
prop9 T: Trash and Trash
prop10 U: Protected' in Protected
prop10 U: always Protected' in Protected
prop9 B: all f:Protected | always f not in Trash
prop9 B: all f:Protected | always f not in Trash
prop9 S: all f:Trash | once not in Protected
NA H: THEME UPDATE

