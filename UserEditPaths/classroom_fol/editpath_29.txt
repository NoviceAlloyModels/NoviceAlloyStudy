NA H: THEME UPDATE
inv1 C: all p : Person | p in Student
inv2 C: all p : Person | p not in Teacher
inv3 C: all p : Person { 	    (p in Student implies p not in Teacher)	    or	    (p in Teacher implies p not in Student)	  }
inv4 C: all p : Person | p in Teacher or p in Student
inv5 C: some t : Teacher, c : Class | t->c in Teaches
inv6 C: all t : Teacher | some c : Class | t->c in Teaches
inv7 C: all c : Class | some t : Teacher | t->c in Teaches
inv8 C: all t : Teacher, c1, c2 : Class | t->c1 in Teaches and t->c2 in Teaches implies c1=c2
inv9 C: all t1, t2 : Teacher, c : Class | t1->c in Teaches and t2->c in Teaches implies t1=t2
inv10 C: all c : Class, s : Student | some g : Group | c->s->g in Groups
inv11 E: 
inv10 C: all c : Class, s : Student | some g : Group | c->s->g in Groups
inv11 E: 
inv12 E: 
inv13 C: all p1, p2 : Person{	    p1->p2 in Tutors implies (p1 in Teacher and p2 in Student)	  }
inv14 E: 
inv15 E: 
inv10 S: all c : Class, s : Student, some g : Group | c->s->g in Groups
inv10 C: all c : Class, s : Student | some g : Group | c->s->g in Groups
inv10 O: some g : Group | all c : Class, s : Student | c->s->g in Groups
inv10 C: all c : Class, s : Student | some g : Group | c->s->g in Groups
inv11 B: all c : Class, g : Group | some t : Teacher | c->t->g in Groups
inv11 B: all c : Class, g : Group | some p : Person | c->p->g in Groups implies p in Teacher
inv11 B: all c : Class, g : Group | some t : Teacher | c->t->g in Groups implies t->c in Teaches
inv11 T: all c : Class, g : Person -> Group | some t : Teacher | c->g in Groups implies t->c in Teaches
inv11 T: all c : Class, g : Group | some t : Person | c->g in Groups implies t->c in Teaches
inv11 B: all c : Class, g : Group | some p : Person | c->p->g in Groups implies p->c in Teaches
inv11 B: all c : Class, g : Group | some p : Person | c->p->g in Groups implies (p->c in Teaches and p in Teacher)
inv14 T: all s : Student, c : Class | some t : Teacher | c->s in Groups implies t->s in Tutors
inv14 T: all s : Student, c : Class | some t : Teacher | c->s in Groups implies t->s in Tutors
inv14 S: all s : Student, c : Class | some t : Teacher | c->s->g in Groups implies t->s in Tutors
inv14 B: all s : Student, c : Class, g : Group | some t : Teacher | c->s->g in Groups implies t->s in Tutors
inv14 U: all s : Student, c : Class, g : Group, t : Teacher | (t->c in Teaches and c->s->g in Groups) implies t->s in Tutors
inv14 B: all s : Student, c : Class, g : Group | some t : Teacher | (c->s->g in Groups and t->c in Teaches) implies t->s in Tutors
inv14 U: all s : Student, c : Class, g : Group | all t : Teacher | (c->s->g in Groups and t->c in Teaches) implies t->s in Tutors
inv11 B: all c : Class, g : Group | some t : Teacher | c->t->g in Groups implies t->c in Teaches
inv12 T: all t : Teacher | some c : Class, g : Groups | c->t->g in Groups
inv12 T: all t : Teacher | some c : Class, g : Groups | c->t->g in Groups
inv12 T: all t : Teacher | some c : Class | some g : Groups | c->t->g in Groups
inv12 T: all t : Teacher | some c : Class | some g : Groups | c->t->g in Groups
inv12 T: some c : Class | some g : Groups | all t : Teacher | c->t->g in Groups
inv12 T: some c : Class | all t : Teacher | some g : Groups | c->t->g in Groups
inv12 T: all c : Class | all t : Teacher | all g : Groups | c->t->g in Groups
inv14 U: all s : Student, c : Class, g : Group, t : Teacher | (c->s->g in Groups and t->c in Teaches) implies t->s in Tutors
inv14 B: all  c : Class, s : Student, g : Group | some t : Teacher | (c->s->g in Groups and t->c in Teaches) implies t->s in Tutors
inv14 S: all c : Class, p1, p2 : Person {	    (p1 in Teacher and p1->c Teaches)	    implies	    (p1->p2 in Tutors)	  }
inv14 S: all c : Class, p1, p2 : Person {	    (p1 in Teacher and p1->c Teaches)	    implies	    (p1->p2 in Tutors)	  }
inv14 S: all c : Class, p1, p2 : Person | (p1 in Teacher and p1->c Teaches) implies (p1->p2 in Tutors)
inv14 B: all c : Class, p1, p2 : Person | (p1 in Teacher and p1->c in Teaches) implies (p1->p2 in Tutors)
inv13 C: all p1, p2 : Person{	    p1->p2 in Tutors implies (p1 in Teacher and p2 in Student)	  }
inv14 B: all c : Class, p1, p2 : Person | (p1 in Teacher and p1->c in Teaches) implies (p1->p2 in Tutors)
inv14 B: all c : Class, p1, p2 : Person | (p1->p2 in Tutors) implies (p1 in Teacher and p1->c in Teaches)
inv14 B: all c : Class, p1, p2 : Person | (p1->p2 in Tutors) implies (p1 in Teacher and p2 in Student and p1->c in Teaches)
inv14 B: all c : Class, p1, p2 : Person | (p1->p2 in Tutors) implies (p1 in Teacher and p2 in Student and p2 not in Teacher and p1 not in Student and p1->c in Teaches)
inv14 T: all c : Class, g : Group, p1, p2 : Person | (p1->c in Teaches and c->p2->g) implies (p1->p2 in Tutors)
inv14 C: all c : Class, g : Group, p1, p2 : Person | (p1->c in Teaches and c->p2->g in Groups) implies (p1->p2 in Tutors)
inv11 B: all c : Class, g : Group | some t : Teacher | c->t->g in Groups implies t->c in Teaches
inv11 B: all c : Class, g : Group | some p1, p2 : Person | c->p1->g in Groups implies p2->c in Teaches
inv11 B: all c : Class, g : Group | some s : Student, t : Teacher | c->s->g in Groups implies t->c in Teaches
inv11 T: all c : Class, g : Group, p : Person | some t : Teacher | c->p->g in Groups implies t->c
inv11 O: all c : Class, g : Group, p : Person | some t : Teacher | c->p->g in Groups implies t->c in Teaches
inv12 B: all t : Teacher | some c : Class, g : Group | c->t->g in Groups
inv12 B: all p : Person | some c : Class, g : Group | c->p->g in Groups and p in Teacher
inv11 O: all c : Class, g : Group, p : Person | some t : Teacher | c->p->g in Groups implies t->c in Teaches
inv14 C: all c : Class, g : Group, p1, p2 : Person | (p1->c in Teaches and c->p2->g in Groups) implies (p1->p2 in Tutors)
inv13 C: all p1, p2 : Person{	    p1->p2 in Tutors implies (p1 in Teacher and p2 in Student)	  }
inv11 O: all c : Class, g : Group, p : Person | some t : Teacher | c->p->g in Groups implies t->c in Teaches
inv12 B: all p : Person | some c : Class, g : Group | c->p->g in Groups and p in Teacher
inv12 B: all p : Person | some c : Class, g : Group | c->p->g in Groups and p in Teacher
inv11 B: all c : Class, g : Group| some p1, p2 : Person | c->p1->g in Groups implies p2->c in Teaches
inv11 B: all c : Class, g : Group| some p1, p2 : Person | c->p1->g in Groups implies (p2->c in Teaches and p2 in Teacher)

