NA H: THEME UPDATE
inv1 S: inv1: all i: Photo | i in posts.posts		}		pred inv1{		inv1: all i: Photo | i in posts.posts
inv1 T: all i: Photo | i in posts.posts
inv1 T: all i: Photo | i in posts.posts
inv1 T: all i: Photo | i in (some u: User | i in u.posts)
inv1 U: all i: Photo | some u: User | i in u.posts
inv2 C: all u: User | u !in u.follows
inv3 T: all u: User, p: Photo | (p in u.sees) => (p in (follows.posts + Ad))
inv3 T: all u: User, p: Photo | (p in u.sees) => (p in (follows.posts + Ad))
inv3 T: all u: User, p: Photo | p in u.sees => p in (follows.posts + Ad)
inv3 T: all u: User, p: Photo | (p in u.sees) => (p in (follows.posts + Ad))
inv3 T: all u: User, p: Photo | (p in u.sees) => (p in (follows.posts ++ Ad))
inv3 T: all u: User, p: Photo | (p in u.sees) => (p in (follows.posts ++ Ad))
inv3 T: all u: User, p: Photo | (p in u.sees) => (p in (follows.posts ++ Ad))
inv3 S: User, p: Photo | (p in u.sees) => (p in follows.posts || p in Ad)
inv3 S: User, p: Photo | (p in u.sees) -> (p in follows.posts || p in Ad)
inv3 S: all User, p: Photo | (p in u.sees) -> (p in follows.posts || p in Ad)
inv3 S: User, p: Photo | (p in u.sees) -> (p in follows.posts || p in Ad)
inv3 T: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.posts ++ Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts ++ Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts + Ad))
inv1 U: all i: Photo | some u: User | i in u.posts
inv2 C: all u: User | u !in u.follows
inv1 U: all i: Photo | some u: User | i in u.posts
inv3 E: 
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) implies (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) => (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) => (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) => (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, all p: Photo | (p in u.sees) -> (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts + Ad))
inv3 S: all (u: User, p: Photo) | (p in u.sees) -> (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts + Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts union Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts union Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts union Ad))
inv3 S: all u: User, p: Photo | (p in u.sees) -> (p in (u.follows.<.posts union Ad))
inv1 U: all i: Photo | some u: User | i in u.posts
inv1 U: all i: Photo | some u: User | i in u.posts
inv1 C: all i: Photo | one u: User | i in u.posts
inv2 C: all u: User | u !in u.follows
inv2 C: all u: User | u !in u.follows
NA H: THEME UPDATE
NA H: THEME UPDATE
inv1 C: all i: Photo | one u: User | i in u.posts
inv2 C: all u: User | u !in u.follows
inv1 C: all p : Photo | one u : User | p in u.posts
inv2 C: all u : User | u not in u.follows
inv3 C: all u : User, p : Photo | p in u.sees => p in u.follows.posts or p in Ad
inv4 C: all u : User, a : Ad | a in u.posts => u.posts in Ad
inv5 U: all i : Influencer, u : User | u!=i => i in u.follows
inv6 C: all i : Influencer, d : Day | d in i.posts.date
inv7 U: all disj u,uu:User | u in uu.follows.follows && u not in uu.follows implies u in uu.suggested
inv8 C: all a : Ad, u : User | a in u.sees => a in u.follows.posts or a in u.suggested.posts
inv7 C: all u : User | u.suggested = (u.follows.follows - (u.follows + u))
inv7 C: all u1, u3 : User | ( some u2 : User | u1->u2 in follows and u2->u3 in follows and u1->u3 not in follows and u1 != u3 ) iff u1->u3 in suggested
inv7 C: all u : User | u.suggested = (u.follows.follows - (u.follows + u))
inv8 C: all a : Ad, u : User | a in u.sees => a in u.follows.posts or a in u.suggested.posts

