NA H: THEME UPDATE
inv1 B: all u : User | one p : Photo | p in posts[u]
inv1 B: all u : User | all p : Photo | p in posts[u]
inv2 T: all u : User | no u in follows[u]
inv2 T: all u : User | no u in follows[u]
NA M: MOD BASE MODEL
inv2 T: all u : User | no u in follows[u]
inv2 T: all u : User | no u in follows[u]
inv2 T: all u : User | no u in follows[u]
inv1 B: all u : User | one p : Photo | p in posts[u]
inv1 B: all u : User | all d : Day | one p : Photo | p in posts[u] and p.date = d
inv1 S: all u : User | all d : Day | one p : Photo | p in posts[u] and p.date = one d
inv1 U: all u : User | all p : Photo | p in posts[u] => one d : Day | p.date = d
inv1 B: some u : User | all p : Photo | one d : Day | p in u.posts and d in p.date
inv1 S: some u : User | all p : Photo | one d : Day | p in u.posts and d in one p.date
inv1 S: some u : User | all p : Photo | one d : Day | p in u.posts and d in single p.date
inv1 C: all p : Photo | one u : User | p in u.posts
inv2 S: u in User implies u not in u.followers
inv2 S: u in User | implies u not in u.followers
inv2 S: all u in User | u not in u.followers
inv2 S: all u : User | u not in u.followers
inv1 C: all p : Photo | one u : User | p in u.posts
inv2 C: all u : User | u not in u.follows
inv2 C: all u : User | u not in u.follows
inv1 C: all p : Photo | one u : User | p in posts[u]
inv2 C: all u : User | u not in u.follows
inv2 C: all u : User | u not in follows[u]
inv2 T: all u : User | no u in u.follows
inv2 C: all u : User | u not in u.follows
inv3 E: 
inv3 S: all u : User, p : Photo | p in sees[u] <=> (p in posts[v] and v in follows[u]) or p in Ad
inv3 O: all u : User, p : Photo | p in sees[u] <=> (p in posts[u] and u in follows[u]) or p in Ad
inv3 T: all u : User | all p : Photo | (p in Ad implies (all user : User | sees[user])) or (p not in Ad implies (all user : User | sees[user] and follows[user]))
inv3 T: all u : User | all p : Photo | (p in Ad implies (all user : User | sees[user])) or (p not in Ad implies (all user : User | sees[user] and follows[user]))
inv3 T: all u : User | all p : Photo | ((p in Ad implies (all user : User | sees[user])) or (p not in Ad implies (all user : User | sees[user] and follows[user])))
inv3 T: all u : User | all p : Photo | p in sees[u] implies follows[posts[p]] or p in Ad
inv3 T: all u : User | all p : Photo | p in sees[u] => follows[posts[p]] or p in Ad
inv3 T: all u : User | all p : Photo | p in sees[u] => posts[follows[p]] or p in Ad
inv3 T: all u : User, p : Photo | p in sees[u] => posts[follows[p]] or p in Ad
inv3 T: all u : User, p : Photo | p in sees[u] => p.follows.posts or p in Ad
inv3 T: all u : User, p : Photo | p in u.sees => p.follows.posts or p in Ad
inv3 T: all u : User, p : Photo | p in u.sees => p.follows.posts or p in Ad
inv3 T: all u : User, p : Photo | p in u.sees => u.follows.posts or p in Ad
inv3 C: all u : User, p : Photo | p in u.sees => p in u.follows.posts or p in Ad
inv3 C: all u : User | all p : Photo | p in sees[u] => p in posts[follows[u]] or p in Ad
inv4 C: all u : User, a : Ad | a in u.posts implies u.posts in Ad
inv5 U: all i : Influencer, u : User - i | i in u.follows
inv4 C: all u : User, a : Ad | a in u.posts implies u.posts in Ad
inv5 U: all i : Influencer, u : User - i | i in u.follows
inv6 C: all i : Influencer, d : Day | d in i.posts.date
inv8 O: all a : Ad, u : User | a in u.sees implies a in u.follows.posts + u.follows.suggested
inv8 C: all a : Ad, u : User | a in u.sees implies a in u.follows.posts + u.suggested.posts
inv7 C: all u : User | u.suggested = (u.follows.follows - u.follows) - u
inv1 C: all p : Photo | one u : User | p in posts[u]
inv2 C: all u : User | u not in u.follows
inv3 C: all u : User | all p : Photo | p in sees[u] => p in posts[follows[u]] or p in Ad
inv4 C: all u : User, a : Ad | a in u.posts implies u.posts in Ad
inv5 U: all i : Influencer, u : User - i | i in u.follows
inv6 C: all i : Influencer, d : Day | d in i.posts.date
inv7 C: all u : User | u.suggested = (u.follows.follows - u.follows) - u
inv8 C: all a : Ad, u : User | a in u.sees implies a in u.follows.posts + u.suggested.posts

