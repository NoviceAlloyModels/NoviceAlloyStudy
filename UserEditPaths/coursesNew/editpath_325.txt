NA H: THEME UPDATE
inv1 C: all p: Person, c: Course | p in enrolled.c implies p in Student
inv3 C: all c: Course | some teaches.c
inv4 C: all p: Project | one (Course<:projects).p
inv5 C: all p: Project | some (Person<:projects).p		all p: Project, s: Person | s in projects.p implies s in Student
inv6 B: all s: Student, p: Project, c: Course | s in (Person<:projects).p and c in (Course<:projects).p  implies s in enrolled.c
inv7 B: all s: Student | lone (s.enrolled).projects
inv8 U: all p: Professor, c:Course | p in teaches.c implies p not in enrolled.c
inv9 B: all x,y:Professor, c:Course | x!=y implies c in x.teaches implies c not in y.enrolled
inv10 C: all c:Course, g:Grade | (c.grades).g in Student
inv11 U: all c: Course, s: Student, g: Grade | s in (c.grades).g implies s in enrolled.c
inv12 U: all s:Student, c:Course| lone s.(c.grades)
inv7 S: all s: Student some c: Course| lone (s in enrolled.c
inv7 S: all s: Student some c: Course| lone (s in enrolled.c
inv7 S: all s: Student some c: Course| lone (s in enrolled.c
inv7 S: all s:Student, some c:Course| lone (s.projects & c.projects)
inv7 B: all s:Student| some c:Course| lone (s.projects & c.projects)
inv7 U: all s:Student| all c:Course| lone (s.projects & c.projects)
inv7 U: all s:Student, c:Course| lone (s.projects & c.projects)
inv12 B: all s:Student, c:Course| one s.(c.grades)
inv12 U: all s:Student, c:Course| lone s.(c.grades)
inv13 T: all s:Student, c:Course | s in c.grades.max implies s in c.projects
inv13 T: all s:Student, c:Course | s in c.grades.max implies s in c.projects
inv13 S: all s:Student, c:Course, g: Grades | s in (c.grades).g.max implies s in c.projects
inv13 T: all s:Student, c:Course, g: Grade | s in (c.grades).g.max implies s in c.projects
inv13 T: all s:Student, c:Course, g: Grade | s in ((c.grades).g).max implies s in c.projects
inv9 B: all p: Professor, c:Course | p in teaches.c implies p not in teaches.c
inv9 B: all p, p1: Professor, c:Course | p in teaches.c implies p1 not in teaches.c
inv9 B: all p, p1: Professor, c:Course | p in teaches.c implies p1 not in enrolled.c
inv9 B: all p, p1: Professor, c:Course |p != p1 and p in teaches.c implies p1 not in enrolled.c
inv9 B: all p, p1: Professor, c:Course | p != p1 and p in teaches.c implies p1 not in enrolled.c

