NA H: THEME UPDATE
inv1 C: all p : Person | p not in Student implies p.enrolled=none
inv2 C: all p : Person | p not in Professor implies p.teaches=none
inv3 C: all c : Course | some (c.(~teaches))
inv4 E: 
inv3 C: all c : Course | some (c.(~teaches))
inv4 T: all p : Project | one (p.(~projects))
inv4 T: all p : Project | one (p.(~projects))
inv4 T: all p : Project | one (p.(~projects <: Course))
inv4 T: all p : Project | one (p.(~(projects <: Course)))
inv4 T: all p : Project | one (p.(~projects))
inv4 C: all p : Project | one (p.(~(Course <: projects)))
inv5 S: all p : Project | s : Person | s in p.(~(Person <: projects)) and s in Student
inv5 S: all p : Project | s : Person | s in p.(~(Person <: projects)) and (s in Student)
inv5 S: all p : Project | s : Person | s in (p.(~(Person <: projects))) and (s in Student)
inv5 S: all p : Project | s : Person | some (p.(~(Person <: projects))) and (p in s implies s in Student)
inv5 U: all p : Project | all s : Person | some (p.(~(Person <: projects))) and (p in s implies s in Student)
inv5 U: all p : Project | some s : Person | some (p.(~(Person <: projects))) and (p in s implies s in Student)
inv5 U: all p : Project | some s : Person | s in p.(~(Person <: projects)) and (s in Student)
inv5 B: all p : Project | all s : Person | s in p.(~(Person <: projects)) and (s in Student)
inv5 B: all p : Project | all s : Person | s in p.(~(Person <: projects)) and (s in Student)
inv5 U: all p : Project | all s : Person | some (p.(~(Person <: projects))) and (p in s implies s in Student)
inv5 U: all p : Project | some s : Student | s in p.(~(Person <: projects))
inv5 B: all p : Project | some s : Student | no pr : Professor | s in p.(~(Person <: projects)) or pr in p.(~(Person <: projects))
inv5 U: all p : Project | some s : Person | s in p.(~(Person <: projects)) and (s in Student)
inv5 U: all p : Project | some s : Person | s in p.(~(projects)) and (s in Student)
inv5 C: Person.projects - (Person - Student).projects = Project
inv6 T: all s : Student | no c : Course | c in s.projects and c not in s.enrolled.projects
inv6 T: all s : Student | no c : Course | c in s.projects and c not in s.enrolled.projects
inv6 U: all s : Student | no c : Course | c in s.(Person <: projects) and c not in s.enrolled.(Course <: projects)
inv7 B: all s : Student | lone (s.enrolled.projects)
inv6 U: all s : Person | no c : Course | c in s.(Person <: projects) and c not in s.enrolled.(Course <: projects)
inv7 B: all s : Person | lone (s.enrolled.projects)
inv6 S: Student <: projects).(~projects :> Course) in enrolled
inv6 B: (Student <: projects).(~projects :> Course) in enrolled
inv7 B: all s : Person | lone (s.enrolled.projects)
inv7 B: all s : Person | lone (s.enrolled.(Course <: projects))
inv7 B: all s : Person | all c : Course| lone (s.enrolled.projects & c.projects)
inv7 B: all s : Student | all c : Course| lone (s.enrolled.(Course <: projects))
inv7 U: all s : Student, c : Course | lone ((s.projects) & (c.projects))

