NA H: THEME UPDATE
inv1 C: no (Person - Student).enrolled
inv2 B: no (Person - Professor).enrolled
inv2 S: no (Person - Professor).teach
inv2 C: no (Person - Professor).teaches
inv3 O: Course in Professor.teaches
inv4 U: Project in Course.projects
inv4 C: all p : Project |	  		one c : Course |	  			p in c.projects
inv5 C: all p : Project |	  		some s : Student |	  			p in s.projects	  		  	no (Person - Student).projects
inv6 U: all s : Student |	  		all p : s.projects |	  			p in s.enrolled.projects
inv7 S: all s : Student |	  		all c1, c2 : s.courses |	  			all p : s.projects |	  				( in c1 and p in c2) mplies c1 = c2
inv7 S: all s : Student |	  		all c1, c2 : s.courses |	  			all p : s.projects |	  				(p in c1 and p in c2) mplies c1 = c2
inv7 S: all s : Student |	  		all c1, c2 : s.enrolled |	  			all p : s.projects |	  				(p in c1 and p in c2) mplies c1 = c2
inv7 U: all s : Student |	  		all c1, c2 : s.enrolled |	  			all p : s.projects |	  				(p in c1 and p in c2) implies c1 = c2
inv7 B: all s : Student |	  		all c : s.enrolled |	  			all p1, p2 : s.projects & c.projects |	  				p1 != p2
inv7 U: all s : Student |	  		all c : s.enrolled |	  			all p1, p2 : s.projects & c.projects |	  				p1 = p2
inv8 U: all p : Professor |	  		no p.teaches & p.enrolled
inv9 T: all p1 : Professor |	  		all p2 : Person |	  			(some p2.enrolled & p1.enrolled) implies (no p1.teaches in p2.enrolled)
inv9 B: all p1 : Professor |	  		all p2 : Person |	  			(some p2.enrolled & p1.enrolled) implies (no p1.teaches & p2.enrolled)
inv9 B: all p1 : Professor |	  		all p2 : Person |	  			(some p2.enrolled & p1.enrolled) implies (no p1.teaches & p2.enrolled)
inv9 B: all p1 : Professor |	  		all p2 : Professor |	  			(some p2.enrolled & p1.enrolled) implies (no p1.teaches & p2.enrolled)
inv9 B: all p1 : Professor |	  		all p2 : Student |	  			(some p2.enrolled & p1.enrolled) implies (no p1.teaches & p2.enrolled)
inv9 B: all p1 : Professor |	  		all p2 : Person |	  			(some p2.enrolled & p1.enrolled) implies (no p1.teaches & p2.enrolled)
inv9 B: all p1 : Professor |	  		all p2 : Person |	  			(some (p2.enrolled & p1.enrolled)) implies (no (p1.teaches & p2.enrolled))
inv9 B: all p1 : Professor |	  		all p2 : Person |	  			(some p2.enrolled & p1.enrolled) implies (no p1.teaches & p2.enrolled)
inv9 E: 
inv9 B: all p1 : Professor |	  		all p2 : Person |	  			(some p2.enrolled & p1.enrolled) implies (no p1.teaches & p2.enrolled)
inv9 B: all p1 : Professor |	  		all p2 : Person |	  			(no p2.enrolled & p1.enrolled)
inv9 B: all p1 : Professor |	  		all p2 : Person |	  			(some p2.enrolled & p1.enrolled) implies (no p1.teaches & p2.enrolled)
inv9 B: all p1 : Professor |	  		all p2 : Person |	  			(some p2.enrolled & p1.enrolled) <=> (no p1.teaches & p2.enrolled)
inv9 B: all p1 : Professor |	  		all p2 : Person |	  			(some p2.enrolled & p1.enrolled) implies (no p1.teaches & p2.enrolled)
inv9 B: all p1 : Professor |	  		all p2 : Professor |	  			(some p2.teaches & p1.teaches) implies (no p1.teaches & p2.enrolled)
inv10 C: no (Person - Student).(Course.grades)
inv11 U: all s : Student |	  		all c : Course |	  			some s.(c.grades) implies c in s.enrolled
inv12 B: all s : Student |	  		all c : Course |	  			one s.(c.grades)
inv12 U: all s : Student |	  		all c : Course |	  			lone s.(c.grades)
inv13 T: all disj s1, s2 : Student |	  		all c : s1.enrolled & s2.enrolled |	  			(s1.(c.grades) > s2.(c.grades)) implies some s1.projects & c.projects
inv13 S: all disj s1, s2 : Student |	  		all c : s1.enrolled & s2.enrolled |	  			(s1.(c.grades).larger( s2.(c.grades))) implies some s1.projects & c.projects
inv13 T: all disj s1, s2 : Student |	  		all c : s1.enrolled & s2.enrolled |	  			(s1.(c.grades).larger[s2.(c.grades)]) implies some s1.projects & c.projects
inv13 T: all s : Student |	  		all c : s.enrolled |	  			max[Student.(c.grades)] = (s -> s.(c.grades)) implies some s.projects & c.projects
inv13 B: all s : Student |	  		all c : s.enrolled |	  			max[Student.(c.grades)] = s.(c.grades) implies some s.projects & c.projects
inv13 U: all s : Student |	  		all c : s.enrolled |	  			max = s.(c.grades) implies some s.projects & c.projects
inv13 B: all s : Student |	  		all c : s.enrolled |	  			max[Student.(c.grades)] = s.(c.grades) implies some s.projects & c.projects
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(max[Student.(c.grades)] = s.(c.grades)) implies (some s.projects & c.projects)
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(max[Student.(c.grades)] in s.(c.grades)) implies (some s.projects & c.projects)
inv13 T: all s : Student |	  		all c : s.enrolled |	  			(max[Student.(c.grades)] & s.(c.grades)) implies (some s.projects & c.projects)
inv13 T: all s : Student |	  		all c : s.enrolled |	  			((max[Student.(c.grades)]) & s.(c.grades)) implies (some s.projects & c.projects)
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies (some s.projects & c.projects)
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies (some s.projects & c.projects or no c.projects)
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies (some s.projects & c.projects)
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies ((some s.projects & c.projects) or (no c.projects))
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies (some s.projects & c.projects)
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies (some s.projects & c.projects or no c.projects)
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies (some s.projects & c.projects)
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies (some s.projects & c.projects)			all c : Course |			some c.grades implies some c.projects
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies (some s.projects & c.projects)
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies (some c.projects and some s.projects & c.projects)
inv13 C: grades.(max[Grade]) in projects.~projects
inv13 T: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies (s.projects & Course.projects)
inv13 T: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies (s.projects & Course.projects)
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies (some s.projects & Course.projects)
inv13 B: all s : Student |	  		all c : s.enrolled |	  			(some max[Student.(c.grades)] & s.(c.grades)) implies (some s.projects & Course.projects)
inv13 B: all s : Student |	  		all c : s.enrolled |	  			((some max[Student.(c.grades)] & s.(c.grades)) implies (some s.projects & Course.projects))
inv13 B: all s : Student |	  		all c : s.enrolled |	  			((some max[Student.(c.grades)] & s.(c.grades)) implies (some s.projects & c.projects))
inv13 U: all s : Student |	  		all c : s.enrolled |	  			((some max[Grade] & s.(c.grades)) implies (some s.projects & c.projects))
inv14 U: all disj s1, s2 : Student |	  		lone (s1.projects & s2.projects)
inv15 T: all disj s1, s2 : Student |	  		all g1 : s1.(Course.grades) |	  			all g2 : s2.(Course.grades) |	  				some (s1.projects & s2.projects) implies (some prev[g1].g2 or some prev[g2].g1)
inv15 T: all disj s1, s2 : Student |	  		all g1 : s1.(Course.grades) |	  			all g2 : s2.(Course.grades) |	  				some (s1.projects & s2.projects) implies (some prev[g1].g2 or some prev[g2].g1)
inv15 T: all disj s1, s2 : Student |	  		all g1 : s1.(Course.grades) |	  			all g2 : s2.(Course.grades) |	  				some (s1.projects & s2.projects) implies (some (g1.prev).g2 or some (g2.prev).g1)
inv15 T: all disj s1, s2 : Student |	  		all g1 : s1.(Course.grades) |	  			all g2 : s2.(Course.grades) |	  				some (s1.projects & s2.projects) implies (some (g1.prev).g2 or some (g2.prev).g1)
inv15 B: all disj s1, s2 : Student |	  		all g1 : s1.(Course.grades) |	  			all g2 : s2.(Course.grades) |	  				some (s1.projects & s2.projects) implies (g2 in g1.prev or g1 in g2.prev)
inv15 B: all disj s1, s2 : Student |	  		all g1 : s1.(Course.grades) |	  			all g2 : s2.(Course.grades) |	  				some (s1.projects & s2.projects) implies (g2 in g1.prev or g1 in g2.prev or g1 = g2)
inv15 B: all disj s1, s2 : Student |	  		all g1 : s1.(Course.grades) |	  			all g2 : s2.(Course.grades) |	  				(some (s1.projects & s2.projects) and some g1 and some g2 )implies (g2 in g1.prev or g1 in g2.prev or g1 = g2)
inv15 B: all disj s1, s2 : Student |	  		all c : s1.enrolled & s2.enrolled |	          all g1 : s1.(c.grades), g2 : s2.(c.grades) |	                  (some (s1.projects & s2.projects & c.projects) and some g1 and some g2 )implies (g2 in g1.prev or g1 in g2.prev or g1 = g2)
NA H: THEME UPDATE

