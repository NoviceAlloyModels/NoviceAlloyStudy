NA H: THEME UPDATE
inv1 B: all x : Professor | no x.enrolled
inv1 B: all x : Person - Professor | no x.enrolled
inv1 C: all x : Person - Student | no x.enrolled
inv1 B: all x : Professor | no x.enrolled
inv1 B: all x : Person - Professor | no x.enrolled
inv1 C: all x : Person - Student | no x.enrolled
inv1 C: all x : Person - Student | no x.enrolled
inv2 C: all x : Person - Professor | no x.teaches
inv3 B: all x : Course | all y : Professor | x in y.teaches
inv3 U: all x : Course | all y : Professor | #(teaches.x) > 0
inv3 O: all x : Course | some y : Professor | y in teaches.x
inv4 T: one x : Course | all y : Project | x in x.y
inv4 C: all p : Project | (one c : Course | p in c.projects)
inv5 C: all x : Person - Student | no x.projects	  all p : Project | (some s : Student | p in s.projects)
inv6 S: all x : Student | x.project in x.enrolled.projects
inv6 U: all x : Student | x.projects in x.enrolled.projects
inv7 S: all x : Student | #(x.enrolled.projects) = 1 | #(x.enrolled.projects) = 0
inv6 U: all x : Student | x.projects in x.enrolled.projects
inv7 B: all x : Student | #(x.enrolled.projects) = 1
inv7 S: all x : Student | #(x.enrolled.projects) = 1 | #(x.enrolled.projects) = 0
inv7 T: all x : Student | 1 > #(x.enrolled.projects) > 0
inv7 B: all x : Student | (one c : Project | c in x.enrolled.projects )
inv7 B: all x : Student | (lone c : Project | c in x.enrolled.projects )
inv7 S: all x : Student | lone (c in x.enrolled.projects)
inv7 B: all x : Student |lone(x.enrolled.projects)
inv7 B: all x : Student | lone(x.enrolled.projects)
inv7 B: all x : Student | all y : x.enrolled | lone(y.projects & x.enrolled.projects)
inv7 B: all x : Student | (all y : x.enrolled | lone(y.projects & x.enrolled.projects))
inv7 B: all x : Student | lone(x.enrolled.projects & x.projects)
inv7 B: all x : Student | #(x.enrolled.projects) = 1
inv7 B: all x : Student | #(x.enrolled.projects) = 1 and #(x.projects) = 1
inv7 S: all x : Student | #(x.enrolled.projects) = 1 and #(x.projects) = 1 | #(x.enrolled.projects) = 0 and #(x.projects) = 0
inv7 S: all x : Student | #(x.enrolled.projects) = 1 and #(x.projects) = 1 | #(x.enrolled.projects) = 0 and #(x.projects) = 0
inv7 B: all x : Student | #(x.enrolled.projects) = 1 and #(x.projects) = 1
inv7 U: all x : Student | all y : x.enrolled | lone(x.projects & y.projects)
inv10 B: all x : Person - Student | no x.enrolled.grades
inv10 B: all x : Person - Student | all c : x.enrolled | no c.grades
inv11 B: all x : Person - Student | all c : x.enrolled | no c.grades
inv10 B: all x : Person - Student | all c : x.enrolled | no c.grades
inv10 B: all x : Person - Student | all c : x.enrolled | no x -> c.grades
inv10 T: all x :Student | all c : x.enrolled | x->c.grades in c.grades implies x in c.grades
inv10 T: all x :Person | all c : Course| all g: Grade | x ->g implies x in Student
inv10 T: all x :Person | all c : Course| all g: Grade | x->g implies x in Student
inv10 C: all x :Person | all c : Course| all g: Grade | x->g in c.grades implies x in Student
inv11 U: all x : Student | all c : Course | all g : Grade | x -> g in c.grades implies c in x.enrolled
inv12 T: all x : Student | all c : Course | all g : Grade | lone(x -> g in c.grades)
inv12 U: all x : Student | all c : Course | all g : Grade | lone(x -> g)
inv12 T: all x : Student | all c : Course | all g : Grade | #(x -> g in c.grades) = 1
inv12 U: all x : Student | all c : Course | lone g : Grade | x -> g in c.grades
inv14 S: all x : Student | all y:Student | x!=y| lone(x.projects &y.projects)
inv14 S: all x : Student | all y : Student | x!=y | lone(x.projects & y.projects)
inv14 U: all disj x,y : Student | lone(x.projects & y.projects)

