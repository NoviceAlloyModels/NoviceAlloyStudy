NA H: THEME UPDATE
inv1 U: all p: Person, s: Student, c: Course | p not in s => p not in c
inv1 B: all p: Person, s: Student, c: Course | p not in s => p not in c.~enrolled
inv1 B: all p: Person, s: Student | p not in s => p not in Course.~enrolled
inv1 U: all p: Person, s: Student | p not in Student => p not in Course.~enrolled
inv1 C: all p: Person | p not in Student => p not in Course.~enrolled
inv2 C: all p: Person | p not in Professor => p not in Course.~teaches
inv3 C: all c: Course | #c.~teaches>0
inv4 C: all p: Project | one c: Course | p in c.projects
inv5 S: all p: Person, pr: Project | (p in student => pr in p.projects)
inv5 B: all p: Person, pr: Project | (p in Student => pr in p.projects)
inv5 U: all p: Person, pr: Project | (p not in Student => pr not in p.projects)
inv5 T: all p: Person, pr: Project | (p not in Student => pr not in p.projects)  && (#pr.~projects>0)
inv5 T: all s: Student, pr: Project | (pr in s.projects)  && (#pr.~projects>0)
inv5 O: all p: Person | p not in Student => p.projects = none		   	   all p: Project | some m: Person | m.projects = p
inv5 U: all p: Person | (p not in Student => p.projects = none) && (all pr:Project | some s: Student | pr in s.projects )
inv6 B: all s: Student, c: Course | s.projects in c.projects => s in c.~enrolled
inv6 U: all s: Student, p: Project | p in s.projects => (some c: s.enrolled | p in c.projects)
inv6 U: all s: Student | all p: s.projects | some c: s.enrolled | p in c.projects
inv6 U: all s: Student | s.projects in s.enrolled.projects
NA H: THEME UPDATE
inv7 B: all s: Student | lone s.projects
inv7 B: all s: Student | #s.projects<2
inv7 B: all s: Student | #s.enrolled.projects<2
inv7 B: all s: Student | lone s.enrolled.projects
inv7 T: all s: Student | s.projects in (lone c: s.enrolled | c.projects)
inv7 B: all s: Student | lone c: s.enrolled | s.projects in c.projects
inv7 U: all s: Student, c: s.enrolled | lone p: s.projects | p in c.projects
inv7 U: all s: Student, c: s.enrolled | lone p: s.projects | p in c.projects
inv8 U: no p: Professor | p in p.teaches
inv8 U: all p: Professor | p not in p.teaches
inv8 B: all p: Professor | p in p.teaches
inv8 S: all p: Professor, c: Courses | p in c.~teahces => p not in c.~enrolled
inv8 S: all p: Professor, c: Course | p in c.~teahces => p not in c.~enrolled
inv8 U: all p: Professor, c: Course | p in c.~teaches => p not in c.~enrolled
inv8 C: all p: Person, c: Course | p in c.~teaches => p not in c.~enrolled
NA H: THEME UPDATE
inv1 C: all p: Person | p not in Student => p not in Course.~enrolled
inv8 U: all p: Professor, c: Course | p in c.~teaches => p not in c.~enrolled
inv9 S: all disj p1,p2: Professor, c,cc: Course | p1 in c.~teaches =>
inv9 S: all p1: Professor | all disj c: Course | p1 in c.~teaches => p1 not in cc.~enrolled
inv9 B: all p1: Professor | all disj c,cc: Course | p1 in c.~teaches => p1 not in cc.~enrolled
inv9 U: no p1, p2: Professor | p1 != p2 && p2 in p1.teaches
inv9 B: all p: Professor | all disj c,cc: Course | p in c.~teaches => p not in cc.~enrolled
inv9 B: all disj p,p1: Professor | all c: Course | p in c.~teaches => p1.enrolled not in p.teaches
inv9 B: all disj p,p1: Professor | all c: Course | p.teaches = p1.teaches => p.enrolled not in p1.teaches
inv9 B: all disj p,p1: Professor | p.teaches in p1.teaches => p.enrolled not in p1.teaches
inv9 T: all disj p,pp: Person | lone (p.teaches & pp.teaches) => p.enrolled <=> p.teaches
inv9 T: all disj p,pp: Person | lone (p.teaches & pp.teaches) => p.enrolled <=> pp.teaches
inv9 T: all disj p,pp: Person | lone (p.teaches & pp.teaches) => p.enrolled <=> pp.teaches
inv9 B: all disj p,pp: Person | lone (p.teaches & pp.teaches) => p.enrolled not in pp.teaches
inv9 B: all disj p,pp: Person | lone (p.teaches & pp.teaches) => (p.enrolled not in pp.teaches && pp.enrolled not in p.teaches)
inv9 B: no disj p1, p2: Professor | p1.teaches & p2.teaches != none and p1 != p2
inv9 B: no disj p1, p2: Professor | p1.teaches & p2.teaches != none => p1 not in p2.teaches.~enrolled
inv9 U: no p1, p2: Professor | p1 != p2 && p1 in p2.teaches
inv9 B: all disj p,pp: Person | some (p.teaches & pp.teaches) => (p.enrolled not in pp.teaches && pp.enrolled not in p.teaches)
inv9 T: all disj p,pp: Person | all c: Course | p in c.~teaches && pp in c.~teaches => p not in c.~enrolled & pp not in c.~enrolled
inv9 U: all disj p,pp: Person | all c: Course | p in c.~teaches && pp in c.~teaches => p not in c.~enrolled && pp not in c.~enrolled
inv9 U: all disj p,pp: Professor | all c: Course | p in c.~teaches && pp in c.~teaches => p not in c.~enrolled && pp not in c.~enrolled
inv9 B: all disj p1,p2: Professor | all c: Course | c in p1.teaches && c in p2.teaches => p1.enrolled not in p2.teaches
inv9 B: all p1, p2: Professor | p1 != p2 => p1.teaches & p2.teaches = none
inv9 B: all disj p1, p2: Professor | p1.teaches & p2.teaches = none
inv9 B: all disj p1, p2: Professor | some c: Course| p1 in c.~teaches && p2 in c.~teaches => p1.enrolled & p2.enrolled = none
inv9 S: all p1, p2: Professor | p1 != p2 => p1.teaches & p2.teaches = none
inv9 B: all p1, p2: Professor | p1 != p2 => p1.teaches & p2.teaches = none
inv9 B: all disj p1, p2: Professor | p1.teaches & p2.teaches = none
inv9 T: all disj p1, p2: Professor | (p2.teaches & p1.teaches)=> p1.enrolled & p2.enrolled = none
inv9 B: all disj p1, p2: Professor | some (p2.teaches & p1.teaches) => p1.enrolled & p2.enrolled = none
inv9 B: all disj p1, p2: Person | some (p2.teaches & p1.teaches) => p1.enrolled & p2.enrolled = none
inv9 B: all disj p1, p2: Person | some (p2.teaches & p1.teaches) => #(p1.enrolled & p2.enrolled)=0
inv9 O: all disj p1, p2: Person | some (p2.teaches & p1.teaches) => ((p1.enrolled & p2.enrolled)=0) && p1.enrolled != p2.teaches
inv9 O: all disj p1, p2: Person | some (p2.teaches & p1.teaches) => ((p1.enrolled & p2.teaches)=0)
inv9 O: all disj p1, p2: Person | some (p2.teaches & p1.teaches) => ((p1.enrolled & p2.enrolled)=0)
inv9 B: all disj p1, p2: Person | some (p2.teaches & p1.teaches) => (#(p1.enrolled & p2.enrolled)=0)
inv9 C: all disj p1, p2: Person | some (p2.teaches & p1.teaches) => (#(p1.enrolled & p2.teaches)=0)
NA H: THEME UPDATE
inv9 C: all disj p1, p2: Person | some (p2.teaches & p1.teaches) => (#(p1.enrolled & p2.teaches)=0)
inv10 T: all p: Person | p not in Student => p not in Course.grades
inv10 U: all p: Person | p not in Student => p not in Course.grades.Person
inv10 B: all p: Person | p in Student => p in Course.grades.Person

