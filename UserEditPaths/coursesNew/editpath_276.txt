NA H: THEME UPDATE
inv1 C: all x : Person | x not in Student implies #(x.enrolled)=0
inv2 C: all x : Person | x not in Professor implies #(x.teaches)=0
inv3 C: all x : Course | #(teaches.x)>0
inv4 B: all x,y : Course | x.projects != y.projects
inv4 T: all p : Project | #(p.Course)=1
inv4 T: all p : Project | #(projects.p)=1
inv4 T: all p : Project | #(projects.p)=1
inv4 T: all p : Project | #(projects.p)<=1
inv4 T: all p : Project | all x:Course | #(Course.projects.p)=1
inv4 T: all p : Project | all x : Course | #(x.projects.p)=1
inv4 T: all p : Project | #(Course.projects.p)=1
inv4 U: all p : Project | all x,y : Course | (p in x.projects and x!=y) implies p not in y.projects
inv4 S: all p : Project	  all x,y : Course | (#(x.projects)>0 and x!=y) implies #(y.projects)=0
inv4 B: all x,y : Course | (#(x.projects)>0 and x!=y) implies #(y.projects)=0
inv4 B: one c : Course | #(c.projects)>0
inv4 C: all x: Project |one c : Course | x in c.projects
inv5 C: all x:Person | x not in Student implies #(x.projects)=0	  	all x:Project | some y:Person | x in y.projects
inv6 B: all x:Student | all y:Project | all z:Course| (y in x.projects and y in z.projects)implies z in x.enrolled
inv7 U: all x:Student | all y,g:Course | all z,w:Project | (z in x.projects and w in x.projects and 	  z in y.projects and w in g.projects and z!=w) implies y!=g
inv8 U: all x:Professor | x not in x.teaches
inv8 B: all x:Professor | x.enrolled not in x.teaches
inv8 U: all x:Professor| all y:Course | y in x.enrolled implies y not in x.teaches
inv9 U: all x,y:Professor | y not in x.teaches
inv9 B: all x :Professor| all y:Person| all z:Course | (z in x.teaches and z in y.enrolled) implies y not in Professor
inv9 B: all x :Professor| all y:Person| all z:Course | (z in x.teaches and z in y.enrolled and x!=y) implies y not in Professor
inv9 B: all x :Professor| all y:Person| all z:Course | (z in x.teaches and z in y.enrolled) implies (y not in Professor and x!=y)
inv9 B: all x :Professor| all y:Person| all z:Course | (z in x.enrolled and z in y.enrolled) implies y.enrolled not in x.teaches
inv9 B: all x :Professor| all y:Person| all z:Course | (z in x.enrolled and z in y.enrolled) implies (x.teaches not in y.enrolled and y.enrolled not in x.teaches)
inv9 B: all x,y:Person| all z:Course | (z in x.enrolled and z in y.enrolled and x in Professor) implies (x.teaches not in y.enrolled and y.enrolled not in x.teaches)
inv9 B: all x,y:Person| all z,w:Course | (z in x.enrolled and z in y.enrolled and x in Professor and w in x.teaches) implies w not in y.enrolled
inv9 B: all x,y:Person| all z,w:Course | (z in x.teaches and z in y.teaches and x in Professor and w in x.teaches) implies w not in y.enrolled
inv10 S: all x:Person | all z:Course | x in z.grade implies x not in Professor
inv10 T: all x:Person | all z:Course | x in z.grades implies x not in Professor
inv10 B: all x:Person | all z:Course | some y:Grade | x->y in z.grades implies x not in Professor
inv10 B: all x:Person | all z:Course | all y:Grade | x->y in z.grades implies x not in Professor
inv10 C: all x:Person | all z:Course | all y:Grade | x->y in z.grades implies x in Student
inv10 C: all x:Person | all z:Course | all y:Grade | x->y in z.grades implies x in Student
inv11 U: all x:Student | all y:Course | all g:Grade| y not in x.enrolled implies x->g not in y.grades
inv12 T: all x:Student|all y:Course|one z:Grade | y in x.enrolled implies (x->z in y.Course or x->z not in y.Course)
inv11 U: all x:Student | all y:Course | all g:Grade| y not in x.enrolled implies x->g not in y.grades
inv12 B: all x:Student|all y:Course|one z:Grade | y in x.enrolled implies (x->z in y.grades or x->z not in y.grades)
inv12 S: all g1,g2:Grades | all s:Student | all c1,c2:Course | (s->g1 in c1.grades and s->g2 in c2.grades) implies c1!=c2
inv12 B: all g1,g2:Grade | all s:Student | all c1,c2:Course | (s->g1 in c1.grades and s->g2 in c2.grades) implies c1!=c2
inv12 S: all g1,g2:Grade | all s:Student | all c1,c2:Course | (c1 in s.enrolled and c2 in s.enrolled and s->g1 in c1.grades and s->g2 in c2.grades and ) implies c1!=c2	  all x:Student | all y:Grade | all z:Course |
inv12 S: all g1,g2:Grade | all s:Student | all c1,c2:Course | (c1 in s.enrolled and c2 in s.enrolled and s->g1 in c1.grades and s->g2 in c2.grades and ) implies c1!=c2
inv12 B: all g1,g2:Grade | all s:Student | all c1,c2:Course | (c1 in s.enrolled and c2 in s.enrolled and s->g1 in c1.grades and s->g2 in c2.grades) implies c1!=c2
inv12 U: all g1,g2:Grade | all s:Student | all c1,c2:Course | (c1 in s.enrolled and c2 in s.enrolled and s->g1 in c1.grades and s->g2 in c2.grades and g1!=g2) implies c1!=c2
inv12 U: all x:Student | all y:Course | lone z:Grade | x->z in y.grades
inv14 B: all x,y:Student | lone z:Project | z in x.projects and z in y.projects
inv14 T: all x,y:Student | lone z:Project | lone (z in x.projects & z in y.projects)
inv14 B: all x,y:Student | all z:Project | z in x.projects and z in y.projects and x!=y
inv14 U: all x,y:Student | lone z:Project | z in x.projects and z in y.projects and x!=y
inv13 S: all x,w :Student| all g1,g2:Grade| all z: Course | one q : project |(z in x.enrolled and z in w.enrolled and x->g1 in z.grades and w.g2 in z.grades and g1>g2 and g1!=g2 and w!=x) implies (q in z.projects and q in x.projects)
inv13 T: all x,w :Student| all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and x->g1 in z.grades and w.g2 in z.grades and g1>g2 and g1!=g2 and w!=x) implies (q in z.projects and q in x.projects)
inv13 T: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and x->g1 in z.grades and w.g2 in z.grades and g1>g2 and g1!=g2 and w!=x) implies (q in z.projects and q in x.projects)
inv13 T: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and x->g1 in z.grades and w.g2 in z.grades and g1>g2 and g1!=g2 and w!=x) implies (q in z.projects and q in x.projects)
inv13 T: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and x->g1 in z.grades and w->g2 in z.grades and g1>g2 and g1!=g2 and w!=x) implies (q in z.projects and q in x.projects)
inv13 T: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and x->g1 in z.grades and w->g2 in z.grades and g1>g2 and g1!=g2 and w!=x) implies (q in z.projects and q in x.projects)
inv13 S: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and x->g1 in z.grades and w->g2 in z.grades and (univ g1)>(univ g2) and g1!=g2 and w!=x) implies (q in z.projects and q in x.projects)
inv13 S: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and x->g1 in z.grades and w->g2 in z.grades and (univ g1)>(univ g2) and g1!=g2 and w!=x) implies (q in z.projects and q in x.projects)
inv13 S: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and x->g1 in z.grades and w->g2 in z.grades and (univ g1)>(univ g2) and g1!=g2 and w!=x) implies (q in z.projects and q in x.projects)
inv13 S: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and	      x->g1 in z.grades and w->g2 in z.grades and (univ g1)>(univ g2) and g1!=g2 and w!=x) implies	(q in z.projects and q in x.projects)
inv13 S: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and	      x->g1 in z.grades and w->g2 in z.grades and	      (univ g1)>(univ g2) and g1!=g2 and w!=x) implies	(q in z.projects and q in x.projects)
inv13 S: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and	      x->g1 in z.grades and w->g2 in z.grades and	      ((univ g1)>(univ g2)) and g1!=g2 and w!=x) implies	(q in z.projects and q in x.projects)
inv13 S: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and	      x->g1 in z.grades and w->g2 in z.grades and	      (univ(g1))>(univ (g2)) and g1!=g2 and w!=x) implies	(q in z.projects and q in x.projects)
inv13 S: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and	      x->g1 in z.grades and w->g2 in z.grades and	      univ(g1)>univ (g2) and g1!=g2 and w!=x) implies	(q in z.projects and q in x.projects)
inv13 S: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and	      x->g1 in z.grades and w->g2 in z.grades and	      univ(g1)>univ(g2) and g1!=g2 and w!=x) implies	(q in z.projects and q in x.projects)
inv13 T: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and	      x->g1 in z.grades and w->g2 in z.grades and	      univ[g1]>univ[g2] and g1!=g2 and w!=x) implies	(q in z.projects and q in x.projects)
inv13 T: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and	      x->g1 in z.grades and w->g2 in z.grades and	      univ[g1]>univ[g2] and g1!=g2 and w!=x) implies	(q in z.projects and q in x.projects)
inv13 T: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and	      x->g1 in z.grades and w->g2 in z.grades and	      (univ[g1])>(univ[g2]) and g1!=g2 and w!=x) implies	(q in z.projects and q in x.projects)
inv13 T: all x,w : Student | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and	      x->g1 in z.grades and w->g2 in z.grades and	      (univ[g1])=(univ[g2]) and g1!=g2 and w!=x) implies	(q in z.projects and q in x.projects)
inv13 S: one a:Student |all x : Student-a | all g1,g2:Grade| all z: Course | one q : Project |(z in x.enrolled and z in w.enrolled and	      x->g1 in z.grades and w->g2 in z.grades and	      (univ[g1])>(univ[g2]) and g1!=g2 and w!=x) implies	(q in z.projects and q in x.projects)
NA H: THEME UPDATE

