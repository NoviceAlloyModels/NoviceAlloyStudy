NA H: THEME UPDATE
inv1 C: all p:Person, c:Course | p in enrolled.c => p in Student
inv2 C: all p:Person,c:Course | p in teaches.c => p in Professor
inv3 C: all c:Course| some teaches.c
inv4 C: all p:Project | one projects.p & Course
inv5 S: all p:Project,c:Person| c in projects.p => c in Students	  all p:Project | some projects.p & Person
inv5 C: all p:Project,c:Person| c in projects.p => c in Student	  all p:Project | some projects.p & Person
inv6 B: all e:Student, p:Project | p in e.projects => e.enrolled in (projects.p & Course)
inv6 U: all e:Student, p:Project | p in e.projects => p in e.enrolled.projects
inv7 S: all p:Student,all c:Course | lone(p.projects & c.projects)
inv7 U: all p:Student, c:Course | lone(p.projects & c.projects)
inv8 U: all t:Professor | t not in teaches.t
inv8 U: all t:Professor,c:Course | c in t.teaches => t not in enrolled.c
inv9 S: all p:Professor, c:Professor - p, c:Course | c in t.teaches => c not in enrolled.c
inv9 U: all p:Professor, c:Professor - p, c:Course | c in p.teaches => c not in enrolled.c
inv9 B: all p:Professor, col:Professor - p, c:Course | c in p.teaches => col not in enrolled.c
inv9 B: all p:Professor, col:Professor - p, c:Course | c in p.teaches => col not in enrolled.c and c not in col.teaches
inv9 U: all p:Professor, col:Professor - p, c:Course | c in p.teaches and c in col.teaches => col not in enrolled.c
inv9 U: all p:Professor, col:Professor - p | some (col.teaches & p.teaches)=> no (col.enrolled & p.teaches)
inv10 T: all c:Course,p:Person,g:Grade| p->g in c => p in Student
inv10 C: all c:Course,p:Person,g:Grade| p->g in c.grades => p in Student
inv11 O: all c:Course,p:Person,g:Grade | p->g in c.grades => g in p.enrolled
inv11 C: all c:Course,p:Person,g:Grade | p->g in c.grades => c in p.enrolled
NA H: THEME UPDATE
inv1 S: all p:Person, c:Couse| p.enrolled => p in Aluno
inv1 S: all p:Person, c:Couse| some p.enrolled => p in Student
inv1 C: all p:Person, c:Course| some p.enrolled => p in Student
inv1 C: all p:Person| some p.enrolled => p in Student
inv1 C: all p:Person| some p.enrolled => p in Student
inv2 C: all p:Person| some p.teaches => p in Professor
inv6 S: all p:Projects
inv6 S: all p:Projects
inv3 T: all c:Course| some Professor.c
inv3 T: all c:Course| some Person.c
inv4 T: all p:Project| one projects.p
inv4 T: all p:Project| one projects.p
inv4 C: all p:Project| one projects.p & Course
inv4 T: all p:Project| one projects.p
inv4 T: all p:Project| one projects.p
inv4 C: all p:Project| one projects.p & Course
inv5 U: all p:Person| some p.projects => p in Student
inv5 C: all p:Person| some p.projects => p in Student	  				all p:Project| some projects.p & Person
inv6 U: all s:Student| s.projects in s.enrolled.projects
inv7 S: all s:Students | # (s.projects in s.enrolled.projects) <= 1
inv7 T: all s:Student | # (s.projects in s.enrolled.projects) <= 1
inv7 T: all s:Student | # s.projects in s.enrolled.projects <= 1
inv7 T: all s:Student |( # s.projects in s.enrolled.projects) <= 1
inv7 B: all s:Student | # (s.projects) < # (s.enrolled)
inv7 T: all s:Student | # (s.projects in s.enrolled.projects) < 2
inv7 T: all s:Student | lone s.projects in s.enrolled.projects
inv7 T: all s:Student | lone (s.projects in s.enrolled.projects)
inv7 T: all s:Student | lone (s.projects in s.enrolled.projects)
inv7 T: all s:Student | lone (s.projects in s.enrolled.projects)
inv6 U: all s:Student| s.projects in s.enrolled.projects
inv9 B: all p:Person| some p.enrolled => p in Student
inv9 S: t:Professor, c:Course| c in t.teaches => c.enrolled not in Professor
inv9 S: c:Course| c.enrolled not in Professor
inv9 O: all c:Course| c.enrolled not in Professor

