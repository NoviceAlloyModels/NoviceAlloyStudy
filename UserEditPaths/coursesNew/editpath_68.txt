NA H: THEME UPDATE
inv1 C: all x : Person | x in enrolled.Course implies x in Student
inv2 C: all x : teaches.Course | x in Professor
inv3 C: all x : Course | some y : Person | y in teaches.x
inv4 T: all x : Project | x in projects.Course
inv4 U: all x : Project | x in Course.projects
inv4 T: all x : Project | one x in Course.projects
inv4 T: all x : Project | one ( x in Course.projects)
inv4 T: all x : Project | one projects.x
inv4 T: all x : Project | one Course in projects.x
inv4 C: all x : Project | one y : Course | y in projects.x
inv4 C: all x : Project | one Course <: projects.x
inv5 S: Students.projects :> Project && some Person <: projects.Project
inv5 T: Student.projects :> Project && some Person <: projects.Project
inv5 T: Student.projects && some Person <: projects.Project
inv5 T: Student.projects && some projects.Project
inv5 B: all x: Person | x in projects.Project & Student
inv5 B: all x: Person | x in projects.Project & Student	  			  	  some x: Person | x in projects.Project
inv5 T: all x: Person | x in projects.Project & Student	  			  	  some Person in projects.Project
inv5 T: all x: Person | x in projects.Project & Student	  			  	  some projects.Project
inv5 B: all x: Person | x in projects.Project & Student	  			  	  some  Person <: projects.Project
inv5 S: all Student in projects.Project  			  	  some  Person <: projects.Project
inv5 B: all x: Person | x in projects.Project => x in Student	  			  	  some  Person <: projects.Project
inv5 T: Student <: projects.Project	  			  	  some  Person <: projects.Project
inv5 T: all x : Person | x.projects :> Project => x in Student	  			  	  	some  Person <: projects.Project
inv5 T: all x : Person | (x.projects :> Project) => x in Student	  			  	  	some  Person <: projects.Project
inv5 T: all x : Person | (x.projects :> Project) => x in Student
inv5 U: all x : Person | (some x.projects :> Project) => x in Student
inv5 B: all x : Person | some y : Project | x in projects.y => x not in teaches.(Course<:projects.y)
inv5 B: all x : Person | all y : Project | x in projects.y => x not in teaches.(Course<:projects.y)
inv5 B: all x : Person | all y : Course | x.projects in y.projects => y not in x.teaches
inv5 U: all x : Person | (some x.projects) => x in Student
inv5 B: all x : Person | (some x.projects) => x in Student	  			  	  	some  Person <: projects.Project
inv5 B: all x : Person | (some x.projects) => x in Student && x not in Professor	  			  	  	some  Person <: projects.Project
inv5 B: some  Person <: projects.Project
inv6 B: all x : Student | all y : Project | y in x.projects => Course <: projects.y in x.enrolled
inv8 S: all x : Teacher | x.teaches not in x.enrolled
inv8 B: all x : Professor | x.teaches not in x.enrolled
inv8 B: all x : Professor | x.enrolled not in x.teaches

