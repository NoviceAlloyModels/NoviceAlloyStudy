NA H: THEME UPDATE
NA M: MOD BASE MODEL
NA M: MOD BASE MODEL
inv7 B: all s: Student| all p1, p2: Project| all c: Course| (p1 in s.projects) and (p2 in s.projects) and (p1 in c.projects) and (p2 in c.projects)
inv7 U: all s: Student| all p1, p2: Project| all c: Course| (p1 in s.projects) and (p2 in s.projects) and (p1 in c.projects) and (p2 in c.projects) implies p1=p2
inv8 U: all p: Professor| all c: Course| p in c.teaches implies p not in c.enrolled
inv8 U: all p: Person - Student| all c: Course| p in c.teaches implies p not in c.enrolled
inv8 U: all p: Professor| all c: Course| p in c.teaches implies p not in c.enrolled
inv8 U: all p: Person| all c: Course| p in c.teaches implies (p not in c.enrolled and p in Professor)
inv8 U: all p: Professor| all c: Course| p in c.teaches implies p not in c.enrolled
inv8 B: all p: Professor| some c: Course| p in c.teaches implies p not in c.enrolled
inv8 U: all p: Professor| all c: Course| p in c.teaches implies p not in c.enrolled
inv8 T: all p: Professor| all c: Course| p in c.teaches implies p not in enrolled
inv8 U: all p: Professor| all c: Course| p in c.teaches implies p not in c.enrolled
inv8 U: all p1 : Professor | all c1:Course | p1->c1 in teaches implies p1->c1 not in enrolled
inv8 U: all p: Professor| all c: Course| p in c.teaches implies (p not in c.enrolled)
inv8 U: all p: Professor| all c: Course| c in p.teaches implies (p not in c.enrolled)
inv8 U: all p: Professor| all c: Course| c in p.teaches implies c not in p.enrolled
inv9 U: all p1, p2: Professor | all c: Course| (p1!=p2 and c in p1.teaches and c in p2. teaches) implies (all c2 : Course | p1->c2 in teaches implies p2->c2 not in enrolled)
inv9 U: all p1, p2: Professor | all c: Course| (p1!=p2 and c in p1.teaches and c in p2. teaches) implies (all c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)
inv10 T: all x: Person| all c: Course| c in c.grades implies c in Student
inv10 T: all x: Person| all c: Course| c in grades.c implies c in Student
inv10 T: all x: Person| all c: Course| c in grades.c implies x in Student
inv10 T: all x: Person| all c: Course| x in grades.c implies x in Student
inv10 U: all x: Person| all c: Course| all g: Grade| x in g.grades.c implies x in Student
inv10 C: all x: Person| all c: Course| all g: Grade| x in c.grades.g implies x in Student
inv11 S: all s: Student| all c: Course| all g: Grade| c in s.enrolled implies x in c.grades.g
inv11 B: all s: Student| all c: Course| all g: Grade| c in s.enrolled implies s in c.grades.g
inv11 B: all s: Student| all c: Course| all g: Grade| c in s.enrolled implies s in g.grades.c
inv11 B: all s: Student| all c: Course| all g: Grade| c in s.enrolled implies s in c.grades.g
inv11 U: all s: Student| all c: Course| all g: Grade| s in c.grades.g implies c in s.enrolled
inv12 T: all s: Student| all c: Course | one s in c.grades.g
inv12 T: all s: Student| all c: Course | all g: Grade| some s in c.grades.g
inv12 S: all s: Student| all c: Course | c in s.enrolled implies (lone g: Grade| s in c.grade.g)
inv12 U: all s: Student| all c: Course | c in s.enrolled implies (lone g: Grade| s in c.grades.g)
inv13 T: all s: Student | all c: Course| s in c.grades.last implies c in s.projects
inv13 U: all s: Student | all c: Course| s in c.grades.last implies (some p : Project | p in c.projects and p in s.projects)
inv14 B: all s1, s2: Student| all p1, p2: Project| (s1!=s2 and p1!=p2 and p1 in s1.projects and p2 in s2.projects)
inv14 U: all s1, s2: Student| all p1, p2: Project| (s1!=s2 and p1!=p2 and p1 in s1.projects and p2 in s2.projects) implies ((p2 not in s1.projects) or (p1 not in s2.projects))
inv15 S: all s1, s2: Student| all p: Project| (s1!=s2 and p in s1.projects and p in s2.projects) implies (all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv15 U: all s1, s2: Student| all p: Project| (s1!=s2 and p in s1.projects and p in s2.projects) implies (all g1,g2 : Grade | g1 in s1.(p.grades) and g2 in s2.(p.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv15 B: all s1, s2: Student| all c: Course| all p: Project| (s1!=s2 and p in s1.projects and p in s2.projects) implies (all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv15 B: all s1, s2: Student| all c: Course| all p: Project| (s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies (all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))

