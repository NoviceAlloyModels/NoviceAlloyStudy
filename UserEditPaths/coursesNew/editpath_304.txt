NA H: THEME UPDATE
inv1 B: no Professor.enrolled
inv1 C: all p: Person | some p.enrolled implies p in Student
inv2 C: all p: Person | some p.teaches implies p in Professor
inv3 B: some teaches
inv3 B: some teaches.Course
inv3 C: all c: Course | some teaches.c
inv4 T: all p: Project | one projects.p
inv4 T: all p: Project | one projects.p
inv4 T: all p: Project | one projects.p
inv4 C: all p: Project | one Course <: projects.p
inv5 T: all p: Person | some p.projects implies p in Student		all p: Project | p in Person <: projects
inv5 T: all p: Person | some p.projects implies p in Student		all p: Project | Person <: p in projects
inv5 T: all p: Person | some p.projects implies p in Student		all p: Project | p in (Person <: projects)
inv5 T: all p: Person | some p.projects implies p in Student		all p: Project | p in projects
inv5 T: all p: Person | some p.projects implies p in Student		all p: Project | p in projects
inv5 T: all p: Project | p in projects
inv5 C: all p: Person | some p.projects implies p in Student		all p: Project | p in Person.projects
inv6 S: all s: Strudent | p: s.projects | p in s.enroled.projects
inv6 S: all s: Strudent | p: s.projects | p in s.enroled.projects
inv6 S: all s: Strudent | all p: s.projects | p in s.enroled.projects
inv6 S: all s: Student | all p: s.projects | p in s.enroled.projects
inv6 U: all s: Student | all p: s.projects | p in s.enrolled.projects
inv7 U: all s: Student | all c: s.enrolled | lone p: s.projects | p in c
inv7 B: all s: Student | all c: s.enrolled | one p: s.projects | p in c
inv7 B: all s: Student | all c: s.enrolled | one p: s.projects | p in c.projects
inv7 U: all s: Student | all c: s.enrolled | lone p: s.projects | p in c.projects
inv7 U: all s: Student | all c: s.enrolled | lone p: s.projects | p in c.projects
inv8 U: all p: Professor | no p.teaches & p.enrolled
inv9 B: all p: Professor | no p.teaches & p.enrolled
inv9 S: disj all p1, p2: Professor | some p1.teaches & p2.teaches implies no (p1.teaches & p2.enrolled)
inv9 U: all disj p1, p2: Professor | some p1.teaches & p2.teaches implies no (p1.teaches & p2.enrolled)
inv10 S: all u: User, g: Grade | u in Course.grades implies u in Student
inv10 S: all p: Person, g: Grade | u in Course.grades implies u in Student
inv10 T: all p: Person, g: Grade | p in Course.grades implies p in Student
inv10 C: all p: Person, g: Grade | p->g in Course.grades implies p in Student
inv11 B: all s: Student, g: Grade, c: Course | s->g in c.grades implies s in c
inv11 U: all s: Student, g: Grade, c: Course | s->g in c.grades implies c in s.enrolled
inv12 T: all s: Student, g: Grade, c: Course | lone s->g in c.grades
inv12 U: all s: Student, g: Grade, c: Course | lone s->g & c.grades
inv12 T: all s: Student, c: Course | lone s & c.grades
inv12 T: all s: Student, c: Course | lone s & c.grades
inv12 T: all s: Student, c: Course | lone s & c.grades
inv12 T: all s: Student, c: Course | lone s & c.grades
inv12 T: all s: Student, c: Course | lone s & c.grades
inv12 T: all s: Student, c: Course | lone s & c.grades
inv12 U: all s: Student, c: Course | lone g : Grade | s->g in c.grades
inv13 E: 
inv13 S: all c: Courses | c.grades.(max[Grade]) in c.projects
inv13 T: all c: Course | c.grades.(max[Grade]) in c.projects
inv13 T: all c: Course | c.grades.(max[Grade]) in c.projects
inv13 O: all c: Course | c.grades.(max[Grade]) in Course <: c.projects
inv13 T: all c: Course, s: Student | c.grades.(max[Grade]) in s.projects
inv13 B: all c: Course, s: Student | c.grades.(max[Grade]) in Person <: s.projects
inv13 T: all c: Course | c.grades.(max[Grade]) in projects.c
inv13 O: all c: Course | c.grades.(max[Grade]) in (Course <: projects).c
inv13 O: all c: Course | c.grades.(max[Grade]) in (Course <: projects).c
inv13 T: all c: Course, s: Student | c.grades.(max[Grade]) in s.projects
inv13 B: all c: Course, s: Student | c.grades.(max[Grade]) in Person <: s.projects
inv13 C: grades.(max[Grade]) in projects.~projects
inv13 T: grades.(max[Grade]) in projects
inv13 T: grades.(max[Grade]) in Person <: projects
inv13 T: grades.(max[Grade]) in (Person <: projects)
inv13 T: grades.(max[Grade]) in (Course <: projects)
inv13 T: grades.(max[Grade]) in projects
inv13 T: grades.(max[Grade]) in projects.projects
inv13 C: grades.(max[Grade]) in projects.~projects
inv13 T: grades.(max[Grade]) in ~projects
inv13 C: grades.(max[Grade]) in projects.~projects
inv14 U: all disj s1, s2: Student | lone s1.projects & s2.projects
inv7 U: all s: Student, c: s.enrolled | lone p: s.projects | p in c.projects
inv6 U: all s: Student, p: s.projects | p in s.enrolled.projects
inv15 O: all p : Project, g1, g2 : (projects.p).grades[projects.p] | g1 in (g2 + prev[g2] + next[g2])

