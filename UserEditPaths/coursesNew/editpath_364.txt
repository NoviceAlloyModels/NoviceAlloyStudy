NA H: THEME UPDATE
inv1 C: enrolled.Course in Student
inv2 C: teaches.Course in Professor
inv2 C: teaches.Course in Professor
inv3 C: all c : Course | some teaches.c
inv4 T: all p : Project | one projects.p
inv4 T: all p : Project | one projects.p
inv4 C: all p : Project | one Course <: projects.p
inv4 C: all p : Project | one (Course <: projects).p
inv4 C: all p : Project | one Course <: (projects.p)
inv5 C: Person <: projects.Project in Student	    all p : Project | some Person <: projects.p
inv6 U: all s : Student | s.projects in s.enrolled.projects
inv7 U: all s : Student, c : Course | lone c.projects & s.projects
inv8 U: all p : Professor | p not in enrolled.(p.teaches)
inv9 B: all p : Professor | no enrolled.(p.teaches) & (Professor-p)
inv9 B: all p : Professor | no enrolled.(p.teaches) & (Professor)
inv9 B: all p : Professor | no (enrolled.(p.teaches) & (Professor))
inv9 B: all p : Professor | no (p.teaches) & Professor.enrolled
inv9 B: all p : Professor | no p.teaches & Professor.enrolled
inv9 B: all p : Professor | no (Professor).enrolled & p.teaches
inv10 E: 
inv9 B: all p : Professor | no (Professor).enrolled & p.teaches
inv9 S: all p : Professor | no Professor-u.enrolled & p.teaches
inv9 B: all p : Professor | no Professor-p.enrolled & p.teaches
inv9 B: all p : Professor | no ((Professor-p).enrolled & p.teaches)
inv10 O: Course.{c : Course, p : Person | some c.grades} in Student
inv10 T: not Course.{c : Course, p : Person | some c.grades} & Professor
inv10 T: not (Course.{c : Course, p : Person | some c.grades}) & Professor
inv10 O: Course.{c : Course, p : Person | some c.grades} in Student
inv10 B: one Course.{c : Course, p : Person | some c.grades} & Professor
inv10 B: no Course.{c : Course, p : Person | some c.grades} & Professor
inv10 S: all c : Course (all p : Person, g:Grade | c->p->g in grades implies p in Student)
inv10 S: all c : Course (all p : Person, g:Grade | c->p->g in grades implies p in Student)
inv10 C: all c : Course | (all p : Person, g : Grade | c->p->g in grades implies p in Student)
inv11 S: all s : Student, c : Course, g : Grade | c->p->g in grades implies c in s.enrolled
inv11 U: all s : Student, c : Course, g : Grade | c->s->g in grades implies c in s.enrolled
inv12 U: all s : Student, c : Course | s->c in enrolled implies lone s.(c.grades)
inv13 S: all c : Course | ({p : Person, g : Grade | some c.grades}.last).g in Person <: projects.(c.projects)
inv13 T: all c : Course | ({p : Person, g : Grade | some c.grades}.last).Grade in Person <: projects.(c.projects)
inv13 T: all c : Course | ({p : Person, g : Grade | some c.grades}.last).Grade in Person <: projects.(c.projects)
inv13 T: all c : Course | ({p : Person, g : Grade | some c.grades}.last).Grade in Person <: projects.(c.projects)
inv13 B: all c : Course | some c.grades.last.(Person <: projects)

