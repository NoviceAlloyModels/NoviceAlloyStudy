NA H: THEME UPDATE
inv1 C: all p:Person | p not in Student implies no p.enrolled
inv2 C: all p:Person | p not in Professor implies no p.teaches
inv3 C: all c : Course | some teaches.c
inv4 C: all p:Project| one c:Course | p in c.projects
inv5 B: all ps : Person, pr : Project | ((ps not in Student) implies (no ps.projects) and (pr in ps.projects))
inv5 S: all ps : Person | ((ps not in Student) implies (no ps.projects))	  all pr : Project, p : Person |and (pr in p.projects))
inv5 B: all ps: Person, pr:Project | (ps not in Student implies no ps.projects) and (pr in ps.projects)
inv5 S: all ps: Person, pr:project | ps not in Student implies (no ps.projects and pr in ps.projects )
inv5 B: all ps: Person, pr:Project | ps not in Student implies (no ps.projects and pr in ps.projects )
inv5 S: all p: Person | p not in Student implies no p.projects	  all p: Project,  | (some s: Student | p in s.projects)
inv5 C: all p: Person | p not in Student implies no p.projects	  all p: Project | (some s: Student | p in s.projects)
inv5 C: all p: Person | p not in Student implies no p.projects	  all p: Project | some s: Student | p in s.projects
inv6 S: all st:Studetn, c:Course| c in st.enrolled implies c.projects in st.projects
inv6 B: all st:Student, c:Course| c in st.enrolled implies c.projects in st.projects
inv6 B: all st:Student, c:Course| c in st.enrolled implies c.projects = st.projects
inv5 C: all p: Person | p not in Student implies no p.projects	  all p: Project | some s: Student | p in s.projects
inv6 B: all st:Student, c:Course| c in st.enrolled implies c.projects = st.projects
inv6 B: all st:Student | some c:Course| c in st.enrolled implies c.projects in st.projects
inv6 B: all st:Student | some c : Course | c in st.enrolled implies st.projects in c.projects
inv6 B: all st:Student | some c : Course | c in st.enrolled and st.projects in c.projects
inv6 S: all u : Student, p: u.projects | some c : Course | c in u.enrolled and p in c.projects)
inv6 U: all u : Student, p: u.projects | some c : Course | c in u.enrolled and p in c.projects
inv6 B: all st:Student | some c : Course | c in st.enrolled and st.projects in c.projects
inv6 B: all u : Student, p: u.projects | some c : Course | c in u.enrolled and u.projects in c.projects
inv6 U: all u : Student, p: u.projects | some c : Course | c in u.enrolled and p in c.projects
inv6 B: all st : Student, c : Course | (c in st.enrolled) implies (c.projects in st.projects)
inv6 B: all st : Student, c : Course | (c in st.enrolled) implies (st.projects in c.projects)
inv6 B: all st : Student, c : Course | (c in st.enrolled) and (st.projects in c.projects)
inv6 B: all st : Student | some c : Course | (c in st.enrolled) and (st.projects in c.projects)
inv6 U: all st : Student, p: st.projects | some c : Course | (c in st.enrolled) and (p in c.projects)
inv6 B: all st : Student, p: st.projects | all c : Course | (c in st.enrolled) and (p in c.projects)
inv6 U: all st : Student, p: st.projects | some c : Course | (c in st.enrolled) and (p in c.projects)
inv7 S: all st:Student | st.projects.size <=1
inv6 U: all st : Student, p: st.projects | some c : Course | (c in st.enrolled) and (p in c.projects)
inv7 B: all st:Student | #st.projects <=1
inv7 S: all st:Student, pr:st.courses.projects | #pr.projects <=1
inv7 U: all st:Student, pr:st.enrolled.projects | #pr.projects <=1
inv6 T: all s: Student, p: Project | s in p.Course.enrolled implies s in p.Course.projects
inv6 T: all s: Student, p: Project | s in p.Course.enrolled implies s in p.Course.projects
inv6 U: all st : Student, p: st.projects | some c : Course | (c in st.enrolled) and (p in c.projects)
inv7 T: all st:Student, c:st.enrolled | lone st.projects in c
inv7 U: all st:Student, c:st.enrolled | #(st.projects & c.projects) <= 1
inv8 U: all prof : Professor, c:Course | c in prof.teaches implies c not in prof.enrolled
inv8 U: all prof : Professor, c:Course | c in prof.teaches implies c not in prof.enrolled
inv9 B: all prof : Professor, c : Course, pr : Person-Professor | c in prof.teaches implies (c not in pr.enrolled)
inv9 B: all prof : Professor, c : Course, pr : Person-Student | c in prof.teaches implies (c not in pr.enrolled)
inv9 B: all prof : Professor, c : Course, coll : Person | c in prof.teaches implies (c not in coll.enrolled)
inv9 B: all prof : Professor, c : Course, coll : Person | c in prof.teaches implies (coll not in Professor and c in coll.enrolled)
inv9 B: all prof1 : Professor, prof2 : Professor, c : Course | c in prof1.teaches implies c not in prof2.enrolled
inv9 S: all prof : Professor, coll : Professor-prof, c : Course | (prof.teaches & coll.teaches) implies (implies no (col.enrolled & p.teaches)
inv9 S: all p : Professor | col : Professor - p | some (col.teaches & p.teaches) implies no (col.enrolled & p.teaches)
inv9 S: all p : Professor | col : Professor - p | (col.teaches & p.teaches) implies no (col.enrolled & p.teaches))
inv9 U: all p : Professor | (all col : Professor - p | some (col.teaches & p.teaches) implies no (col.enrolled & p.teaches))
inv9 U: all p : Professor | (all col : Professor - p | some (col.teaches & p.teaches) implies no (col.enrolled & p.teaches))
inv10 C: all c : Course, st : Person, g : Grade | (st->g in c.grades) implies (st in Student)
inv11 U: all c : Course, st : Student, g:Grade | (st->g in c.grades) implies (c in st.enrolled)
inv12 T: all c : Course, st : Student, g:Grade | lone (st->g in c.grades)
inv12 U: all c : Course, st : Student, g:Grade | (st->g in c.grades) implies #st->g <= 1
inv12 U: all c : Course, st : Student | lone g:Grade | (st->g in c.grades)

