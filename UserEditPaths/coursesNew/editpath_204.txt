NA H: THEME UPDATE
inv1 U: all p : Person | p.enrolled in Student.enrolled
inv1 B: all s : Student | s.enrolled = s.enrolled	  all p : Person | p.enrolled = none => p in Professor
inv1 T: all p : Person | p.enrolled => p in Student
inv1 B: all p : Person | (p in Student) => (p.enrolled = p.enrolled)	  all p : Person | (p in Professor) => (p.enrolled = none)
inv1 C: all p : Person | p.enrolled != none => p in Student
inv2 C: all p : Person | p.teaches != none => p in Professor
inv3 O: all c : Course | (some p : Professor | c in p.teaches)
inv3 O: all c : Course | 	    (c.teaches != none)
inv3 O: all c : Course | (c.teaches != none)
inv4 T: all p : Project | #(p.(Course.projects)) = 1
inv4 T: all p : Project | #(p.(Course.projects)) = 1
inv4 C: all p : Project | one c : Course | p in c.projects
inv5 S: all p : Project, some s : Student | p in s.projects
inv4 C: all p : Project | one c : Course | p in c.projects
inv5 U: all p : Project | some s : Student | p in s.projects
inv5 U: all p : Project | (some s : Student | p in s.projects)
inv5 U: all p : Project | (all s : Person | p in s.projects => s in Student)
inv6 S: all s : Student | p : s.projects => p in s.enrolled.projects
inv6 S: all s : Student | p : s.projects => p in s.enrolled.projects
inv6 S: all s : Student | p : s.projects => p in s.enrolled.projects
inv6 S: all s : Student | p : s.projects => p in s.enrolled.projects
inv6 U: all s : Student | (s.projects in s.enrolled.projects)
inv7 B: all s : Student | all c : s.enrolled | #(s.projects & c.projects) = 1
inv7 U: all s : Student, c : Course | (s.enrolled in c => #(s.projects & c.projects) <= 1)
inv7 U: all s : Student, c : Course | (s.enrolled in c => #(s.projects & c.projects) <= 1)
inv7 U: all s : Student | all c : s.enrolled | #(s.projects & c.projects) <= 1
inv8 U: all p : Professor | p !in p.teaches
inv8 B: all p : Professor | p !in p.teaches => p.enrolled != p.teaches
inv8 B: all p : Professor | p !in p.teaches => p.enrolled != p.teaches
inv9 U: all p1, p2 : Professor | p1 !in p2.teaches and p2 !in p1.teaches
inv9 U: all p1, p2 : Professor | p1 !in p2.teaches and p2 !in p1.teaches
inv9 B: all p1, p2 : Professor | p1.enrolled !in p2.teaches and p2.enrolled !in p1.teaches
inv10 S: all p : Person | (p in Student => (p.grades = p.grades) and (p in Professor => p.grades = none)))
inv10 T: all p : Person | (p in Student => (p.grades = p.grades) and (p in Professor => (p.grades = none)))
inv10 T: all p : Person | #(p.grades != 0) => p in Student
inv11 T: all s : Student | all c : Course | (c in s.enrolled => s.grades != none)
inv12 S: all s : Student | c : s.enrolled | #(s.grades.c) <= 1
inv12 U: all s : Student | all c : s.enrolled | #(s.grades.c) <= 1
inv13 S: all c : Course | (sone s : c.enrolled & Student | (s.grades.c = max(c.enrolled.grades.c)) => s.projects & c.projects != none)
inv13 S: all c : Course | (some s : c.enrolled & Student | (s.grades.c = max(c.enrolled.grades.c)) => s.projects & c.projects != none)
inv13 S: all c : Course | (some s : c.enrolled & Student | (s.grades.c = max(c.enrolled.grades.c)) => s.projects & c.projects != none)
inv13 S: all c : Course | (some s : c.enrolled & Student | (s.grades.c = max (c.enrolled.grades.c)) => s.projects & c.projects != none)
inv13 S: all c : Course | (some s : c.enrolled & Student | (s.grades.c = max(c.enrolled.grades.c)) => s.projects & c.projects != none)
inv14 B: all s1, s2 : Student | (s1 != s2) => (s1.projects & s2.projects = none)
inv14 T: all s1, s2 : Student | s1.projects & s2.projects => s1 = s2
inv14 T: all s1, s2 : Student | s1.projects & s2.projects => s1 = s2
inv14 T: all s1, s2 : Student | s1.projects & s2.projects => s1 = s2
inv14 T: all s1, s2 : Student | (s1.projects & s2.projects) => s1 = s2
inv14 B: all s1, s2 : Student | (s1.projects in s2.projects) => s1 = s2
inv14 B: all s1, s2 : Student | (#(s1.projects & s2.projects) > 0) => s1 = s2
inv14 B: all s1, s2 : Student | (s1 != s2) => (#(s1.projects & s2.projects) = 1)
inv15 S: all s1, s2 : Student | (s1 != s2) => (all c : s1.enrolled & s2.enrolled | (all p : c.projects & s1.projects & s2.projects | abs(s1.grades.c - s2.grades.c) <= 1))
inv15 S: all s1, s2 : Student | (s1 != s2) => (all c : s1.enrolled & s2.enrolled | (all p : c.projects & s1.projects & s2.projects | abs(s1.grades.c - s2.grades.c) <= 1))
inv15 S: all s1, s2 : Student | (s1 != s2) => (all c : s1.enrolled & s2.enrolled | (all p : c.projects & s1.projects & s2.projects | abs(s1.grades.c - s2.grades.c) <= 1))
inv5 S: all p : Person | (p in Student => (p.projects = p.projects) and (p in Professor => (p.projects = none))), all p : Project | (some s : Student | p in s.projects)
inv5 S: all p : Person | (p in Student => (p.projects = p.projects) and (p in Professor => (p.projects = none))), all p : Project | (some s : Student | p in s.projects)
inv5 S: all p : Person | (p in Student => (p.projects = p.projects)) and (p in Professor => (p.projects = none)),	    all p : Project | (some s : Student | p in s.projects)
inv5 S: all p : Person | (p in Student => (p.projects = p.projects)) & (p in Professor => (p.projects = none)),	    all p : Project | (some s : Student | p in s.projects)
inv5 T: all p : Project | (some s : Student | p in s.projects) 	    all p : Person | (p in Student => (p.projects = p.projects)) & (p in Professor => (p.projects = none))
inv5 B: all p : Project | (some s : Student | p in s.projects) 	    all s : Student | (s.projects != none)
inv5 T: all p : Project | (some s : Student | p in s.projects) 	    all p : Person | (p.projects != none) & (all c : p.teaches | c !in p.enrolled)
inv5 B: all p : Project | (some s : Student | p in s.projects) 	    all p : Person | (p.projects != none) and (all c : p.teaches | c !in p.enrolled)
inv6 U: all s : Student | (s.projects in s.enrolled.projects)
inv7 U: all s : Student | all c : s.enrolled | #(s.projects & c.projects) <= 1
inv8 E: 
inv8 U: all p : Professor | p !in p.teaches
inv8 U: all p : Professor | p.teaches = p.teaches
inv8 U: all p : Professor | p not in p.teaches
inv8 B: all p : Professor | p.enrolled !in p.teaches
inv8 B: all p : Professor | p.enrolled = 0
inv8 B: all p : Professor | p.enrolled = none
inv8 U: all p : Professor | p.enrolled & p.teaches = none
inv5 E: 
inv9 B: all p1, p2 : Professor | p1.enrolled !in p2.teaches and p2.enrolled !in p1.teaches
inv9 B: all p1, p2 : Professor | (p1 != p2) => (p1.teaches & p2.teaches = none)
inv9 B: all p1 : Professor, p2 : Person | (p1 != p2) => (p1.teaches & p2.teaches = none)
inv9 B: all p1 : Professor | all p2 : Person | (p2 in Professor and p1 != p2) => (p1.teaches & p2.teaches = none)
inv9 B: all p1 : Professor | all p2 : Professor | (p1 != p2) => (p1.teaches & p2.teaches = none)
NA H: THEME UPDATE

