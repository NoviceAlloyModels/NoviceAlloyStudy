NA H: THEME UPDATE
inv1 C: Student = Person
inv2 C: no Teacher
inv2 C: no Teacher
inv3 C: no (Student & Teacher)
inv4 C: Student + Teacher = Person
inv5 C: some Teacher.Teaches
inv6 C: all t: Teacher | some t.Teaches
inv7 U: all c: Class | some Teaches.c
inv7 S: all c: Class, some t: Teacher | t.c
inv7 U: all c: Class | some Teaches.c
inv7 C: all c: Class | some (Teaches.c & Teacher)
inv8 O: all t: Teacher | #t.Teaches = 1
inv8 C: all t: Teacher | lone t.Teaches
inv8 C: all t: Teacher | lone t.Teaches
inv9 C: all c: Class | lone (Teaches.c & Teacher)
inv10 T: all c: Class | Student <: c.Group = Student
inv10 T: all c: Class | Student <: c.Groups = Student
inv10 T: all c: Class | (Student <: c.Groups) = Student
inv10 O: all c: Class | Student.(c.Groups) = Student
inv10 O: all c: Class | c.Groups.Student = Student
inv10 T: all c: Class | Groups.c = Student
inv10 O: all c: Class, s: Student | some c.Groups.s
inv10 C: all c: Class, s: Student | some s.(c.Groups)
inv11 C: all c: Class | some c.Groups implies some (Teaches.c & Teacher)
inv12 C: all t: Teacher | some t.Teaches.Groups
inv13 T: Person.Tutors in Teacher->Student
inv13 T: Person.Tutors.univ in Teacher->Student
inv13 T: Person.Tutors.univ in Teacher.univ->Student.univ
inv13 C: Tutors in Teacher->Student
inv14 B: all c: Class, s: Student, t: Teaches.c | t->s in Tutors
inv14 T: all c: Class, s: Groups.c, t: Teaches.c | t->s in Tutors
inv14 T: all c: Class, s: Student, t: Teaches.c | s in c.Groups implies t->s in Tutors
inv14 U: all c: Class, s: Student, t: Teaches.c | some s.(c.Groups) implies t->s in Tutors
inv15 B: all p: Person | some (p.*Tutors & Teacher)
inv15 T: all p: Person | some (Tutors.*p & Teacher)
inv15 S: all p: Person | some (Tutors*.p & Teacher)
inv15 U: all p: Person | some (*Tutors.p & Teacher)
inv15 C: all p: Person | some (^Tutors.p & Teacher)

