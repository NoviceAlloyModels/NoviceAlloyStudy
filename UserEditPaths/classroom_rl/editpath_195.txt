NA H: THEME UPDATE
inv1 C: all p : Person | p in Student
inv2 C: no Teacher
inv3 C: all p : Person | p in Teacher => p not in Student || p in Student => p not in Teacher
inv3 B: no (Student - Teacher)
inv3 C: no (Student & Teacher)
inv3 C: no Student & Teacher
inv4 B: no Student & Teacher
inv4 S: no Student | Teacher
inv4 T: no Student || Teacher
inv4 T: all p : Person | no (p not in Student && p not in Teacher)
inv4 S: all p : People | p in (Student + Teacher)
inv4 C: all p : Person | p in (Student + Teacher)
inv4 C: Person in Student + Teacher
inv5 B: (#Teaches ) > 0
inv5 S: all t : Teacher | some t.teaches
inv5 B: all t : Teacher | some t.Teaches
inv5 T: all t : Teacher | some t in Class
inv5 T: all t : Teacher | some t in Class.Groups
inv7 T: all c : Class | some Teacher in c.Groups
inv7 T: all c : Class | some Teacher in c->Groups
inv7 B: all c : Class | (#c.Groups) > 0
inv7 T: all c : Class | Teacher in c.Groups
inv7 T: all c : Class | all t : Teacher | t in c.Groups
inv7 S: all c : Class | (all t : Teacher | t in c.Groups)	}
inv7 S: all c : Class, t : Teacher | (#t.(c.Groups)) > 0	}
inv7 B: all c : Class, t : Teacher | (#t.(c.Groups)) > 0
inv7 T: all c : Class | some Person.(c.Groups) in Teacher
inv7 T: some Person.(Class.Groups) in Teacher
inv7 B: all c : Class | #Person.(c.Groups) > 0
inv7 B: all c : Class | Person.(c.Groups) in Teacher
inv7 B: all c : Class | some Teacher.(c.Groups)
inv7 B: all c : Class | lone Teacher.(c.Groups)
inv7 B: all c : Class |  #Teacher.(c.Groups) > 0
inv7 B: all c : Class | #Person.(c.Groups) > 0
inv7 B: all c : Class | Person.(c.Groups) in Teacher
inv7 B: all c : Class | no Teacher.(c.Groups)
inv7 B: all c : Class | one Teacher.(c.Groups)
inv7 B: all c : Class | some Teacher.(c.Groups)
inv5 O: some t : Teacher | t in Person.(Class.Groups)
inv6 C: all t : Teacher | #t.Teaches > 0
inv6 C: all t : Teacher | #t.Teaches > 0
inv8 C: all t : Teacher | #t.Teaches >= 0 && #t.Teaches <= 1
inv8 C: all t : Teacher | #t.Teaches >= 0 && #t.Teaches <= 1
inv9 B: all c : Class | #Teacher.(c.Groups) < 1
inv9 B: all c : Class | #Teacher->(c.Groups) < 1
inv9 B: all c : Class | #Teacher.(c.Groups) < 1
inv9 B: all c : Class | #Teacher.(c.Groups) <= 1
inv10 T: all c : Class | #Student.c.Groups > 0
inv10 B: all c : Class | #Student.(c.Groups) > 0
inv10 T: all c : Class | all p : c.Groups | #Group.(p.(c.Groups)) > 0
inv10 T: all c : Class | all p : Person.(c.Groups) | #Group.(p.(c.Groups)) > 0
inv13 S: no Student.Teaches && no Teachers.Tutors
inv11 E: 
inv11 E: 
inv11 E: 
inv11 E: 
inv11 E: 
inv11 E: 
inv9 B: all c : Class | #Teacher.(c.Groups) <= 1
inv9 B: all c : Class | #Teacher.(c.Groups) = 1
inv9 T: all c : Class | #(Person.(c.Groups) in Teacher) <= 1
inv9 T: all c : Class | one Person.(c.Groups) in Teacher
inv9 T: all c : Class | some Person.(c.Groups) in Teacher
inv9 T: all c : Class | all p : Person.(c.Groups) | some p in Teacher

