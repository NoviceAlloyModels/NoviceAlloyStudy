NA H: THEME UPDATE
inv1 C: all p : Person | p in Student
inv2 C: all p : Person | p not in Teacher
inv3 C: all p : Person | p in Student => p not in Teacher || p in Teacher => p not in Student
inv4 C: all p : Person | p not in Student => p in Teacher || p not in Teacher => p in Student
inv5 C: some c : Class, t : Teacher | c in t.Teaches
inv5 C: some c : Class, t : Teacher | c in t.Teaches
inv6 C: all t : Teacher | some c : Class | c in t.Teaches
inv4 C: all p : Person | p in Student || p in Teacher
inv7 C: all c : Class | some t : Teacher | t->c in Teaches
inv8 T: all t : Teacher, c, c1 : Class | t->c in Teaches & t->c1 in Teaches => c = c1
inv8 T: all t : Teacher, c, c1 : Class | t->c in Teaches & t->c1 in Teaches => c in c1
inv8 O: all t : Teacher, c, c1 : Class | (t->c + t->c1) in Teaches => c != c1
inv8 C: all t : Teacher, c, c1 : Class | (t->c + t->c1) in Teaches => c = c1
inv9 O: all c : Class | lone c->Teacher
inv9 O: all c : Class | lone c->Teaches
inv9 O: all c : Class | lone c->Teacher
inv9 S: all c : Class, t, t1 : Teacher | (t->c + t->c1) in Teaches => t = t1
inv9 C: all c : Class, t, t1 : Teacher | (t->c + t1->c) in Teaches => t = t1
inv9 C: all c : Class, t, t1 : Teacher | t->c + t1->c in Teaches => t = t1
inv10 T: all c : Class, s : Student | some g : Group | c->g->s
inv10 C: all c : Class, s : Student | some g : Group | c->s->g in Groups
inv11 B: all c : Class | some t : Teacher | 	  		t->c in Teaches => (some p : Person, g : Group | c->p->g in Groups)
inv11 O: all c : Class | some t : Teacher | 	  		t->c in Teaches <=> (some p : Person, g : Group | c->p->g in Groups)
inv11 B: all c : Class | some t : Teacher | 	  		t->c not in Teaches => (some p : Person, g : Group | c->p->g not in Groups)
inv11 B: all c : Class | some t : Teacher | t->c not in Teaches => (some p : Person, g : Group | c->p->g not in Groups)
inv11 B: all c : Class | lone t : Teacher | 	  		t->c not in Teaches => (some p : Person, g : Group | c->p->g not in Groups)
inv11 B: all c : Class | some t : Teacher | 	  		t->c in Teaches => (some p : Person, g : Group | c->p->g in Groups)
inv11 O: all c : Class | some t : Teacher | 	  		t->c in Teaches <=> (some p : Person, g : Group | c->p->g in Groups)
inv11 B: all c : Class | some t : Teacher | 	  		t->c in Teaches => (some p : Person, g : Group | c->p->g in Groups)
inv11 B: all c : Class | some t : Teacher | 	  		t->c in Teaches => (some p : Person, g : Group | c->p->g not in Groups)
inv11 B: all c : Class | some t : Teacher | 	  		t->c in Teaches => (some p : Person, g : Group | c->p->g in Groups)
inv12 B: all t : Teacher | some c : Class, g : Group | c->t->g in Groups
inv12 B: all t : Teacher, c : Class | some g : Group | c->t->g in Groups
inv12 C: all t : Teacher | some c : t.Teaches | some c.Groups
inv12 B: all t : Teacher | all c : t.Teaches | some c.Groups
inv12 C: all t : Teacher | some c : t.Teaches | some c.Groups
inv11 B: all c : Class | some t : Teaches.c | (some p : Person, g : Group | c->p->g in Groups)
inv11 B: all c : Class | some t : Teacher | 	  		t->c in Teaches => (some p : Person, g : Group | c->p->g in Groups)
inv12 C: all t : Teacher | some c : t.Teaches | some c.Groups
inv13 B: all t : Teacher, s : Student | s in t.Tutors
inv13 T: all t : Teacher, s : Student | s in t.Tutors & t in Tutors.Person
inv13 T: all p : Person, t : Teacher, s : Student | s in t.Tutors & t in Tutors.p
inv13 B: all p : Person, t : Teacher, s : Student | s in t.Tutors and t in Tutors.p
inv13 B: all p : Person, t : Teacher, s : Student | s in p.Tutors and t in Tutors.p
inv13 B: all p : Person, t : Teacher, s : Student | t not in p.Tutors and t in Tutors.p
inv13 B: all p : Person, t : Teacher, s : Student | t not in p.Tutors and s not in Tutors.p
inv13 B: all p : Person, t : Teacher | p->t not in Tutors
inv13 T: all p : Person, t : Teacher | t->p in Tutors => t in Teacher & p in Student
inv13 U: all p : Person, t : Teacher | t->p in Tutors => t in Teacher and p in Student
inv13 B: all p : Person, t : Teacher | p->t in Tutors => t in Teacher and p in Student
inv13 U: all p : Person, t : Teacher | p->t in Tutors => p in Teacher and t in Student
inv13 U: all p : Person, t : Teacher | p->t in Tutors => p in Teacher && t in Student
inv13 C: all p : Person, t : p.Tutors | p->t in Tutors => p in Teacher && t in Student
inv13 C: all p : Person, t : p.Tutors | p in Teacher && t in Student
inv13 O: all p : Person | p in Teacher && p.Tutors in Student
inv13 C: all p : Person, t : p.Tutors | p in Teacher && p.Tutors in Student
inv13 C: all p : Person, t : p.Tutors | p in Teacher && p.Tutors in Student
inv13 O: all p : Person | p in Teacher && p.Tutors in Student
inv13 C: all p : Person, t : p.Tutors | p in Teacher && t in Student
inv14 T: all c : Class, s : c->Student, t : Teaches.c | s in t.Tutors
inv14 T: all c : Class, s : c.Groups, t : Teaches.c | s in t.Tutors
inv14 U: all c : Class, s : c.Groups.Person, t : Teaches.c | s in t.Tutors
inv14 U: all c : Class, s : c.Groups.Student, t : Teaches.c | s in t.Tutors
inv14 T: all c : Class, g : Group, s : c->Student->g, t : Teaches.c | s in t.Tutors
inv14 T: all c : Class, g : Group, s : c.Student, t : Teaches.c | s in t.Tutors
inv14 T: all c : Class, s : c.Student, t : Teaches.c | s in t.Tutors
inv14 T: all c : Class, s : c.Student, t : Teaches.c | s in t.Tutors
inv14 T: all c : Class, s : Student, t : Teaches.c | some g : Group | 	  		c->s->g in Groups & s in t.Tutors
inv14 B: all c : Class, s : Student, t : Teaches.c | some g : Group | 	  		c->s->g in Groups && s in t.Tutors
inv14 B: all c : Class, s : Student, t : Teaches.c | some g : Group | 	  		c->s->g in Groups => s in t.Tutors
inv14 B: all c : Class, s : Student, t : Teaches.c | some g : Group | s in t.Tutors
inv14 T: all c : Class, s : Groups.Group, t : Teaches.c | some g : Group | s in t.Tutors
inv11 T: all c : Class | some t : Teacher | no (t->c in Teaches) => no c.Groups
inv11 B: all c : Class | some t : Teacher | (t->c in Teaches) => no c.Groups
inv11 B: all c : Class | some t : Teacher | t->c in Teaches => no c.Groups
inv11 O: all c : Class | some t : Teacher | no (t->c & Teaches) => no c.Groups
inv11 T: all c : Class | some t : Teacher | no (t.Teaches.c) => no c.Groups
inv11 O: all c : Class | some t : Teacher | no (t <: Teaches).c => no c.Groups
inv11 C: all c : Class | no (Teacher <: Teaches).c => no c.Groups
inv11 C: all c : Class | no (Teacher <: Teaches).c => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t.Teaches).c => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teaches) => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teacher.Teaches) => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teacher->Teaches) => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teacher.Teaches) => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teacher->Teaches) => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teaches) => no c.Groups
inv11 B: all c : Class, t : Teacher | t->c in Teaches => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teaches) => no c.Groups
inv11 B: all c : Class, t : Teacher | t->c not in Teaches => no c.Groups
inv11 B: all c : Class, p : Person | p->c not in Teaches => no c.Groups
inv11 B: all c : Class, t : Teacher | t->c not in Teaches => no c.Groups
inv11 O: all c : Class | some t : Teacher | t->c not in Teaches => no c.Groups
inv11 B: all c : Class, t : Teacher | t->c not in Teaches => no c.Groups

