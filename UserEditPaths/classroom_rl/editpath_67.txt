NA H: THEME UPDATE
inv1 C: Person in Student
inv2 C: no Teacher
inv3 C: no Student & Teacher
inv4 T: Person & Student + Teacher
inv4 T: Person & (Student + Teacher)
inv4 C: Person in (Student + Teacher)
inv4 C: Person in Student + Teacher
inv5 U: some Teaches.Class
inv5 T: some Teacher.Teaches.Class
inv5 C: some Teacher.Teaches
inv6 B: some Teacher.Teaches
inv6 T: Teacher.Teaches
inv6 C: all t : Teacher | some t.Teaches
inv7 O: some Class.Teaches
inv7 B: some Teaches.Class
inv7 U: all c : Class | some Teaches.c
inv7 T: all c : Class | some Teacher.Teaches.c
inv7 U: all c : Class | some Teacher->c
inv7 B: all c : Class | #Teacher->c > 1
inv7 C: Class in ~Teaches.Teacher
inv6 T: some Class in ~Teaches.Teacher
inv6 B: Class in ~Teaches.Teacher
inv6 B: Class in Teacher.Teaches
inv6 C: Teacher in Class.~Teaches
inv6 C: Teacher in Teaches.Class
inv6 C: Teacher in Class.~Teaches	  	Teacher in Teaches.Class
inv7 C: Class in ~Teaches.Teacher
inv8 C: all t : Teacher | lone t.Teaches
inv8 T: lone Teacher in Teaches.Class
inv8 B: lone Teacher & Teaches.Class
inv8 B: lone (Teacher & Teaches.Class)
inv8 B: one (Teacher & Teaches.Class)
inv8 B: lone (Teacher & Teaches.Class)
inv6 T: Teacher in Class.~Teaches	  	Teacher & Teaches.Class
inv8 B: #(Teacher & Teaches.Class) <= 1
inv8 O: #(Teacher & Teaches.Class) < 1
inv9 O: all c : Class | lone Teaches.c
inv9 O: all c : Class | lone Teacher->c
inv9 C: (Teacher <: Teaches).~(Teacher <: Teaches) in iden
inv9 C: let t = Teacher <: Teaches | t.~t in iden
inv8 O: let c = ~Teaches | c.~c in iden
inv8 T: let c = Teacher :> ~Teaches | c.~c in iden
inv8 T: let c = Teacher :> (~Teaches) | c.~c in iden
inv8 C: let c = (~Teaches) :> Teacher | c.~c in iden
inv8 C: let c = ~Teaches :> Teacher | c.~c in iden
inv10 C: Class->Student in Groups.Group
inv13 B: Student in Person.Tutors and Teacher in Tutors.Person
inv13 B: Student in Teacher.Tutors and Teacher in Tutors.Person
inv13 B: Student in Teacher.Tutors and Teacher in Tutors.Student
inv13 B: Student in Teacher.Tutors and Teacher in Tutors.Person
inv13 B: Teacher in Person.Tutors and Student in Tutors.Person
inv13 B: Person.Tutors in Teacher and Tutors.Person in Student
inv13 C: Person.Tutors in Student and Tutors.Person in Teacher
inv13 T: Person.Tutors in Student and Teacher.Tutors.Person
inv13 C: Person.Tutors in Student and Tutors.Person in Teacher
inv12 U: all t : Teacher | some Class.Groups->t
inv12 B: all t : Teacher | #Class.Groups->t > 0
inv12 B: some Teacher.Teaches.Groups
inv12 C: all t : Teacher | some t.Teaches.Groups
inv12 T: some (Teacher & Teaches.Groups)
inv12 T: #(Teacher & Teaches.Groups) > 1
inv12 T: #(Teacher & Teaches.Groups) > 1
inv12 C: all t : Teacher | some t.Teaches.Groups
inv11 U: all c : Class | #c.Groups.Teacher > 0 => (some p : Person, g : Group | c->p->g in Groups)
inv11 U: all c : Class | #c.Groups.Teacher > 0 => (some p : Person, g : Group | c->p->g in Groups)
inv11 T: all c : Class | #c.Teacher.Groups > 0 => (some p : Person, g : Group | c->p->g in Groups)
inv11 C: all c : Class | no (Teacher <: Teaches).c => no c.Groups

