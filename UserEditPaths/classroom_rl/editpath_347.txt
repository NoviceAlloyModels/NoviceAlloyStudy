NA H: THEME UPDATE
inv1 C: Person = Student
inv2 S: No Teacher
inv2 C: no Teacher
inv2 C: Teacher = none
inv3 C: no Teacher & Student
inv4 C: Person = Teacher+Student
inv5 C: some Teacher.Teaches
inv6 S: all Teacher.Teaches
inv6 T: all t:Teacher | t.Teaches
inv6 T: all t:Teacher | t.Teaches
inv6 C: all t:Teacher | some t.Teaches
inv7 U: all c:Class | some Teaches.c
inv7 C: all c:Class | some Teacher.Teaches:>c
inv8 C: all t:Teacher | lone t.Teaches
inv9 U: all c:Class | lone Teacher.Teaches:>c
inv9 O: all c:Class | lone Teaches.c
inv9 O: all c:Class | lone Teaches:>c
inv9 B: all c:Class | one Teacher.Teaches:>c
inv9 O: all c:Class | lone Teaches.c
inv9 C: all c:Class | lone Teaches.c:>Teacher
NA H: THEME UPDATE
inv10 S: all c.Class,s:Student | c.Group.s
inv10 S: all c.Class,s:Student | s.Group :> c.Groups
inv9 C: all c:Class | lone Teaches.c:>Teacher
inv1 C: Person = Student
inv10 C: all c:Class,s:Student | some s <: c.Groups
inv12 B: all t:Teacher | some t <: Class.Groups
inv12 B: all t:Teacher | some t <: Class.Groups
inv11 C: all c:Class | some c.Groups implies (some Teacher <: Teaches.c)
inv13 T: all t:Tutors | Teacher.t.Student
inv13 C: all t,s:Person | t->s in Tutors implies t in Teacher and s in Student
NA H: THEME UPDATE
inv12 B: all t:Teacher | some t <: Class.Groups
inv11 C: all c:Class | some c.Groups implies (some Teacher <: Teaches.c)
inv12 T: all t:Teacher | t.Teaches.Groups
inv12 C: all t:Teacher | some t.Teaches.Groups
inv13 T: all t,s:Person | Tutors.s:>t implies t in Teacher and s in Student
inv13 T: all t,s:Person | Tutors.s:>t implies t in Teacher and s in Student
inv13 C: all t,s:Person | some Tutors.s:>t implies t in Teacher and s in Student
inv13 S: all t,s:Person | all Tutors.s:>t implies t in Teacher and s in Student
inv13 C: all t,s:Person | some Tutors.s:>t implies t in Teacher and s in Student
inv14 T: all s:Person,c:Class | (some c<:Groups.s) implies (all t:Person | some Teaches.c:>t implies Tutors.s:>t)
inv14 T: all s:Person,c:Class | (some s<:c.Groups) implies (all t:Person | some Teaches.c:>t implies Tutors.s:>t)
inv14 T: all s:Person,c:Class | (some s<:c.Groups) implies no((Teaches & Teaches.c) - (Tutors.s))
inv14 T: all s:Person,c:Class | some (c<:Groups.s) implies (all t:Person | some Teaches.c:>t implies Tutors.s:>t)
inv14 U: all s:Person,c:Class | some (s<:c.Groups) implies no((Teacher & Teaches.c)-(Tutors.s))
inv14 U: all s:Person,c:Class | some (s<:c.Groups) implies no((Teacher & Teaches.c) - (Tutors.s) )
inv14 U: all s:Student,c:Class | some (s<:c.Groups) implies no((Teacher & Teaches.c) - (Tutors.s) )

