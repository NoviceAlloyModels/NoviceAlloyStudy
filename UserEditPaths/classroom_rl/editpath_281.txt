NA H: THEME UPDATE
inv2 T: none Teacher
inv2 C: Teacher = none
inv1 C: Person = Student
inv3 C: Student & Teacher = none
inv4 C: Student + Teacher = Person
inv5 S: Teacher.Teaches = some
inv5 C: some Teacher.Teaches
inv2 T: none Teacher
inv2 C: Teacher = none
inv4 C: Student + Teacher = Person
inv5 C: some Teacher.Teaches
inv6 C: all t : Teacher | some t.Teaches
inv7 C: all c : Class | c in Teacher.Teaches
inv8 C: all t : Teacher | lone t.Teaches
inv9 C: all c : Class, disj t1,t2 : Teacher | not c in (t1.Teaches & t2.Teaches)
inv8 C: all t : Teacher | lone t.Teaches
inv9 C: all c : Class, disj t1,t2 : Teacher | not c in (t1.Teaches & t2.Teaches)
inv9 S: c : Class, disj t1,t2 : Teacher | not c in (t1.Teaches & t2.Teaches)
inv9 S: all c : Class, all disj t1,t2 : Teacher | not c in (t1.Teaches & t2.Teaches)
inv9 C: all c : Class, disj t1,t2 : Teacher | not c in (t1.Teaches & t2.Teaches)
inv10 T: all g : Class.Groups | g.Person in Student implies g.Group
inv10 T: all g : Class.Groups | g.Person in Student implies g.Group
inv9 C: all c : Class, disj t1,t2 : Teacher | not c in (t1.Teaches & t2.Teaches)
inv10 S: all c : Class | all s: Student  |  s->g in c.Groups
inv10 B: all c : Class | all s: Student | all g: Group |  s->g in c.Groups
inv10 B: all c : Class | some s:Student, g: Group |  s->g in c.Groups
inv10 B: all c : Class | one s:Student, g: Group |  s->g in c.Groups
inv10 B: all c : Class | all p:Person, g: Group |  p in Student implies p->g in c.Groups
inv10 O: all c : Class | all p:Person | one g: Group |  p in Student implies p->g in c.Groups
inv10 O: all c : Class | all p:Person | one g: Group |  p in Student implies p->g in c.Groups
inv10 B: all c : Class | all p:Person | all g: Group |  p in Student implies p->g in c.Groups
inv10 T: all c : Class | all s:Student | one g : c.Groups  |  s-> g in c.Groups
inv10 T: all c : Class | all p: Person | one g : c.Groups  | p in Student implies p-> g in c.Groups
inv10 T: Student -> one Group
inv10 T: all c : Class | all p: Person | one g : c.Groups  | p in Student implies p->g in c.Groups
inv10 T: all c : Class | all p: Person | one g : c.Groups  | p in Student implies p->g in c.Groups
inv10 T: all c : Class | all p: Person | one g : c.Groups  | p in Student implies p->g in c.Groups
inv10 T: all c : Class | all p: Person | all g : c.Groups  | p in Student implies p->g in c.Groups
inv10 T: all c : Class | all p: Person | all g : c.Groups  | p in Student implies p->g in c.Groups
inv10 T: all c : Class | all p: Person | all g : Groups  | p in Student and g in c.Groups implies p->g in c.Groups
inv10 O: all c : Class | all p: Person | one g : Group  | p in Student implies p->g in c.Groups
inv10 O: all c : Class | all s: Student | one g : Group  |  s->g in c.Groups
inv10 B: all c : Class | all s: Student | all g : Group  |  s->g in c.Groups
inv10 O: all c : Class | all s: Student | one g : Group  |  s->g in c.Groups
inv10 B: all c : Class | some s: Student | one g : Group  |  s->g in c.Groups
inv10 O: all c : Class | all s: Student | one g : Group  |  s->g in c.Groups
inv10 O: all c : Class | all p: Person | one g : Group  |  p in Student implies p->g in c.Groups
inv10 U: all c : Class | all s: Student | s<:c.Groups in c.Groups
inv10 S: all c : Class |  s: Student | s<:c.Groups in c.Groups
inv10 B: all c : Class |  some s: Student | s<:c.Groups in c.Groups
inv11 T: all c : Class  | c.Groups iff c in  Teacher.Teaches
inv11 T: all c : Class  | c.Groups iff c in  Teacher.Teaches
inv11 T: all c : Class  | c.Groups iff c in  Teacher.Teaches
inv11 T: all c : Class  |  c not in   Teacher.Teaches =>  none c.Groups
inv11 T: all c : Class  |  c not in  Teacher.Teaches => not  c.Groups
inv11 B: all c : Class  | c not in  Teacher.Teaches
inv11 S: all c : Class  | c.groups in  Teacher.Teaches
inv11 S: all c : Class  | some c.Groups | c  in  Teacher.Teaches
inv11 O: all c : Class  | c  in  Teacher.Teaches
inv11 S: Class not in Teacher.Teaches => Class.Groups = empty
inv11 T: Class not in Teacher.Teaches => Class.Groups = none
inv11 S: all c : Class | c not in Teacher.Teaches => class.Groups = none
inv11 T: all c : Class | c not in Teacher.Teaches => c.Groups = none
inv11 T: Class not in Teacher.Teaches => Class.Groups = none
inv13 B: Teacher = Person.Tutors and Person.Tutors = Student
inv13 S: all p : Person | all s: Student | student.tutors = empty and person.Tutors in Student
inv13 S: all p : Person | all s: Student | s.tutors = empty and p.Tutors in Student
inv13 S: all p : Person | all s: Student | s.Tutors = empty and p.Tutors in Student
inv13 B: all p : Person | all s: Student | s.Tutors = none and p.Tutors in Student
inv13 S: all p : Person | some p.Tutors implies p in Teachers  and p.Tutors in Student
inv13 C: all p : Person | some p.Tutors implies p in Teacher  and p.Tutors in Student
inv12 S: all t : Teacher | some groups in t.Teaches
inv12 S: all t : Teacher | some groups in t.Teaches
inv12 T: all t : Teacher | some Groups in t.Teaches
inv12 T: all t : Teacher | some Group in t.Teaches
inv12 C: all t : Teacher | some t.Teaches.Groups
inv10 E: 
inv11 U: all c: Class | some c.Groups implies some Teacher.Teaches
inv11 C: all c: Class | some c.Groups implies c in Teacher.Teaches
inv10 B: all c : Class |  one s:Student | one g:Group |  s->g in c.Groups
inv10 B: all c : Class |  some s:Student | one g:Group | s->g in c.Groups
inv10 T: all c : Class |  Student<:c.Groups ->  Group:>c.Groups in c.Groups
inv10 T: all c : Class |  one Student<:c.Groups -> one Group:>c.Groups in c.Groups

