NA H: THEME UPDATE
inv1 C: Person = Student
inv2 S: No Teacher
inv2 C: no Teacher
inv2 C: Teacher = none
inv3 C: no Teacher & Student
inv4 C: Person = Teacher+Student
inv5 C: some Teacher.Teaches
inv6 S: all Teacher.Teaches
inv6 T: all t:Teacher | t.Teaches
inv6 T: all t:Teacher | t.Teaches
inv6 C: all t:Teacher | some t.Teaches
inv7 U: all c:Class | some Teaches.c
inv7 C: all c:Class | some Teacher.Teaches:>c
inv8 C: all t:Teacher | lone t.Teaches
inv9 U: all c:Class | lone Teacher.Teaches:>c
inv9 O: all c:Class | lone Teaches.c
inv9 O: all c:Class | lone Teaches:>c
inv9 B: all c:Class | one Teacher.Teaches:>c
inv9 O: all c:Class | lone Teaches.c
inv9 C: all c:Class | lone Teaches.c:>Teacher
NA H: THEME UPDATE
inv10 S: all c.Class,s:Student | c.Group.s
inv10 S: all c.Class,s:Student | s.Group :> c.Groups
inv9 C: all c:Class | lone Teaches.c:>Teacher
inv1 C: Person = Student
inv10 C: all c:Class,s:Student | some s <: c.Groups
inv12 B: all t:Teacher | some t <: Class.Groups
inv12 B: all t:Teacher | some t <: Class.Groups
inv11 C: all c:Class | some c.Groups implies (some Teacher <: Teaches.c)
inv13 T: all t:Tutors | Teacher.t.Student
inv13 C: all t,s:Person | t->s in Tutors implies t in Teacher and s in Student
NA H: THEME UPDATE
inv12 S: all t:Teacher | some c.Class | t.Teaches:>c implies c.Person.Group:>Groups
inv12 E: 
inv2 C: Teacher = none
inv1 C: Person = Student
inv3 C: no Teacher & Student
inv4 C: Person = Teacher+Student
inv5 C: some Teacher.Teaches
inv6 C: all t:Teacher | some t.Teaches
inv7 C: all c:Class | some Teacher.Teaches:>c
inv8 C: all t:Teacher | lone t.Teaches
inv9 C: all c:Class | lone Teaches.c:>Teacher
inv10 C: all c:Class,s:Student | some s <: c.Groups
inv11 C: all c:Class | some c.Groups implies (some Teacher <: Teaches.c)
inv13 C: all t,s:Person | t->s in Tutors implies t in Teacher and s in Student
inv12 T: all t:Teacher | some t.Teaches.Class implies (some Person <: Class.Groups)
inv12 T: all t:Teacher | some c:Class | t <: Teaches.c implies (some Person <: c.Groups)
inv12 T: all t:Teacher | some c:Class | t.Teaches.c implies (some Person <: c.Groups)
inv13 C: all t,s:Person | t->s in Tutors implies t in Teacher and s in Student
inv12 T: all t:Teacher | some c:Class | Teaches.c:>t implies (some Person <: c.Groups)
inv12 T: all t:Teacher | t.Teaches implies (some Person <: Class.Groups)
inv12 T: all t:Teacher | some c:Class | t.Teaches implies (some Person <: c.Groups)
inv12 T: all t:Teacher | some c:Class | t.Teaches.c implies (some Person <: c.Groups)
inv13 C: all t,s:Person | t->s in Tutors implies t in Teacher and s in Student
inv12 C: all t:Teacher | some t.Teaches.Groups
inv12 T: all t:Teacher | some c:Class | t.Teaches implies (some Person <: c.Groups)
inv12 T: all t:Teacher | some c:Class | t.Teaches:>c implies (some Person <: c.Groups)
inv12 T: all t:Teacher | some c:Class | c <: t.Teaches implies (some Person <: c.Groups)
inv12 U: all t:Teacher | some c:Class | c in t.Teaches implies (some Person <: c.Groups)
NA H: THEME UPDATE
inv12 C: all t:Teacher | some t.Teaches.Groups
inv12 C: all t:Teacher | some t.Teaches.Groups
inv13 B: all s:Student,c:Class | some ( s<:c.Groups ) implies no((Teacher & Teaches.c)-(Tutors.s))
inv13 C: all t,s:Person | some Tutors.s:>t implies t in Teacher and s in Student
inv14 U: all s:Student,c:Class | some ( s<:c.Groups ) implies no((Teacher & Teaches.c)-(Tutors.s))
inv15 S: all p:Person | some Tutors.p implies (Teacher in Tutors^.p)
inv15 B: all p:Person | some Tutors.p implies (Teacher in ^Tutors.p)
inv15 U: all p:Person | some Tutors.p implies (some t:Teacher | t in ^Tutors.p)
inv15 B: all p:Person | some Tutors.p implies (Teacher in ^Tutors.p)
inv15 T: all p:Person | some Tutors.p implies (^Tutors.p:>Teacher)
inv15 T: all p:Person | some Tutors.p implies (Teacher<:^Tutors.p)
inv15 B: all p:Person | some Tutors.p implies (Teacher in ^Tutors.p)
inv15 U: all p:Person | some Tutors.p implies not ((Teacher & ^Tutors.p)= none)
inv15 C: all p:Person | some Teacher <: (p.^~Tutors)
NA H: THEME UPDATE

