NA H: THEME UPDATE
inv1 C: Trash = none
inv1 C: all t : univ | t not in Trash
inv1 O: all t : univ | t in Trash
inv2 C: all f : File | f in Trash
inv1 C: Trash = none
inv3 C: some s : File | s in Trash
inv4 C: all u : univ | u in Protected implies u not in Trash
inv5 S: all v : File
inv5 S: all v : File
inv5 S: all v : File
inv4 C: all u : univ | u in Protected implies u not in Trash
inv4 C: all u : File | u in Protected implies u not in Trash
inv5 S: all v : File | u not in Protected implies v in Trash
inv5 C: all v : File | v not in Protected implies v in Trash
inv6 T: all l : File | l lone link.f
inv6 B: all l : File | lone link.l
inv6 C: all f,f1,f2 : univ | f->f1 in link and f->f2 in link implies f1=f2
inv7 O: all l1,l2 : File | l1->l2 in link implies (l1 not in Trash and l2 not in Trash)
inv7 S: link = some
inv7 S: f1.link.f2 = some
inv7 S: all f1,f2 : univ | f1->f2 in link implies link = some
inv8 S: all f1,f2 : univ | f1->f2 in not link
inv8 S: all f1,f2 : univ | f1->f2 in not link
inv8 C: all f1,f2 : univ | f1->f2 not in link
inv9 O: all f1,f2,f3 : univ | f1->f2 in link implies (f1->f3 not in link and f2->f3 not in link)
inv9 S: all f1,f2,f3 : univ | (f1->f2)-> not in link
inv9 T: all f1,f2,f3 : univ | (f1->f2)->f3 not in link
inv9 E: 
NA H: THEME UPDATE

