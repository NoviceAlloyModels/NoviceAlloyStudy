NA H: THEME UPDATE
inv1 C: all s:State | some s. trans
inv2 C: one Init
inv3 T: all e:Event| some e.~trans
inv3 T: all e:Event| lone e.~State.trans
inv3 T: all e:Event| lone e.State.trans
inv3 O: all e:Event| lone e.(State.trans)
inv3 C: all e:Event, s:State| lone e.(s.trans)
inv4 T: all s:State | s in Init.^trans
inv4 T: all s:State, i:Init | s in i.^trans
inv4 T: all s:State, i:Init | s in i.^trans
inv4 T: all s:State, i:Init | s in i.trans
inv4 B: all s:State, i:Init | s in (i.trans).State
inv4 B: all s:State, i:Init | s in State.(i.trans)
inv4 T: all s:State, i:Init | s in (i.trans)->State
inv4 T: all s:State, i:Init | s in State->(i.trans)
inv4 T: all s:State, i:Init | s in (i.trans)
inv4 S: all s:State, i:Init |  some (i.^trans :< s )
inv4 T: all s:State, i:Init |  some (i.^trans :> s )
inv4 T: all s:State, i:Init |  i.^(s.trans)
inv4 B: all s:State, i:Init |  some i.^(s.trans)
inv4 B: all s:State, i:Init |  some (i.^(s.trans))
inv4 B: all s:State, i:Init |  some (Event.^(i.trans))
inv4 S: all s1 : State |
inv4 S: all s1 : State |  ^(Init.trans).s
inv4 T: all s1 : State |  ^(Init.trans).s1
inv4 T: all s1 : State |  ^(Init.trans)
inv4 T: all s1 : State |  (Init.trans)
inv4 T: all s1 : State |  (Init.trans)
inv4 T: all s1 : State |  (Init.Event)
inv4 T: all s1 : State |  (Init->Event)
inv4 T: all s1 : State |  (Init->Event) in trans
inv4 T: all s1 : State |  s1.(Init->Event) in trans
inv4 T: all s1 : State |  s1.(Init->Event) in s1.trans
inv6 C: Event = (State.trans).State
inv4 O: all s1 : State |  some (Init.trans).s1
inv4 O: all s1 : State |  one (Init.trans).s1
inv4 B: all s1 : (State-Init) |  one (Init.trans).s1
inv4 B: all s1 : (State-Init) |  some (Init.trans).s1
inv3 C: all e:Event, s:State| lone e.(s.trans)
inv4 O: all s1 : State |  some (^(Init.trans)).s1
inv4 T: all s1 : State |  some ((Init.trans)).^s1
inv4 T: all s1 : State |  some ((Init.^trans)).s1
inv4 O: all s1 : State |  some ((Init.trans)).s1
inv5 T: all s:State | Event.(s.trans)
inv5 E: 
inv5 T: all s:State | Event.(s.trans)
inv5 T: all s:State | Event->(s.trans)
inv5 T: all s:State | Event.(s.trans)
inv5 T: all s:State | (s.trans)->Event
inv5 T: all s:State | (s.trans).Event
inv6 C: Event = (State.trans).State
inv7 E: 
inv7 T: all s1:State | Init in (s1.trans)
inv7 O: all s1:State | Init in (s1.trans).State
inv4 O: all s1 : State |  some ((Init.trans)).s1

