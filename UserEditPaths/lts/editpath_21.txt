NA H: THEME UPDATE
inv1 C: all s: State | some s.trans
inv2 C: one Init
inv3 O: all s: State | lone Event.(s.trans)
inv3 C: all s: State, e: Event | lone e.(s.trans)
inv3 T: all s: State, e: Event | lone s.trans.~e
inv3 S: all s: State, e: Event | lone s.trans~.e
inv3 S: all s: State, e: Event | lone I e.~s.trans
inv3 S: all s: State, e: Event | lone I e.(s.trans)
inv3 C: all s: State, e: Event | lone e.(s.trans)
inv3 U: all s: State, e: Event | lone e.~(s.trans)
inv3 C: all s: State, e: Event | lone ~(s.trans).e
inv3 C: all s: State, e: Event | lone e.(s.trans)
inv4 T: all s: State | s.^Init
inv4 S: all s: State |
inv4 E: 
inv4 T: all s: State | Init.^function	}		/*	All the states have the same events available.	*/	fun function: State->State {	  {s1, s2: State | s1->Event->s2 in trans}
inv4 S: all s: State | Init^.function
inv4 T: all s: State | Init.^function	}		/*	All the states have the same events available.	*/	fun function: State->State {	  {s1, s2: State | s1->Event->s2 in trans}
inv4 S: Init.^function in State
inv4 S: State = Init.^function
inv4 S: all s: State | Init.^function[s]	}		/*	All the states have the same events available.	*/	fun function[s: State]: State->State {	  {s1, s2: State | s1->Event->s2 in trans}
inv4 S: all s: State | Init.^function(s)	}		/*	All the states have the same events available.	*/	fun function(s: State): State->State {	  {s1, s2: State | s1->Event->s2 in trans}
inv4 S: State in Init.^function
inv5 C: all s1,s2: State | s1.trans.State = s2.trans.State
inv6 B: all e: Event | lone e.(State.trans)
inv6 C: all e: Event | some e.(State.trans)
inv6 C: State.trans.State = Event
inv7 S: all r : (Init.^function) | Init in r.^function
inv7 S: all r : (Init.^function) | Init in r.^function
inv7 T: all r : (Init.^function) | some Init in r.^function	}		fun function: State->State {	  	  {s1, s2: State | some (s1.trans).s2}
inv7 T: all r : (Init.^function) | lone Init in r.^function	}		fun function: State->State {	  	  {s1, s2: State | some (s1.trans).s2}
inv7 S: all r : (Init.^function) | all i: Init | i in r.^function
inv7 S: all i: Init, r : (i.^function) | i in r.^function
inv7 T: all i: Init, r : (i.^function) | some i in r.^function	}		fun function: State->State {	  	  {s1, s2: State | some (s1.trans).s2}
inv7 S: some i: Init, r : (i.^function) | i in r.^function
inv7 S: all i: Init, r : (i.^function) | i in r.^function
inv7 S: all r : (Init.^function) | some Init & r.^function

