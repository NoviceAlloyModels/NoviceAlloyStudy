NA H: THEME UPDATE
inv2 C: one Init
inv1 B: some State.trans
inv1 B: some (State.trans & (Event->State))
inv1 B: some (State.trans & (Event->State))
inv1 T: State = trans.(Event->State)
inv1 O: State = trans.Event.State
inv1 C: State = trans.State.Event
inv6 C: Event in State.trans.State
inv5 T: {state: State, event: Event | some event.(state.trans)}.~{state: State, event: Event | some event.(state.trans)} = univ
inv5 O: {state: State, event: Event | some event.(state.trans)}.~{state: State, event: Event | some event.(state.trans)} = univ->univ
inv7 B: all s: Event.(State.trans) | s in ^{x,y: State | some x.trans.y}.s
inv7 O: all s: Event.(State.trans) | s in ^{x,y: State | some x.trans.y}.Init
inv7 B: all s: Event.(State.trans) | Init in ^{x,y: State | some x.trans.y}.s
inv7 B: all s: Event.(State.trans) | s in Init.^{x,y: State | some x.trans.y}
inv5 C: all disj s, ss: State | s.trans.State = ss.trans.State
inv4 C: Init.^{x,y: State | some x.trans.y} = State
inv3 C: all s: State | ~(s.trans).(s.trans) in iden
inv2 C: one Init
inv1 C: trans.State.Event = State
inv7 O: all s: Event.(State.trans) | Init in s.^{x,y: State | some x.trans.y}
inv7 T: all s: Event.(State.trans) | Init in Event.(s.~trans)
inv7 T: all s: Event.(State.trans) | Init in (s.~trans).Event
inv7 T: all s: Event.(State.trans) | Init in (^trans.State.Event)

