NA H: THEME UPDATE
inv5 T: all x, y, z : State | some e : Event | x->y in trans implies y->x in trans
inv5 B: all x, y, z : State | some e : Event | x->e->y in trans implies y->e->x in trans
inv5 T: all x, y : State | some e : Event | some x->e->y in trans
inv5 B: all x, y : State | some e : Event | x->e->y in trans
inv5 O: all x, y : State | some e : Event | x->Event->y in trans
inv5 O: all x, y : State | x->Event->y in trans
inv5 O: all x, y : State, e : Event | x->e->y in trans
inv5 O: all x : State, e : Event | x->e->State in trans
inv5 O: all x : State | x->Event->State in trans
inv5 O: all x : State | x->Event->State in trans
inv5 B: all x : State | some x->Event->State
inv5 B: all x : State | some y : State | some x->Event->y
inv5 S: all x : State | x.trans in Event		/*	Each event is available in at least a state.	*/
inv5 S: all x : State | some x.trans in Event		/*	Each event is available in at least a state.	*/
inv5 T: all x : State | some x.trans in Event
inv5 T: all x : State | x.trans in Event
inv5 T: all x : State | x:>trans in Event
inv5 T: all x : State | x<:trans in Event
inv5 T: all x : State | x.trans in Event
inv5 O: all x : State | Event.(x.trans) in Event
inv5 O: all x : State | Event.(x.trans) in Event
inv5 U: all x : State | (x.trans).Event in Event
inv5 T: all x : State | Event:>(x.trans) in Event
inv5 T: all x : State | Event<:(x.trans) in Event
inv5 O: all x : State | Event.(x.trans) in Event
inv5 T: all x : State | Event.x in Event
inv5 O: all x : State | Event.(x.trans) in Event
inv5 U: all x : State | State.(x.trans) in Event
inv5 U: all x : State | State.(x.trans) in Event
inv5 B: all x : State | some (x.trans)
inv5 B: all x : State | some (x.trans)
inv5 O: all x : State | Event.(x.trans) in Event
inv5 U: all x : State | Event.(trans.x) in Event
inv5 T: all x : State | Event<:(trans.x) in Event
inv5 T: all x : State | Event:>(trans.x) in Event
inv5 T: all x : State | Event.(trans<:x) in Event
inv5 U: all x : State | Event.(trans.x) in Event
inv5 T: all x : State | (trans.x) in Event
inv5 T: all x : State | (trans) in Event
inv5 U: all x : State | (x.trans.x) in Event
inv5 U: all x : State | (x.trans.State) in Event
inv5 T: all x : State | some (x.Event.State)
inv5 B: all x : State | some (x->Event->State)
inv5 U: all x : State, e : Event | some x->e->State
inv5 U: all x : State, e : Event | some State->Event->State
inv5 B: some State->Event->State
inv5 U: all x : State, e : Event | some State->e->State
inv5 U: all x : State, e : Event | some x->e->State
inv5 U: all x : State, e : Event | some x->Event
inv5 U: all x : State, e : Event | some x->e
inv5 B: all x : State | some x->Event
inv5 U: all x : State, e : Event | some x->e->State
inv5 B: some Event
inv5 T: all x : State | some x.Event
inv5 B: all x : State | some x->Event
inv5 U: all x, y : State | some x->Event implies some y->Event
inv5 U: all x, y : State, e : Event | some x->e implies some y->e
inv5 S: all x, y : State | e : Event | some x->e implies some y->e
inv5 B: all x, y : State | some e : Event | some x->e implies some y->e
inv5 U: all x, y : State, e : Event | some x->e implies some y->e
inv5 U: all x, y : State | some x->Event implies some y->Event
inv5 B: all x, y : State | some x->Event
inv5 U: all x, y : State | some x->Event implies some y->Event
inv5 U: all x, y : State | some x->Event implies some y->Event
inv5 B: all x : State | some x->Event
inv5 T: all x : State | x->Event
inv5 T: all x : State | x->Event
inv5 T: all x : State | State in x.trans
inv7 E: 
inv7 E: 
inv7 E: 
inv7 E: 
inv7 E: 
inv7 E: 
inv5 B: all x, y : State | some e : Event | x->e->State in trans implies y->e->State in trans
inv5 U: all x, y : State | x.trans in State.trans
inv5 U: all x : State | x.trans in State.trans
inv5 O: all x : State | x.trans = State.trans
inv5 O: all x : State | State.trans in x.trans
inv5 O: all x : State | State.trans = x.trans
inv5 O: all x : State | State.trans = x.trans
inv5 O: all x : State | x.trans = State.trans
inv5 U: all x : State | x.trans in State.trans
inv5 O: all x : State | x.trans = State.trans
inv5 T: all x : State | some e : Event | x.e->State = State.e->Stat
inv5 T: all x : State | some e : Event | x.e->State = State.e->State
inv5 T: all x : State | some e : Event | x.e->State = State.trans
inv5 O: all x : State | some e : Event | x.trans = State.trans
inv5 O: all x : State | x.trans = State.trans
inv6 E: 
inv5 U: all x : State | x.trans in State.trans
inv5 S: all x : State | State in s->Event
inv5 T: all x : State | State in x->Event
inv5 O: all x : State | State in x<:Event
inv5 O: all x : State | Event in x<:Event
inv5 O: all x : State | State in x:>Event
inv5 O: Event in Event.(State.trans)
inv5 T: Event in Event<:(State.trans)
inv5 T: Event in (State.trans)
inv5 T: Event in (trans)
inv5 T: Event in (trans.Event)
inv5 T: Event in (Event<:trans)
inv5 T: Event in (Event:>trans)
inv5 T: Event in (Event:>State.trans)
inv5 O: Event in (Event.(State.trans))
inv5 O: Event in (State.(State.trans))
inv5 T: all x, y : State | x->y in trans implies y->y in trans
inv5 S: all x, y : State | somne e : Event | x->e->y in trans implies y->e->y in trans
inv5 B: all x, y : State | some e : Event | x->e->y in trans implies y->e->y in trans
inv5 B: all x, y : State | all e : Event | x->e->y in trans implies y->e->y in trans
inv5 U: all x, y : State | all e : Event | some x->e->y implies some y->e->y
inv5 B: all x, y : State | some e : Event | some x->e->y implies some y->e->y
inv5 B: all x, y : State | x->Event->y in trans implies y->Event->y in trans
inv5 B: all x, y : State | x->Event->y in trans implies y->Event->x in trans
inv5 B: all x, y : State | all e : Event | x->e->y in trans implies y->e->y in trans
inv5 O: all x, y : State | all e : Event | x->e->y in trans and y->e->y in trans
inv5 B: all x, y : State | all e : Event | x->e->y in trans implies y->e->y in trans

