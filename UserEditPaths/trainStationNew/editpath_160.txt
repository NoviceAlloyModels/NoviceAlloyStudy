NA H: THEME UPDATE
inv1 S: some j : Juntion | some e : Entry | j in Track and e in Track
inv1 B: some j : Junction | some e : Entry | j in Track and e in Track
inv1 T: some Entry in Track and some Junction in Track
inv1 T: all t : Track | some (t in Junction or t in Entry)
inv1 B: some j : Junction | some e : Entry | j in Track or e in Entry
inv1 B: some j : Junction | some e : Entry | j in Track or e in Track
inv1 S: (all x : Exit | all y : Track | x->y not in succs) and	(all x : Entry | all y : Track | y->x not in succs) and	(all x : Junction | some y,z : Track | y->x in succs and x->z in succs) and	(some x : Track | some y : Track | (y->x in succs and y in Entry) implies (some z : Track | z in Exit and x->z in succs))	}
inv1 B: (all x : Exit | all y : Track | x->y not in succs) and	(all x : Entry | all y : Track | y->x not in succs) and	(all x : Junction | some y,z : Track | y->x in succs and x->z in succs) and	(some x : Track | some y : Track | (y->x in succs and y in Entry) implies (some z : Track | z in Exit and x->z in succs))
inv1 T: (some Junction in Track) and some (Entry in Track)
inv1 S: (some Junction in Track) and some Entry in Track)
inv1 T: (some Junction in Track) and (some Entry in Track)
inv1 T: some t : Track | some Entry in t.^succs or some Junction in t.^succs
inv1 B: some j : Junction | some e : Entry | j in Track or e in Track
inv2 C: all s : Signal | one (signals.s)
inv2 C: all s : Signal | one signals.s
inv2 C: all s : Signal | one t : Track | t->s in signals
inv2 C: all s : Signal | one signals.s
inv3 S: all e : Exit | no e.succ
inv3 U: all e : Exit | no e.succs
inv3 U: all e : Exit | all t : Track | e->t not in succs
inv3 B: all e : Exit | all t : Track | e!=t and e->t not in succs
inv3 U: all e : Exit | all t : Track | e->t not in succs
inv3 U: all e : Exit | all t : Track | e->t not in succs	all e : Exit | no e.succs
inv3 U: all e : Exit | all t : Track | e->t not in succs
inv3 U: all e : Exit | no e.^succs
inv4 U: all e : Entry | all t : Track | e not in t.^succs
inv4 U: all t : Track | all e : Entry | e not in t.^succs
inv4 B: all t : Track | all e : Entry | t not in Entry and e not in t.^succs
inv4 U: all t : Track | all e : Entry | e not in t.^succs
inv4 B: all t : Track | some e : Entry | e not in t.^succs
inv4 U: all t : Track | all e : Entry | e not in t.^succs
inv5 U: all j : Junction | some t1,t2 : Track | t1!=t2 and j in t1.succs and j in t2.succs
inv3 U: no e : Exit | some e.succs
inv3 U: all e : Exit | no e.succs
inv5 U: all j : Junction | some t1,t2 : Track | t1!=t2 and j in t1.succs and j in t2.succs
inv6 C: all e : Entry | some s : Speed | s in e.signals
inv7 S: all t : Track |
inv1 S: some ex : Exit | some e : Entry
inv1 C: some ex : Exit | some e : Entry | ex in Track or e in Track
inv2 C: all s : Signal | one signals.s
inv1 C: some ex : Exit | some e : Entry | ex in Track or e in Track
inv2 C: all s : Signal | one signals.s
inv3 U: all e : Exit | no e.succs
inv3 U: all e : Exit | all t : Track | e->t not in succs	all e : Exit | no e.succs
inv3 U: all e : Exit | no e.succs
inv3 U: all e : Exit | all t : Track | t not in e.succs
inv3 U: all e : Exit | no e.succs
inv4 U: all t : Track | all e : Entry | e not in t.^succs
inv5 U: all j : Junction | some t1,t2 : Track | t1!=t2 and j in t1.succs and j in t2.succs
inv6 C: all e : Entry | some s : Speed | s in e.signals
inv7 T: all t : Track | no t in t.^succs
inv7 C: all t : Track | t not in t.^succs
inv8 O: all ex : Exit | all e : Entry | ex in e.^succs
inv8 O: all e : Entry | Exit in e.^succs
inv8 O: all ex : Exit | all e : Entry | ex in e.(^succs)
inv9 B: all t : Track | all j : Junction | all s : Semaphore | j not in t.succs implies s not in t.signals
inv3 S: no Exit.succs and
inv10 S: all t : Track | all j : Junction |
inv3 U: no Exit.succs
inv3 U: all t : Track | all e : Exit | no t.succs implies t in Exit and no e.succs
inv3 U: all t : Track | all e : Exit | (no t.succs implies t in Exit) and no e.succs
inv3 S: all t : Track | no t.succs implies t in Exit	all e : Exit no e.succs
inv3 C: all t : Track | no t.succs implies t in Exit	all e : Exit | no e.succs
inv4 O: all t : Track | all e : Entry | e not in t.^succs	all t1,t2 : Track | t1 not in t2.succs implies t1 in Entry
inv4 O: all t : Track | all e : Entry | e not in t.^succs	all t1,t2 : Track | t1 not in t2.succs implies t1 in Entry
inv4 O: all t : Track | all e : Entry | e not in t.^succs	all t1,t2 : Track | t1 not in t2.^succs implies t1 in Entry
inv4 C: all e : Entry | e not in Track.^succs	all t : Track | t not in Track.^succs implies t in Entry
inv4 C: all e : Entry | e not in Track.^succs	all t : Track | t not in Track.^succs implies t in Entry
inv5 U: all j : Junction | some t1,t2 : Track | t1!=t2 and j in t1.succs and j in t2.succs
inv5 C: all j : Junction | some t1,t2 : Track | t1!=t2 and j in t1.succs and j in t2.succs	all t,t1,t2 : Track | t1!=t2 and t in t1.succs and t in t2.succs implies t in Junction
inv5 U: all j : Junction | some t1,t2 : Track |j in t1.succs and j in t2.succs	all t,t1,t2 : Track | t1!=t2 and t in t1.succs and t in t2.succs implies t in Junction
inv6 C: all e : Entry | some s : Speed | s in e.signals
inv5 C: all j : Junction | some t1,t2 : Track | t1!=t2 and j in t1.succs and j in t2.succs	all t,t1,t2 : Track | t1!=t2 and t in t1.succs and t in t2.succs implies t in Junction
inv7 C: all t : Track | t not in t.^succs
inv9 B: all t : Track | all j : Junction | all s : Semaphore | j not in t.succs implies s not in t.signals
inv8 O: all ex : Exit | all e : Entry | ex in e.(^succs)
inv8 B: Exit in Entry.^succs
inv9 B: all t : Track | all j : Junction | all s : Semaphore | j not in t.succs implies s not in t.signals
inv10 T: all t : Track | some Junction in t.succs implies some Semaphore in t.signals
inv10 B: all t : Track | some j : Junction | some s : Semaphore | j in t.succs implies s in t.signals
inv6 C: all e : Entry | some s : Speed | s in e.signals
inv7 C: all t : Track | t not in t.^succs
inv8 B: Exit in Entry.^succs
inv8 O: all e : Entry | Exit in e.^succs
inv9 B: all t : Track | all j : Junction | all s : Semaphore | j not in t.succs implies s not in t.signals
inv10 B: all t : Track | some j : Junction | some s : Semaphore | j in t.succs implies s in t.signals
inv10 B: all j : Junction | (succs.j).signals in Semaphore
inv10 T: all j : Junction | #((succs.j).signals.Semaphore > 1)
inv10 S: all j : Junction | #(succs.j) Semaphore)
inv6 C: all e : Entry | some s : Speed | s in e.signals
inv7 C: all t : Track | t not in t.^succs
inv8 O: all e : Entry | Exit in e.^succs
inv9 B: all t : Track | all j : Junction | all s : Semaphore | j not in t.succs implies s not in t.signals
inv10 E: 
inv8 O: all e : Entry | Exit in e.^succs
inv7 S: Track not in t.^succs
inv7 B: Track not in Track.^succs
inv7 C: all t : Track | t not in t.^succs
inv8 O: all e : Entry | Exit in e.^succs
inv7 C: all t : Track | t not in t.^succs
inv8 O: all e : Entry | Exit in e.^succs
inv10 B: all t : Track | some j : Junction | some s : Semaphore | j in t.succs implies s in t.signals
inv10 B: all t : Track | some j : Junction | some s : Semaphore | j in t.succs implies s in t.signals	all t : Track | some (t.signals & Semaphore) implies some (t.succs & Junction)
inv10 B: all t : Track | some k : Junction | t->k in succs implies (some s : Semaphore | t->s in signals)
inv10 B: all t : Track | some k : Junction | t->k in succs implies (some s : Semaphore | t->s in signals)
inv10 B: all t : Track | some k : Junction | t->k in succs implies (some s : Semaphore | t->s in signals)

