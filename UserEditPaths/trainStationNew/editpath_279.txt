NA H: THEME UPDATE
inv1 U: some Entry
inv1 C: some Entry	some Exit
inv2 C: all s: Signal | one t: Track | s in t.signals
inv2 C: all s: Signal | one t: Track | s in t.signals
inv3 B: all t: Track | Exit in t implies #(t.succs)=0
inv3 U: all t: Track | t in Exit  implies #(t.succs)=0
inv4 U: all t: Track | t in Entry implies t not in Track.succs
inv5 S: all t: Track
inv3 U: all t: Exit | #(t.succs)=0
inv3 U: all t: Exit | #(t.succs)=0
inv5 U: all t: Junction | some l: Track | t in l.succs
inv6 S: all t: Entry | some s : Speed | s in t.signal
inv6 C: all t: Entry | some s : Speed | s in t.signals
inv5 B: all j: Junction | some t : Track |  #(t)>=2 && j in t.succs
inv4 U: all t: Entry | t not in Track.succs
inv3 U: all t: Exit | #(t.succs)=0
inv4 S: all e: Entry | all t: Tracks | e not in t.succs
inv3 U: all t: Exit | #(t.succs)=0
inv4 U: all e: Entry | all t: Track | e not in t.succs
inv5 B: all j: Junction | some t : Track |  #(t)>=2 && j in t.succs
inv5 U: all j: Junction | some t : Track | some l : Track | j in t.succs and j in l.succs
inv5 U: all j: Junction | some t : Track | some l : Track | j in t.succs and j in l.succs implies j != l
inv5 U: all j: Junction | some t : Track | some l : Track | j != l and j in t.succs and j in l.succs
inv5 U: all j: Junction | some t : Track | some l : Track | t != l and j in t.succs and j in l.succs
inv10 T: all t : Track | (some Junction) in t.succs  implies (some Semaphore) in t.signals
inv10 B: all t : Track | some j : Junction | some s : Semaphore | j in t.succs  implies s in t.signals
inv10 B: all t : Track | some j : Junction | some s : Semaphore | j in t.succs  implies s in t.signals
inv9 B: all t : Track | all j : Junction | j not in t.succs implies # (t.signals & Semaphore) = 0
inv2 C: all s: Signal | one t: Track | s in t.signals
inv3 U: all t: Exit | #(t.succs)=0
inv3 B: all t: Exit | #(t.succs)=1
inv3 U: all t: Exit | #(t.succs)=0
inv3 C: all t: Exit | #(t.succs)=0	all t: Track - Exit | some s : Track | s in t.succs
inv3 U: all t: Track - Exit | some s : Track | s in t.succs
inv3 C: all t: Exit | #(t.succs)=0	all t: Track - Exit | some s : Track | s in t.succs
inv4 C: all e: Entry | all t: Track | e not in t.succs	all t: Track - Entry | t in Track.succs
inv4 C: all e: Entry | all t: Track | e not in t.succs	all t: Track - Entry | t in Track.succs
inv5 B: all e: Exit | one t: Track | e in t.succs
inv5 B: all e: Exit | one t: Track | e in t.succs	all j: Junction | some t, l : Track | t != l and t!= j and l!=j and j in t.succs and j in l.succs
inv5 B: all j: Junction | some t, l : Track | t != l and t!= j and l!=j and j in t.succs and j in l.succs
inv5 B: all e: Exit | lone t: Track | e in t.succs	all j: Junction | some t, l : Track | t != l and t!= j and l!=j and j in t.succs and j in l.succs
inv6 C: all t: Entry | some s : Speed | s in t.signals
inv7 T: all t: Track | t not in ^t.succs
inv7 T: all t: Track | t not in ^(t.succs)
inv6 C: all t: Entry | some s : Speed | s in t.signals
inv7 C: all t: Track | t not in (t.^succs)
inv7 C: all t: Track | t not in (t.^succs)
inv8 O: all e: Entry | all x: Exit | x in e.^succs
inv8 C: all e: Entry | all x: Exit | x in e.^succs or e = x
inv9 B: all t : Track | all j : Junction | j not in t.succs implies # (t.signals & Semaphore) = 0
inv10 B: all t : Track | some j : Junction | some s : Semaphore | j in t.succs  implies s in t.signals
inv10 C: all t : Track | #(t.succs & Junction) > 0 implies # (t.signals & Semaphore) > 0
inv10 C: all t : Track | #(t.succs & Junction) > 0 implies # (t.signals & Semaphore) > 0
inv9 C: all t : Track | #(t.succs & Junction) = 0 implies # (t.signals & Semaphore) = 0
inv8 C: all e: Entry | all x: Exit | x in e.^succs or e = x
inv6 C: all t: Entry | some s : Speed | s in t.signals
inv5 S: all j: Junctions | #( j & Track.succs) > 1
inv6 C: all t: Entry | some s : Speed | s in t.signals
inv1 C: some Entry	some Exit
inv2 C: all s: Signal | one t: Track | s in t.signals
inv3 C: all t: Exit | #(t.succs)=0	all t: Track - Exit | some s : Track | s in t.succs
inv4 C: all e: Entry | all t: Track | e not in t.succs	all t: Track - Entry | t in Track.succs
inv5 B: all j: Junction | #( j & Track.succs) > 1
inv6 C: all t: Entry | some s : Speed | s in t.signals
inv5 B: all j: Junction | #( j & Track.succs) > 1
inv5 T: all t : Track | ( t & Track.succs) > 1 implies t in Junction
inv5 U: all t : Track | #( t & Track.succs) > 1 implies t in Junction
inv5 B: all t : Track | #( t & Track.succs) > 1 iff t in Junction
inv5 B: all t : Track | #( t & Track.succs) > 1 iff t in Junction
inv5 B: all t : Track - Junction| one t: Track | t in t.succs
inv5 B: all t : Track - Junction - Entry| one t: Track | t in t.succs
inv5 B: all t : Track - Junction - Entry| one t: Track | t in t.succs
inv5 B: all t : Track - Junction - Entry| one l: Track | t in l.succs
inv5 B: all t : Track - Junction - Entry| one l: Track | t in l.succs	all j: Junction | some t, l: Track | t != l and t != j and l!=j and j in t.succs and j in l.succs
inv5 B: all t : Track - Junction - Entry| one l: Track | t in l.succs	all j: Junction | some t, l: Track | t != l  and j in t.succs and j in l.succs
inv6 C: all t: Entry | some s : Speed | s in t.signals
inv7 C: all t: Track | t not in (t.^succs)
inv8 C: all e: Entry | all x: Exit | x in e.^succs or e = x
inv10 C: all t : Track | #(t.succs & Junction) > 0 implies # (t.signals & Semaphore) > 0
inv1 C: some Entry	some Exit
NA H: THEME UPDATE
inv1 C: some Entry	some Exit
inv3 C: all t: Exit | #(t.succs)=0	all t: Track - Exit | some s : Track | s in t.succs
inv5 B: all t : Track - Junction - Entry| one l: Track | t in l.succs	all j: Junction | some t, l: Track | t != l  and j in t.succs and j in l.succs

