NA H: THEME UPDATE
inv1 C: some Entry and some Exit
inv2 S: Signal one -> one singal
inv2 S: Signal one -> one signal
inv2 C: all s:Signal | one t:Track |  t->s in signals
inv3 T: no succs in Exit
inv3 T: succs not in Exit
inv3 S: succs in Exit no
inv3 S: succs in Exit lone
inv3 T: not some succs in Exit
inv3 S: all e:Exit | not some t:Track | e->t in succ
inv3 U: all e:Exit | not some t:Track | e->t in succs
inv3 U: all e:Exit | all t:Track | e->t not in succs
inv3 S: no (Exit . succ)
inv3 U: no (Exit . succs)
inv3 T: all e:Exit | all t:Track | no e->t in succs
inv3 T: all e:Exit | all t:Track | no (e->t in succs)
inv3 S: Exit = Tracks - (succs.Tracks)
inv3 C: Exit = Track - (succs.Track)
inv3 B: Exit = Track - (Track.succs)
inv3 C: Exit = Track - (succs.Track)
inv3 B: no (succs . Exit)
inv3 S: Exit = no (succs . Exit)
inv3 B: (succs . Exit) = none
inv3 C: Exit = Track - (succs.Track)
inv4 C: Entry = Track - (Track.succs)
inv5 S: all Junction | some t:Track |
inv5 B: all j:Junction | some t1, t2:Track | t1->j in succs and t2->t1 in succs
inv5 S: all j:Junction | disj some t1, t2:Track | t1->j in succs and t2->t1 in succs
inv5 B: all j:Junction | some disj t1, t2:Track | t1->j in succs and t2->t1 in succs
inv5 B: all j:Junction | some disj t1, t2:Track | t1 != j and t1->j in succs and t2->t1 in succs
inv5 S: all j:Junction | some disj t1, t2:Track | t1 != j and t2 != j and and t1->j in succs and t2->t1 in succs
inv5 B: all j:Junction | some disj t1, t2:Track | t1 != j and t2 != j and t1->j in succs and t2->t1 in succs
inv5 B: all j:Junction | some disj t1, t2:Track | t1 != j and t2 != j and t1->j in succs and t2->t1 in succs
inv5 B: all j:Junction | some disj t1, t2:Track | t1!=t2 and t1 != j and t2 != j and t1->j in succs and t2->t1 in succs
inv5 B: not some j:Junction | j->j in succs	all j:Junction | some disj t1, t2:Track | t1!=t2 and t1 != j and t2 != j and t1->j in succs and t2->t1 in succs
inv5 B: not some j:Junction | j->j in succs
inv5 B: not some j:Junction | j->j in succs
inv6 T: Speed in signals some -> Entry
inv6 T: Speed in signals some -> Entry
inv6 C: all e:Entry | some s:Speed | e->s in signals
inv5 S: not some j:Junction | j->j in succs		not some j:Junction | lone (j . )
inv6 C: all e:Entry | some (e . signals) & Speed
inv5 B: not some j:Junction | j->j in succs		not some j:Junction | lone (j . succs)
inv5 B: not some j:Junction | lone (j . succs)
inv5 T: not some j:Junction | lone (^j . succs)
inv5 B: not some j:Junction | lone (j . ^succs)
inv7 C: not some t:Track | t in (t.^succs)
inv8 C: all e:Entry | Exit in (e.*succs)
inv8 O: all e:Entry | Exit in (e.^succs)
inv8 C: all e:Entry | Exit in (e.*succs)
inv8 C: (Entry->Exit) in (*succs)
inv9 B: all t1:Track, t2:Track-Junction | t1->t2 in succs implies Semaphore not in (t1.signals)
inv9 B: all t1, t2:Track| t1->t2 in succs and t2 not in Junction implies Semaphore not in (t1.signals)
inv9 U: all disj t1, t2:Track | t1->t2 not in succs or (t1->t2 not in succs and t2 not in Junction) implies Semaphore not in (t1.signals)
inv9 B: all disj t1, t2:Track | t1->t2 not in succs or (t1->t2 in succs and t2 not in Junction) implies Semaphore not in (t1.signals)
inv9 B: all disj t1, t2:Track | t1->t2 not in succs or (t1->t2 in succs and t2 not in Junction) implies Semaphore not in (t1.signals)
inv9 S: all disj t1, t2:Track | Junction not in t1.succ implies Semaphore not in (t1.signals)
inv9 B: all disj t1, t2:Track | Junction not in t1.succs implies Semaphore not in (t1.signals)
inv9 B: all disj t1:Track | Junction not in t1.succs implies Semaphore not in (t1.signals)
inv9 B: all t1:Track | Junction not in t1.succs implies Semaphore not in (t1.signals)
inv9 B: all t1:Track |  Semaphore not in (t1.signals)
inv9 O: all t1:Track, s:Semaphore |  t1->s not in (signals)
inv9 B: all t1:Track, s:Semaphore |  t1->s in (signals)
inv9 B: all t1:Track | Junction not in t1.succs implies Semaphore not in (t1.signals)
inv9 S: all t:Track | no (Junction & t.succs) implies no (Semaphore & (t1.signals))
inv9 C: all t:Track | no (Junction & t.succs) implies no (Semaphore & (t.signals))
inv10 T: all t:Track | one Junction in succs.t
inv10 B: all t:Track | one Junction & succs.t
inv10 B: all t:Track | one Junction & succs.t => some (Semaphore & t.signals)
inv10 B: all t:Track | one (Junction & succs.t) => some (Semaphore & t.signals)
inv10 U: all t:Track | one (Junction & t.succs) => some (Semaphore & t.signals)
inv10 C: all t:Track | some (Junction & t.succs) => some (Semaphore & t.signals)
inv10 C: all t:Track | some (Junction & t.succs) => some (Semaphore & t.signals)
inv2 C: all s:Signal | one t:Track |  t->s in signals

