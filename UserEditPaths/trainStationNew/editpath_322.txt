NA H: THEME UPDATE
inv1 T: all t:Track | some Entry in succs and some Exit in succs
inv1 T: all t:Track | some Entry in t.succs and some Exit in t.succs
inv1 B: all t:Track | some e:Entry ,ex:Exit | e in t.succs and ex in t.succs
inv1 O: one t:Track | some e:Entry ,ex:Exit | e in t.succs and ex in t.succs
inv1 B: all t:Track | some e:Entry ,ex:Exit | e in t.succs and ex in t.succs
inv1 U: all t:Track | some e:Entry ,ex:Exit | #e>=1 and #ex>=1
inv1 S: all t:Track | some e:Entry ,ex:Exit |
inv1 S: all t:Track | some e:Entry ,ex:Exit
inv1 B: all t:Track | some e:Entry ,ex:Exit | e in t.succs and ex in t.succs and t in t.succs
inv1 U: all t:Track | some Exit and some Entry
inv1 T: all t:Track | some Exit in t.succs and some Entry in t.succs
inv1 T: all t:Track, e:Entry, ex:Exit | #e in t.succs >=1 and #ex in t.succs >=1
inv1 B: all t:Track | some e:Entry, ex:Exit | e in t.succs and ex in t.succs
inv1 B: all t:Track | some e:Entry, ex:Exit | e in t.succs or ex in t.succs
inv1 B: all t:Track | some e:Entry, ex:Exit | e in t.succs and ex in t.succs
inv1 B: all t:Track | some e:Entry, ex:Exit | e in t.succs and ex in t.succs	all e:Entry, ex:Exit | some t:Track | e in t.succs and ex in t.succs
inv1 B: all e:Entry, ex:Exit | some t:Track | e in t.succs and ex in t.succs
inv2 B: all s:Signal | one Track
inv2 B: all s:Signal, t1,t2:Track | s in t1.signals => s not in t2.signals
inv2 S: all s:Signal, t1,t2:Track | s in t1.signals => s not in Track.signals - t
inv2 B: all s:Signal, t1:Track | s in t1.signals => s not in Track.signals - t1
inv2 B: all s:Signal, t1:Track | s in t1.signals and s not in Track.signals - t1
inv2 B: all s:Signal, t1:Track | s in t1.signals and s not in Track.signals - t1.signals
inv2 U: all s:Signal, t1:Track | s in t1.signals => s not in Track.signals - t1.signals
inv2 B: all s:Signal, t1:Track | s not in Track.signals - t1.signals
inv2 B: all s:Signal, t1:Track | s not in (Track.signals - t1.signals)
inv2 U: all s:Signal | one t1:Track | s not in (Track.signals - t1.signals)
inv2 S: all s:Signal | one t1:Track | s in t.signals
inv2 C: all s:Signal | one t:Track | s in t.signals
inv1 O: one t:Track | some ex:Exit, e:Entry | e in t.succs and ex in t.succs
inv1 C: some ex:Exit, e:Entry | e in Track and ex in Track
inv1 O: some ex:Exit, e:Entry | e in Track.succs and ex in Track.succs
inv1 C: some ex:Exit, e:Entry | e in Track and ex in Track
inv3 U: all ex:Exit | no ex.succs
inv3 U: no Exit.succs
inv3 U: all t:Track| no t.succs => t in Exit
inv3 B: all t:Track| no t.succs => t = Exit
inv3 B: all t:Track| #t.succs=0 => t = Exit
inv3 U: all t:Track| #t.succs=0 => t in Exit
inv3 U: all t:Track| no t.succs => t in Exit
inv3 U: all t:Track| t in Exit => no t.succs
inv3 U: all ex:Exit | no ex.succs
inv3 U: all ex:Exit | #ex.succs=0
inv3 U: all ex:Exit | ex in Track => no ex.succs
inv3 U: all ex:Exit | ex in Track => #ex.succs=0
inv3 U: all t:Track| no t.succs => t in Exit
inv3 B: all t:Track| no t.succs => Exit in t
inv3 T: all ex:Exit | ex.succs={}
inv3 U: all ex:Exit | no ex.succs
inv3 U: all ex:Exit | ex in Track => no ex.succs
inv4 U: all e:Entry | no e.prev
inv4 U: all e:Entry | no e.succs.prev
inv4 U: all e:Entry | no (e.succs).prev
inv4 T: all e:Entry | no (e.succs).prev[e]
inv4 U: all e:Entry | no prev[e]
inv4 U: all e:Entry | #prev[e]=0
inv4 S: all e:Entry | #prevs[e]=0
inv4 S: all e:Entry | no prevs[e]
inv4 S: all e:Entry | no e.succs.prevs[e]
inv4 S: all e:Entry | first = e
inv4 S: all e:Entry | Track.succs.first = e
inv4 S: all e:Entry, t:Track | t.succs.first = e
inv4 S: all e:Entry, t:Track | t.succs.first = Entry
inv4 S: all e:Entry, t:Track | e in t.succs => t.succs.first = e
inv4 S: some first e:Entry | e in Track
inv4 S: some first e:Entry | e in Track
inv4 S: some first e:Entry | e in Track
inv3 U: all ex:Exit | no ex.next
inv3 U: all ex:Exit | no ex.succs.next
inv3 S: all ex:Exit | ex.succs.last = ex
inv3 S: all ex:Exit | Track.succs.last = ex
inv3 S: all ex:Exit | Track.last = ex
inv3 S: all ex:Exit | ex.last = ex
inv3 S: all ex:Exit | ex.last
inv3 T: all ex:Exit | no Track.succs[ex+1]
inv3 T: all ex:Exit | no Track.succs[ex]
inv3 U: all ex:Exit | ex in Track => no ex.succs
inv3 U: all ex:Exit | Track not in ex.succs
inv3 U: all ex:Exit | Track not in ex.succs and ex not in ex.succs
inv3 S: all ex:Exit | Track not in ex.succs and ex not in ex.succs and Entry not in ex.succs and Juction not in ex.succs
inv3 B: all ex:Exit | Track not in ex.succs and ex not in ex.succs and Entry not in ex.succs and Junction not in ex.succs
inv3 B: all ex:Exit | ex not in ex.succs and Entry not in ex.succs and Junction not in ex.succs
inv3 B: all ex:Exit | Exit not in ex.succs and Entry not in ex.succs and Junction not in ex.succs
inv6 O: all e:Entry | one s:Speed | s in e.signals
inv6 C: all e:Entry | some s:Speed | s in e.signals
inv7 B: some ex:Exit, e:Entry | e not in ex.succs
inv7 B: some ex:Exit, e:Entry | e not in ex.succs and ex not in ex.succs
inv7 B: all ex:Exit, e:Entry | e not in ex.succs and ex not in ex.succs
NA H: THEME UPDATE

