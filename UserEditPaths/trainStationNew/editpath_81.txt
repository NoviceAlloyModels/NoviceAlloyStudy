NA H: THEME UPDATE
inv1 B: all t: Track | some e: Entry | e in t
inv1 B: all t: Track | some e: Entry, x: Exit | e in t && x in t
inv1 O: some t: Track | some e: Entry | some x: Exit | e in t.succs && x in t.succs
inv1 B: all t: Track | some e: Entry | some x: Exit | e in t.succs && x in t.succs
inv1 C: some Entry & Track	some Exit & Track
inv1 U: some Entry & Track
inv1 U: some Exit & Track
inv1 T: all e: Entry, x: Exit | e & x && x & e
inv1 B: all e: Entry, x: Exit | some (e & x) && some (x & e)
inv1 U: all e: Entry, x: Exit | some e && some x
inv1 C: all e: Entry, x: Exit | some e && some x	some Entry && some Exit
inv1 C: some Entry && some Exit
inv1 S: Track.succs(x) != ? ? Signal.subsetOf(Track.succs(x)) ?	Track.preds(x) != ? ? Signal.subsetOf(Track.preds(x)) ? x : Junction
inv2 S: all s: signal | one t: Track | s in t.signals
inv1 C: some Entry && some Exit
inv2 C: all s: Signal | one t: Track | s in t.signals
inv2 C: all s: Signal | one s.~signals
inv3 U: all x: Exit | no x.succs
inv3 U: all x: Exit | #x.succs = 0
inv3 B: all x: Exit | x not in Track.succs
inv3 U: all x: Exit |no x.succs
inv3 C: all x: Exit |no x.succs	all t: Track | (t in Exit) <=> no t.succs
inv3 C: all t: Track | (t in Exit) <=> no t.succs
inv3 U: all t: Track | (t in Exit) => no t.succs
inv4 B: all t: Track | (t in Entry) <=> no t.^succs
inv4 B: all t: Track | (t in Entry) <=> no t.^succs
inv3 C: all t: Track | (t in Exit) <=> no t.succs
inv4 B: all t: Track | (t in Entry) <=> no t.^succs
inv4 B: all t: Track | (t in Entry) <=> no t.^succs
inv4 S: all t: Track | (t in Entry) <=> no pred: t.succs | pred in Entry
inv4 T: all t: Track | (t in Entry) <=> no t.succs in Entry
inv4 B: all t: Track | (t in Entry) <=>  t.succs not in Entry
inv4 B: all t: Track | (t in Entry) <=> no t.^succs
inv4 B: all t: Entry | no t.^succs

