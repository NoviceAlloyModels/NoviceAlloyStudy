NA H: THEME UPDATE
inv1 B: all t : Track | succs.t in Entry and t.succs in Exit
inv1 C: some ex: Exit, e:Entry | e in Track and ex in Track
inv2 C: all s : Signal | one t : Track | s in t.signals
inv2 C: all s : Signal | one t : Track | s in t.signals
inv3 U: all t : Track | t.succs = none => t in Exit
inv3 U: all t : Track | t.^succs = none => t in Exit
inv3 C: all t : Track | t in Exit <=> no t.^succs
inv4 U: all t : Track | t in Entry => succs.t = none
inv4 U: all t : Track | t in Entry => t !in Track.^succs
inv4 C: all t : Track | t in Entry <=> t !in Track.^succs
inv5 S: all t : Track | t in Junctions => #(succs.t) > 1
inv5 U: all t : Track | t in Junction => #(succs.t) > 1
inv5 S: all t : Track | t in Junction => t.succs.size > 1
inv5 T: all t : Track | t in Junction => (t.succs) > 1
inv5 B: all t : Track | t in Junction => #(t.succs) > 1
inv5 B: all t : Track | t in Junction => #(t.succs) > 1 and (t not in t.succs)
inv5 C: all t : Track | t in Junction iff #succs.t>1
inv6 C: all e:Entry | some s : Speed | s in e.signals
inv7 O: all t : Track | t not in t.*succs
inv7 O: all t : Track | t not in t.*succs
inv7 C: all t : Track | t not in t.^succs
inv7 C: all t : Track | t not in t.^succs
inv8 B: all disj t1, t2 : Track | t1 in Entry && t2 in Exit => t1 in t2.succs
inv8 C: all disj t1, t2 : Track | t1 in Entry && t2 in Exit => t2 in t1.^succs
inv9 B: all t : Track | t.succs !in Junction => Semaphore !in t.signals
inv9 B: all t: Track | (all t1: Track | t1 in t.succs => (t1 in Junction)) =>  no s: Semaphore | s in t.signals
inv9 C: all t: Track, s:Semaphore | no t.succs & Junction => s not in t.signals
inv10 S: all t : Track, s:Semaphore | t.succ & Junction => s in t.signals
inv10 T: all t : Track, s:Semaphore | t.succs & Junction => s in t.signals
inv10 O: all t : Track, j : Junction | some s : Semaphore | j in t.succs => s in t.signals
NA H: THEME UPDATE

