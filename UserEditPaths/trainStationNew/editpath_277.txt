NA H: THEME UPDATE
inv1 C: some e : Entry, ex : Exit | e in Track and ex in Track
inv2 B: all s : Signal, t1, t2 : Track | t1->s in signals and t2->s in signals and t1 = t2
inv2 U: all s : Signal, t1, t2 : Track | t1->s in signals and t2->s in signals implies t1 = t2
inv2 U: all s : Signal, t1, t2 : Track | s in t1.signals and s in t2.signals implies t1 = t2
inv2 B: all s : Signal, t1, t2 : Track | s in t1.signals and s in t2.signals and t1 = t2
inv2 C: all s:Signal | one t:Track | s in t.signals
inv2 U: all s : Signal | some t1, t2 : Track | s in t1.signals and s in t2.signals and t1 = t2
inv2 B: all s : Signal | all t1, t2 : Track | s in t1.signals and s in t2.signals and t1 = t2
inv2 U: all s : Signal | all t1, t2 : Track | s in t1.signals and s in t2.signals implies t1 = t2
inv2 C: all s:Signal | one t:Track | s in t.signals
inv2 C: all s : Signal | all t1, t2 : Track | s in t1.signals and s in t2.signals implies t1 = t2	all s : Signal | some t : Track | s in t.signals
inv3 U: all ex : Exit, t : Track | ex not in succs.t
inv3 B: all ex : Exit, t : Track | ex not in t.succs
inv3 C: all t:Track | t in Exit <=> no t.^(succs)
inv3 C: all t:Track | t not in Exit <=> some t.^(succs)
inv3 B: all t:Track | t in Exit <=> t not in t.succs
inv3 B: all t:Track | t in Exit <=> t not in succs.t
inv3 C: all t:Track | t in Exit <=> no t.^(succs)
inv3 C: all t:Track | t in Exit <=> no t.succs
inv3 B: all t:Track | t in Exit <=> no succs.t
inv3 S: all t:Track | t in Exit <=> no t.sucss
inv3 C: all t:Track | t in Exit <=> no t.succs
inv4 S: ll t:Track | t in Entry <=> no succs.t
inv4 C: all t:Track | t in Entry <=> no succs.t
inv4 B: all t:Track | t in Entry <=> t not in succs.t
inv4 C: all t:Track | t in Entry <=> no succs.t
inv5 B: all t : Track | t not in Junction <=> no succs.t and one succs.t
inv5 B: all t : Track | t not in Junction <=> ( no succs.t and one succs.t )
inv5 B: all t : Track | t not in Junction => ( no succs.t and one succs.t )
inv5 U: all t : Track | t in Junction => some succs.t
inv5 U: all t : Track | t in Junction => some succs.t
inv5 B: all t : Track | t in Junction => some succs.succs.t
inv5 S: all t : Track | t in Junction => in succs.succs.t
inv6 S: all e : entry | some s : signal | s in e.signals
inv6 U: all e : Entry | some s : Signal | s in e.signals
inv6 O: all e : Track | some s : Speed | s in e.signals
inv6 C: all e : Entry | some s : Speed | s in e.signals
inv7 U: all t1, t2 : Track | t1 in succs.t2 implies t2 not in succs.t1
inv7 O: all t1, t2 : Track | t1 in succs.t2 implies t2 not in t1.succs
inv7 U: all t1, t2 : Track | t1 in succs.t2 implies t2 not in succs.t1 and t1 != t2
inv7 C: all t:Track | t not in t.^(succs)
inv7 U: all t1, t2 : Track | t1 in succs.t2 and t1 != t2 implies t2 not in succs.t1 and t1 != t2
inv7 U: all t1, t2 : Track | t1 in succs.t2 and t1 != t2 implies t2 not in succs.t1 and t1 != t2	all t : Track | t not in succs.t
inv7 U: all t1, t2 : Track | t1 in succs.t2 and t1 != t2 implies t2 not in succs.t1	all t : Track | t not in succs.t
inv7 O: all t1, t2 : Track | t1 in succs.t2 and t1 != t2 implies t2 not in t1.succs	all t : Track | t not in succs.t
inv7 O: all t1, t2 : Track | t1 in succs.t2 and t1 != t2 implies t1 not in succs.t2	all t : Track | t not in succs.t
inv7 U: all t1, t2 : Track | t1 in succs.t2 and t1 != t2 implies t1 not in t2.succs	all t : Track | t not in succs.t
inv7 O: all t1, t2 : Track | t1 in succs.t2 and t1 != t2 implies t2 not in t1.succs	all t : Track | t not in succs.t
inv7 U: all t1, t2 : Track | t1 in succs.t2 and t1 != t2 implies t2 not in succs.succs.t1	all t : Track | t not in succs.t
inv7 B: all t1, t2 : Track | t1 in succs.t2 and t1 != t2 implies t2 not in t1.succs.succs	all t : Track | t not in succs.t
inv7 U: all t : Track | t not in succs.t
inv7 U: all t : Track | t not in succs.t	all t : Track | t not in t.succs
inv8 B: all t : Track | t in Exit and t in Entry
inv7 B: all disj t1, t2 : Track | t1 in succs.t2 implies t2 not in t1.succs.succs	all t : Track | t not in succs.t
inv8 O: all disj t1,t2 : Track | t1 in Entry and t2 in Exit implies t2 in t1.succs
inv8 S: all disj t1,t2 : Track | t1 in Entry and t2 in Exit implies t2 in succ.t1
inv8 B: all disj t1,t2 : Track | t1 in Entry and t2 in Exit implies t2 in succs.t1
inv8 C: all disj t1,t2 : Track | t1 in Entry and t2 in Exit implies t2 in t1.^(succs)
inv1 C: some t: Track | t in Entry and some t: Track | t in Exit

