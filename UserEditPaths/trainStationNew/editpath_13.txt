NA H: THEME UPDATE
inv1 C: some Entry and some Exit
inv2 C: all s : Signal | one signals.s
inv3 U: no Exit.succs
inv3 U: no Exit.succs
inv3 C: Exit = Track - succs.Track
inv4 C: Entry = Track - Track.succs
inv5 S: Junctions = Track - Track.succs
inv6 S: all j : Junctions | no (lone succs.j)
inv5 T: all j : Junction | no (lone succs.j)
inv5 T: all j : Junction | no (lone succs.j)
inv5 B: all j : Junction | (lone succs.j)
inv5 U: all j : Junction | not (lone succs.j)
inv5 C: Junction = Track.{t1 : Track, t2 : Track | t1->t2 in succs and (not lone succs.t2)}
inv6 C: all e : Entry | some (e.signals & Speed)
inv7 C: no (^succs & iden)
inv8 O: all e : Entry | Exit in e.^succs
inv8 C: all e : Entry | Exit in e.*succs
inv8 C: all e : Entry | Exit in e.*succs
inv9 C: no ( (Track-(succs.Junction)).signals & Semaphore)
inv9 C: no ((Track-(succs.Junction)).signals & Semaphore)
inv10 C: all t : Track | t in (succs.Junction) implies some(t.signals & Semaphore)

