NA H: THEME UPDATE
inv1 B: all x : Track | Entry in x.succs and Exit in x.succs
inv1 B: all x : Track | Entry in x and Exit in x
inv1 B: all x : Track | Entry in x or Exit in x
inv1 B: all x : Track | x in Entry or x in Exit
inv1 C: some en: Entry, ex :Exit | en in Track and ex in Track
inv2 C: all s: Signal | one t: Track | s in t.signals
inv3 U: no Exit.succs
inv3 U: all e : Exit | no e.succs
inv3 U: all t : Track | no t.succs implies t in Exit
inv3 B: all t : Track | no t.succs implies Exit in t
inv3 C: all t : Track | no t.succs <=> t in Exit
inv3 U: all t : Track | no t.succs implies t in Exit
inv3 U: all t : Track | no t.succs implies t in Exit and t in Exit implies no t.succs
inv3 C: all t : Track | (no t.succs implies t in Exit) and (t in Exit implies no t.succs)
inv4 O: all t : Track | (no t.*succs & Entry <=> t in Entry)
inv4 B: all t : Track | (t not in Track.*(succs) <=> t in Entry)
inv4 C: all t : Track | (t not in Track.^(succs) <=> t in Entry)
inv5 T: all j : Junction | #(Track.succs & j > 1)
inv5 U: all j : Junction | #(succs.j) > 1
inv5 C: all t : Track | #(succs.t) > 1 <=> t in Junction
inv6 B: all e : Entry | Speed in e.signals
inv6 C: all e : Entry | some (Speed & e.signals)
inv8 C: all ex : Exit, en: Entry | ex in en.*succs
inv9 C: all t : Track | no (t.succs & Junction) implies no (t.signals & Semaphore)
inv10 T: all t : Track | (succs.t & Junction )implies some (t.signals & Semaphore)
inv10 B: all t : Track | some (succs.t & Junction) implies some (t.signals & Semaphore)
inv10 B: all t : Track | some j : Junction | t in j.succs implies some (t.signals & Semaphore)
inv10 C: all t : Track | some (Junction & t.succs) implies some (t.signals & Semaphore)

