NA H: THEME UPDATE
inv1 T: all t : Track | some t in Entry and sone t in Exit
inv1 T: all t : Track | some t in Entry and some t in Exit
inv1 C: some Entry and some Exit
inv1 C: some Entry and some Exit
inv2 U: all s : Signal | some t : Track | s in t.signals
inv2 C: all s : Signal | one signals.s
inv3 T: all e : Exit | none succs.e
inv3 B: all e : Exit, t : Track | t not in succs.e
inv3 T: all e : Exit | none succs.e
inv3 T: all e : Exit | none e.succs
inv3 U: all e : Exit, t : Track | t not in e.succs
inv3 S: all e : Exit | t : Track | t not in e.succs
inv3 E: 
inv3 U: all e : Exit | none in e.succs
inv3 T: all e : Exit | none e.succs
inv3 T: all e : Exit | none (e.succs)
inv3 T: all e : Exit | none e.succs
inv3 S: all e : Exit iff none e.succs
inv3 T: all e : Track | e in Exit iff none e.succs
inv3 T: all t : Track | t in Exit implies none t.succs
inv3 S: all t : Track | t in Exit implies (none t.succs)
inv3 S: all t : Track | t in Exit iff (none t.succs)
inv3 S: all t : Track | t in Exit iff (none succs.t)
inv3 T: all t : Track | t in Exit iff none t.succs
inv3 T: all t : Track | t in Exit iff none succs.t
inv3 C: all e : Track | e in Exit iff (all t : Track | t not in e.succs)
inv3 U: all e : Exit | (all t : Track | t not in e.succs)
inv3 C: all e : Track | e in Exit iff (all t : Track | t not in e.succs)
inv4 T: all e : Track | e in Entry iff none succs.e
inv4 C: all e : Track | e in Entry iff (all t : Track | t not in succs.e)
inv4 C: all e : Track | e in Entry iff (all t : Track | t not in succs.e)
inv5 C: all j : Track | j in Junction iff (not lone succs.j)
inv6 C: all e : Entry | some s : Speed | s in e.signals
inv7 U: all x,y,z : Track | (y in x.succs and z in y.succs) implies (x != y and y != z)
inv7 U: all x,y,z : Track | (y in x.succs and z in y.succs) implies (x != y and y != z and x != z)
inv7 U: all x,y : Track | y in x.succs implies x != y and x not in x.succs
inv7 U: all x,y : Track | y in x.succs implies x != y	all x : Track | x not in x.succs
inv7 B: all x,y : Track | x != y implies y in x.succs	all x : Track | x not in x.succs
inv7 B: all x,y : Track | x != y implies (y in x.succs and x in y.succs)	all x : Track | x not in x.succs
NA H: THEME UPDATE
inv8 O: all ex : Exit, en : Entry | ex in en.^(succs)
inv8 B: all ex : Exit | some en : Entry | en in succs.ex
inv8 B: all ex : Exit | some en : Entry | en in (^succs).ex
inv8 B: all ex : Exit | some en : Entry | ex in en.^(succs)
inv7 S: all x : Track : x not in x.^(succs)
inv7 C: all x : Track | x not in x.^(succs)
inv10 T: all t : Track | t.succs in Junction implies some Semaphore in t.signals
inv10 B: all t : Track | t.succs in Junction implies Semaphore in t.signals
inv10 S: all t : Track | t.succs in Junction implies (some s : Semaphore | s t.signals)
inv10 S: all t : Track | t.succs in Junction implies (some s : Semaphore | s in t.signals
inv10 B: all t : Track | t.succs in Junction implies (some s : Semaphore | s in t.signals)
inv10 B: all t : Track | (t.succs in Junction) implies (some s : Semaphore | s in t.signals)
inv10 C: all t : Track | all j : Junction | (j in t.succs) implies (some s : Semaphore | s in t.signals)
inv10 B: all t : Track | (Junction in t.succs) implies (some s : Semaphore | s in t.signals)
inv10 C: all t : Track | all j : Junction | (j in t.succs) implies (some s : Semaphore | s in t.signals)
inv10 S: all t : Track, all j : Junction | (j in t.succs) implies (some s : Semaphore | s in t.signals)
inv10 C: all t : Track, j : Junction | (j in t.succs) implies (some s : Semaphore | s in t.signals)
inv9 B: all t : Track | all j : Junction | j not in t.succs implies (all s : Semaphore | s not in t.signals)
inv9 B: all t : Track | all j : Junction | (j not in t.succs) implies (all s : Semaphore | s not in t.signals)
inv9 C: all t : Track | (all j : Junction | j not in t.succs) implies (all s : Semaphore | s not in t.signals)
inv9 C: all t : Track | (all j : Junction | j not in t.succs) implies (all s : Semaphore | s not in t.signals)
inv8 B: all ex : Exit | (some en : Entry | ex in en.^(succs))
inv8 E: 
NA H: THEME UPDATE
inv3 C: all t : Track | t in Exit iff no t.succs
inv4 C: all e : Track | e in Entry iff no succs.e
inv8 O: all ex : Exit | all en : Entry | ex in en.^(succs)
inv8 C: all ex : Exit | all en : Entry | ex in en.*(succs)
NA H: THEME UPDATE

