inv2 B: adj != ~adj
inv2 O: all n, n1 : Node | n->n1 in adj iff n1->n not in adj
inv2 C: all n, n1 : Node | n->n1 in adj => n1->n not in adj
inv2 U: all n, n1 : Node | n->n1 in adj and n1->n in adj => n1 != n
inv2 B: all n, n1 : Node | n->n1 in adj and n1->n in adj <=> n1 != n
inv2 B: all n, n1 : Node | n->n1 in adj and n1->n in adj <=> n1 = n
inv2 U: all n, n1 : Node | n->n1 in adj and n1->n in adj => n1 = n
inv2 U: all disj n, n1 : Node | n->n1 in adj and n1->n in adj => n1 = n
inv2 U: all n, n1 : Node | n->n1 in adj and n1->n in adj => n1 = n
inv2 U: all n, n1 : Node | n->n1 in adj and n1->n in adj => n = n1

