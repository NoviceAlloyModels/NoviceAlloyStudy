inv2 B: adj not in ~adj
inv2 T: all e: adj | e not in ~adj
inv2 T: all e: adj | ~e not in adj
inv2 U: all n1: Node, n2: Node | n1 -> n2 in adj implies n2 -> n2 not in adj
inv2 U: all n1: Node, n2: Node | (n1 -> n2) in adj implies (n2 -> n2) not in adj
inv2 U: all n1: Node, n2: Node | (n1 -> n2 in adj) implies ((n2 -> n2) not in adj)
inv2 U: all n1: Node, n2: Node | (n1 -> n2 in adj) implies (n2 -> n2 not in adj)
inv2 U: all n1, n2: Node | (n1 -> n2 in adj) implies (n2 -> n2 not in adj)
inv2 B: all n1, n2: Node | n1->n2 in adj implies n2->n1 in adj
inv2 S: a: adj | a not in adj
inv2 T: all a: adj | a not in adj
inv2 U: adj & ~adj in iden
inv2 C: no adj & ~adj
inv2 U: adj & ~adj in iden
inv2 C: no adj & ~adj
inv2 U: adj & ~adj in iden
inv2 C: no adj & ~adj

