inv8 U: all  a,b,c : Node | (a!= b and  a !=c and b!=c) => (a in adj.b and c in b.adj) => c in a.adj
inv8 B: inv5	all  a,b,c : Node | (a!= b and  a !=c and b!=c) => (a in adj.b and c in b.adj) => c in a.adj	}		pred inv5{	no iden & adj		all n : Node | n not in n.adj
inv8 B: inv5	}		pred inv5{	no iden & adj		all n : Node | n not in n.adj
inv8 C: all  a,b,c : Node | (a in adj.b and c in b.adj) => c in a.adj
inv8 O: all n : Node | n.adj.adj = n.adj
inv8 B: all n : Node | n in adj.n.adj.adj
inv8 B: all n : Node | n in adj.(n.adj.adj)
inv8 B: all n1 : Node | some n2 : n1.adj.adj | n2 in n1.adj
inv8 S: all n1 : Node | some n2 in n1.adj.adj => n2 in n1.adj
inv8 C: all n1,n2 : Node | n2 in n1.adj.adj => n2 in n1.adj
inv8 S: all disj, n1,n2 : Node | n2 in n1.adj.adj => n2 in n1.adj
inv8 U: all disj n1,n2 : Node | n2 in n1.adj.adj => n2 in n1.adj
inv8 C: all  a,b,c : Node | (a in adj.b and c in b.adj) => c in a.adj		all n1,n2 : Node | n2 in n1.adj.adj => n2 in n1.adj		all disj n1,n2 : Node | n2 in n1.adj.adj => n2 in n1.adj

