inv3 U: all v1, v2 : Node | v1->v2 in adj implies not v1->v1 in adj
inv3 U: all v1, v2 : Node | v1->v2 in adj implies not (v1->v1 in adj and v2->v2 in adj)
inv3 U: all v1, v2 : Node | v1->v2 in adj implies not (v2->v1 in adj and v2->v2 in adj)
inv3 U: all v1, v2 : Node | v1->v2 in adj implies not v2->v1 in adj
inv3 T: all v1, v2, v3 : Node | v1->v2 in adj and v2->v3 implies not v1 = v3
inv3 U: all v1, v2, v3 : Node | v1->v2 in adj and v2->v3 in adj implies not v1 = v3
inv3 B: all v1, v2, v3 : Node | v1->v2 in adj and v2->v3 in adj implies v1 = v3
inv3 S: v1.adj and v2.adj implies v1 = v2
inv3 T: adj.adj implies not adj = adj
inv3 B: all v1, v2, v3 : Node | v1->v2 in adj and v2->v3 in adj implies v1 = v3 & v1
inv3 B: all v1, v2, v3 : Node | v1->v2 in adj and v2->v3 in adj implies v1 = v3 & v3
inv3 U: all v1, v2 : Node | v1->v2 in adj and v2->v1 in adj implies v1 = v2 & v1
inv3 U: all v1, v2 : Node | v1->v2 in adj and v2->v1 in adj implies not v1 = v2 & v1
inv3 U: all v1, v2 : Node | v1->v2 in adj and v2->v1 in adj implies not v1 = v2 & v1
inv3 S: all v : Node | no v.adj & x
inv3 U: all v : Node | no v.adj & v
inv3 C: all v : Node | no v.^adj & v
inv3 C: all v : Node | no v.(^adj) & v
inv3 C: all v : Node | no v.(^adj) & v

