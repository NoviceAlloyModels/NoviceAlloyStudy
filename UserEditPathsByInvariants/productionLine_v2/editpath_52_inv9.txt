inv9 U: end in begin.*succ	all w : Workstation | w not in w.^succ
inv9 O: end in begin.*succ	all w : Workstation | w not in w.^succ && some succ.w
inv9 U: end in begin.*succ	all w : Workstation | w not in w.^succ && (w != begin => some succ.w)
inv9 U: end in begin.*succ	no end.succ	all w : Workstation | w not in w.^succ && (w != begin => some succ.w)
inv9 U: no succ.begin	no end.succ	all w : Workstation | w != begin => one succ.w	all w : Workstation | w != end => one w.succ
inv9 C: no succ.begin	no end.succ	all w : Workstation | w != begin => one succ.w	all w : Workstation | w != end => one w.succ	all w : Workstation | w not in w.^succ
inv9 C: no end.succ	all w : Workstation | w != begin => one succ.w	all w : Workstation | w != end => one w.succ	all w : Workstation | w not in w.^succ
inv9 C: all w : Workstation | w != begin => one succ.w	all w : Workstation | w != end => one w.succ	all w : Workstation | w not in w.^succ
inv9 U: all w : Workstation | w != end => one w.succ	all w : Workstation | w not in w.^succ
inv9 C: all w : Workstation | w != begin => one succ.w	all w : Workstation | w != end => one w.succ	all w : Workstation | w not in w.^succ

