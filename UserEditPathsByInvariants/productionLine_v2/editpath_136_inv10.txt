inv10 O: all w: Workstation, c: Component, p: Product | p in c.^(parts) => p in w && c in w.^(succ)
inv10 O: all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2 && w.^(succ) in c1
inv10 B: all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation
inv10 B: all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation && w not in c1.workstation
inv10 B: all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation-c2.workstation
inv10 B: all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation
inv10 O: all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation && w.^(succ) not in c2.workstation
inv10 B: all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation && w not in c1.workstation
inv10 B: all w: Workstation, c: Component | w in c.^(parts).workstation && w.^(succ) in c.workstation
inv10 B: all w: Workstation, c: Product | w in c.^(parts).workstation && w.^(succ) in c.workstation
inv10 B: all w: Workstation, c: Product | some c.parts => w in c.^(parts).workstation && w.^(succ) in c.workstation
inv10 B: all w: Workstation, p: Product | some p.^(parts) => w in p.^(parts).workstation && w.^(succ) in p.workstation
inv10 B: all w: Workstation, p: Product | some p.^(parts) => w in p.^(parts).workstation-p.workstation && w.^(succ) in p.workstation-p.^(parts).workstation
inv10 B: all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation && w.^(succ) in c1.workstation && w not in c1.workstation
inv10 B: all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation-c1.workstation && w.^(succ) in c1.workstation-c2.workstation
inv10 B: all w: Workstation, c1, c2: Product | c2 in c1.^(parts) => w in c2.workstation-c1.workstation && w.^(succ) in c1.workstation-c2.workstation
inv10 O: all w: Workstation, c1, c2: Component | c1 in c2.^(parts) => w in c2.workstation-c1.workstation && w.^(succ) in c1.workstation-c2.workstation
inv10 B: all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation-c1.workstation && w.^(succ) in c1.workstation-c2.workstation
inv10 B: all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation-c1.workstation && w.succ in c1.workstation-c2.workstation
inv10 B: all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation-c1.workstation && w.^(succ) in c1.workstation-c2.workstation	all w: Workstation, p: Product | some p.^(parts) => w in p.^(parts).workstation-p.workstation && w.^(succ) in p.workstation-p.^(parts).workstation
inv10 B: all w: Workstation, c1, c2: Component | c2 in c1.^(parts) => w in c2.workstation-c1.workstation && w.^(succ) in c1.workstation-c2.workstation
inv10 B: all disj w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation-c1.workstation && w1 in c1.workstation-c2.workstation && w1 in w2.^(succ)
inv10 B: all disj w1, w2: Workstation, c1, c2: Component | c2 in c1.parts => w2 in c2.workstation-c1.workstation && w1 in c1.workstation-c2.workstation && w1 in w2.^(succ)
inv10 B: all disj w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation-c1.workstation && w1 in c1.workstation-c2.workstation && w1 in w2.^(succ)
inv10 B: all disj w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation-c1.workstation && w1 in c1.workstation-c2.workstation && w1 in w2.^(succ) && w1 != w2
inv10 B: all disj w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation && w1 in c1.workstation && w1 in w2.^(succ) && w1 != w2
inv10 B: all disj w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation && w1 in c1.workstation && w2 in w1.^(succ)
inv10 O: all w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation && w1 in c1.workstation && w2 in w1.^(succ)
inv10 O: all w1, w2: Workstation, c1, c2: Product | c2 in c1.^(parts) => w2 in c2.workstation && w1 in c1.workstation && w2 in w1.^(succ)
inv10 B: all w1, w2: Workstation, c1, c2: Product | c2 in c1.^(parts) && w2 in c2.workstation && w1 in c1.workstation => w2 in w1.^(succ)
inv10 B: all w1, w2: Workstation, c1, c2: Product | c2 in c1.^(parts) && w2 in c2.workstation && w1 in c1.workstation => w1 in w2.^(succ)
inv10 S: all w1, w2: Workstation, c1, c2: Components | c2 in c1.^(parts) && w2 in c2.workstation && w1 in c1.workstation => w1 in w2.^(succ)
inv10 B: all w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) && w2 in c2.workstation && w1 in c1.workstation => w1 in w2.^(succ)
inv10 O: all w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) => w2 in c2.workstation && w1 in c1.workstation && w1 in w2.^(succ)
inv10 O: all w1, w2: Workstation, c1, c2: Product | c2 in c1.^(parts) => w2 in c2.workstation && w1 in c1.workstation && w1 in w2.^(succ)
inv10 B: all w1, w2: Workstation, c1, c2: Component | c2 in c1.^(parts) && w2 in c2.workstation && w1 in c1.workstation => w1 in w2.^(succ)

