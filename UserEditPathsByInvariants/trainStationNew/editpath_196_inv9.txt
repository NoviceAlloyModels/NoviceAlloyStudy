inv9 S: all t : Track, j : Juntion | j in t.succs => no Semaphore in t.signals
inv9 T: all t : Track, j : Junction | j in t.succs => no Semaphore in t.signals
inv9 B: all t : Track, j : Junction | j in t.succs => Semaphore not in t.signals
inv9 B: all t : Track, j : Junction | j in succs.t => Semaphore not in t.signals
inv9 B: all t : Track, j : Junction | j in succs.t <=> Semaphore not in t.signals
inv9 B: all t : Track | Junction in succs.t => Semaphore not in t.signals
inv9 B: all t : Track | Junction in succs.t => Semaphore not in t.signals
inv9 T: all t : Track | Junction in succs.t => no Semaphore in t.signals
inv9 T: all t : Track | Junction in succs.t => no (Semaphore in t.signals)
inv9 T: all t : Track | Junction in succs.t => no Semaphore in t.signals
inv9 B: all t : Track | Junction in succs.t => no (Semaphore & t.signals)
inv9 B: all t : Track | Junction in t.succs => no (Semaphore & t.signals)
inv9 B: all t : Track | Junction in t.succs <=> no (Semaphore & t.signals)
inv9 B: all t : Track | Junction in t.succs => no (Semaphore & t.signals)
inv9 C: all t : Track | no (Junction & t.succs) => no (Semaphore & t.signals)
inv9 C: all t : Track | no (Junction & t.succs) => no (Semaphore & t.signals)

