inv3 T: all t : Track in Exit | no t.succs
inv3 U: all t : Track | t in Exit implies no t.succs
inv3 U: all t : Track | t in Exit implies no t.^succs
inv3 U: all t : Track | t in Exit implies no t.succs
inv3 U: all t : Track | t in Exit implies no t.succs
inv3 U: all t : Track | t in Exit implies no t.succs
inv3 S: all t : Track | t in Exit implies empty t.succs
inv3 U: all t : Track | t in Exit implies no t.succs
inv3 T: all t : Track | t in Exit implies none t.succs
inv3 U: all t : Track | t in Exit implies no t.succs
inv3 S: all t : Track , all t1 : Track - {t} | t in Exit implies t1 not in t.succs
inv3 S: all t : Track , all t1 : Track - {t} | t in Exit implies t1 not in t.succs
inv3 S: all t : Track , all t1 : Track - {t} | t in Exit implies t1 not in t.succs
inv3 U: all t : Track| all t1 : Track - {t} | t in Exit implies t1 not in t.succs
inv3 B: all t : Track| some t1 : Track - {t} | t in Exit implies t1 not in t.succs
inv3 B: all t : Track| some t1 : Track - {t} | t in Exit implies t1 not in t.^succs
inv3 S: all t : Track| t in Exit implies no (t.succs & Tracks)
inv3 U: all t : Track| t in Exit implies no (t.succs & Track)
inv3 U: all t : Track| t in Exit implies no (t.succs & Track - {t})
inv3 U: all t : Track| t in Exit implies no (t.^succs & Track - {t})
inv3 U: all t : Track| t in Exit implies no (t.succs & Track)
inv3 S: all t : Track| (t in Exit implies no (t.succs & Track)) and some (t.~succs)	a
inv3 B: all t : Track| (t in Exit implies no (t.succs & Track)) and some (t.~succs)

