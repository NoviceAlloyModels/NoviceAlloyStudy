inv4 U: all e:Entry | no e.prev
inv4 U: all e:Entry | no e.succs.prev
inv4 U: all e:Entry | no (e.succs).prev
inv4 T: all e:Entry | no (e.succs).prev[e]
inv4 U: all e:Entry | no prev[e]
inv4 U: all e:Entry | #prev[e]=0
inv4 S: all e:Entry | #prevs[e]=0
inv4 S: all e:Entry | no prevs[e]
inv4 S: all e:Entry | no e.succs.prevs[e]
inv4 S: all e:Entry | first = e
inv4 S: all e:Entry | Track.succs.first = e
inv4 S: all e:Entry, t:Track | t.succs.first = e
inv4 S: all e:Entry, t:Track | t.succs.first = Entry
inv4 S: all e:Entry, t:Track | e in t.succs => t.succs.first = e
inv4 S: some first e:Entry | e in Track
inv4 S: some first e:Entry | e in Track
inv4 S: some first e:Entry | e in Track

