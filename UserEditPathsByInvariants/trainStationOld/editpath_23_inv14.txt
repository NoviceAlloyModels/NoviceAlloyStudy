inv14 S: always ( all t:Train | some t.pos and some (t.pos.signal :>Green) implies (t.pos'.signal in  Siganl-Green)
inv14 S: always ( all t:Train | (some t.pos and some (t.pos.signal :>Green) )implies (t.pos'.signal in  Siganl-Green) )
inv14 B: always ( all t:Train | (some t.pos and some (t.pos.signal :>Green) )implies (t.pos'.signal in  Signal-Green) )
inv14 S: always ( all t:Train | (some t.pos and one t.pos.signal some (t.pos.signal :>Green) )implies (t.pos'.signal in  Signal-Green) )
inv14 B: always ( all t:Train | (some t.pos and one t.pos.signal and some (t.pos.signal :>Green) )implies (t.pos'.signal in  Signal-Green) )
inv14 B: always ( all t:Train | (some t.pos and  one (t.pos.signal :>Green) )implies (t.pos'.signal in  Signal-Green) )
inv14 O: always ( all t:Train | (some t.pos and  one (t.pos.signal :>Green) )implies (t.pos.signal in  Signal-Green) )
inv14 O: always ( all t:Train | (some t.pos and  one (t.pos.signal :>Green) and t.pos != t.pos' )implies (t.pos.signal in  Signal-Green) )
inv14 O: always ( all t:Train | (some t.pos and  one (t.pos.signal :>Green)  )implies (t.pos != t.pos' and t.pos.signal in  Signal-Green) )
inv14 O: always ( all t:Train | (some t.pos and  one (t.pos.signal :>Green) and t.pos != t.pos' )implies (t.pos.signal in  Signal-Green) )
inv14 B: always ( all t:Train | (some t.pos and  one (t.pos.signal :>Green) and no t.pos' )implies (t.pos.signal in  Signal-Green) )
inv14 U: always ( all t:Train | (some t.pos and  one (t.pos.signal :>Green) and no t.pos' )implies (t.pos'.signal in  Signal-Green) )
inv14 B: always ( all t:Train | (some t.pos and  one (t.pos.signal :>Green) )implies (t.pos'.signal in  Signal-Green) )
inv14 B: always ( all t:Train | ( one (t.pos.signal :>Green) )implies (t.pos'.signal in  Signal-Green) )
inv14 O: always ( all t:Train | ( one (t.pos.signal :>Green) )implies (t.pos.signal in  Signal-Green) )
inv14 B: always ( all t:Train | ( one (t.pos.signal :>Green) )implies after (t.pos.signal in  Signal-Green) )
inv14 B: always ( all t:Train | (some t.pos' and  one (t.pos.signal :>Green) )implies after (t.pos.signal in  Signal-Green) )
inv14 B: always ( all t:Train | ( one (t.pos.signal :>Green) )implies after (t.pos.signal in  Signal-Green) )
inv14 B: always ( all t:Train | ( one (t.pos.signal :>Green) )implies eventually (t.pos.signal in  Signal-Green) )
inv14 B: always ( all t:Train | let tr=t.pos | ( one (tr.signal :>Green) )implies after (tr.signal in  Signal-Green) )
inv14 B: always ( all t:Train | let tr=t.pos |pos!=pos' and ( one (tr.signal :>Green) )implies after (tr.signal in  Signal-Green) )
inv14 B: always ( all t:Train | (some t.pos and  one (t.pos.signal :>Green) )implies after (t.pos.signal in  Signal-Green) )
inv14 B: ( all t:Train | (some t.pos and  one (t.pos.signal :>Green) )implies after (t.pos.signal in  Signal-Green) )
inv14 B: always ( all t:Train | (some t.pos and  one (t.pos.signal :>Green) )implies after (t.pos.signal in  Signal-Green) )
inv14 S: always ( all t:Train | (some t.pos and  one (t.pos.signal :>Green) ) implies (eventually t.pos'!=t.pos and (t.pos.signal in  Signal-Green) )
inv14 O: always ( all t:Train | (some t.pos and  one (t.pos.signal :>Green) ) implies (eventually t.pos'!=t.pos and (t.pos.signal in  Signal-Green) ))
inv14 T: always ( all t:Train | eventually (some t.pos  and  one (t.pos.signal :>Green) and t.pos'!=pos ) implies (t.pos.signal in  Signal-Green) )
inv14 O: always ( all t:Train | eventually (some t.pos  and  one (t.pos.signal :>Green) and t.pos' !=t. pos ) implies (t.pos.signal in  Signal-Green) )
inv14 B: always ( all t:Train | eventually (some t.pos  and  one (t.pos.signal :>Green) and t.pos' !=t. pos and some t.pos' ) implies (t.pos.signal in  Signal-Green) )
inv14 B: always ( all t:Train | eventually (some t.pos  and  one (t.pos.signal :>Green) and t.pos' !=t. pos and some t.pos') implies (t.pos.signal in  Signal-Green) )
inv14 B: always ( all t:Train | eventually (some t.pos  and  one (t.pos.signal :>Green) and t.pos' !=t. pos and some t.pos') implies (t.pos.signal in  Signal-Green) )

