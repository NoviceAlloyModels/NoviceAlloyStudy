inv4 T: all s : State | s.trans in State
inv4 T: all s : State | Init.trans in State
inv4 T: all s : State | some e : Event | s.(e.(Init.trans)) in State
inv4 U: all s : State | some e : Event | e.(Init.trans) in State
inv4 U: all s : State | some e : Event | e.(s.trans) in State
inv4 B: all s : State | some e : Event | e.(s.trans) in Init
inv4 U: all s : State | some e : Event | e.(s.trans) in State
inv4 U: all s : State | some e : Event | e.(s.trans) in State
inv4 U: all s : State | some e : Event | e.(s.trans) in State
inv4 C: let adj = { s1, s2 : State | some e : Event | s1->e->s2 in trans} | State in Init.^adj
inv4 C: let adj = { s1, s2 : State | some e : Event | s1->e->s2 in trans} | State in Init.^adj

