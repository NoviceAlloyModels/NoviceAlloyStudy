inv3 T: all e: Event, s:State | e in s.trans
inv3 B: all e: Event, s:State |some s2: State | e->s2 in s.trans
inv3 O: all e: Event, s:State |one s2: State | e->s2 in s.trans
inv3 U: all e: Event, s:State | some s1,s2:State |  (s.trans = e->s2 and s.trans = e->s1) implies s1=s2
inv3 B: all s:State | some s1,s2:State, e:Event |  (s.trans = e->s2 and s.trans = e->s1) implies s1=s2
inv3 C: all s:State | all e:Event| lone e.(s.trans)
inv3 S: all s:State | some s.trans		/*	All states are reachable from an initial state.	*/
inv3 S: all s:State | lone s.trans		/*	All states are reachable from an initial state.	*/
inv3 C: all s:State | all e:Event| lone e.(s.trans)

