inv4 S: State in ^fromState[Init]	}		/*	All the states have the same events available.	*/	fun fromState[s1: State] : set State {  		s1.trans[Event]
inv4 S: State in fromState[Init]
inv4 S: State in fromState[Init].fromState
inv4 S: State in fromState[Init].^fromState	}		/*	All the states have the same events available.	*/	fun fromState[s: set State] : set State {  		s.trans[Event]
inv4 S: State in (fromState[Init]).^fromState	}		/*	All the states have the same events available.	*/	fun fromState[s: set State] : set State {  		s.trans[Event]
inv4 S: State in (fromState[Init]).fromState
inv4 S: State in Init.lookupState
inv4 S: State in Init.^lookupState	}		/*	All the states have the same events available.	*/	fun lookupState[s: set State] : set State {  		s.trans[Event]
inv4 T: State in ^(lookupState[Init])	}		/*	All the states have the same events available.	*/	fun lookupState[s: set State] : set State {  		s.trans[Event]
inv4 S: State in Init.^lookupState	}		/*	All the states have the same events available.	*/	fun lookupState[s: set State] : set State {  		s.trans[Event]
inv4 S: State in Init.^lookupState
inv4 S: State in Init.^lookupState	}		/*	All the states have the same events available.	*/	fun lookupState[s: set State] : set State {  		s.trans[Event]
inv4 S: State in Init.^lookupState
inv4 S: State in Init.^lookupState
inv4 S: State in Init + Init.^lookupState
inv4 S: State in Init.^lookupState
inv4 S: State in Init.^lookupState
inv4 S: State in Init.^lookupState
inv4 S: State in Init.^lookupState
inv4 S: State in Init.lookupState
inv4 S: State in State.lookupState
inv4 S: State in Init.^lookupState
inv4 S: State in Init.^lookupState
inv4 S: State in Init.^lookupState
inv4 C: State in Init.^{s1, s2: State | s2 in s1.trans[Event]}

