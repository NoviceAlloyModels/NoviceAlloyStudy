inv4 U: all u:User, w:Work | w in u.profile implies lone (u.visible & w)
inv4 U: all u : User | all w : Work | some (u<:visible).w implies lone w
inv4 B: all u : User, w1, w2 : Work | w1 != w2 and (w1 + w2) in u.visible implies (w1.source != w2.source and w1.ids != w2.ids)
inv4 U: all u:User, w:Work | w in u.profile implies lone (u.visible & w)
inv4 B: all u : User, w : Work {	    w in u.profile implies lone (w.ids.~ids & u.profile)	  }
inv4 B: all u : User, w : Work {	    (w in u.profile) implies one (w.ids.(~ids) & u.profile)	  }
inv4 T: all u : User, w : Work {	    (w in u.profile) implies one (one w.ids)	  }
inv4 B: all u : User, w : Work {	    (w in u.profile) implies one (w.ids)	  }
inv4 T: all u : User, w : Work {	    (w in u.profile) implies one (one w.ids.(~ids) & u.profile)	  }
inv4 B: all u : User, w : Work {	    (w in u.profile) implies one (w.ids.(~ids) & u.profile)	  }
inv4 B: all u : User, w : Work {	    (w in u.profile) implies ((one (w.ids.~ids & u.profile)) and (one (w.ids)))	  }
inv4 B: all u : User, w : Work {	    (w in u.profile) implies ((one (w.ids.~ids & u.profile)) )	  }
inv4 B: all u : User, w : Work {	    (w in u.profile) implies ((one (w.ids.~ids & u.profile)) and (one (w.ids)))	  }
inv4 B: all u : User, w : Work {	    (w in u.profile) implies ((one (w.ids.~ids & u.profile)))	  }
inv4 B: all u : User, w : Work {	    (w in u.profile) implies ((one (w.ids.~ids & u.profile)) and (one (w.ids)))	  }
inv4 U: all u:User, w:Work | w in u.profile implies lone (u.visible & w)
inv4 B: all u : User | all w1, w2 : Work | (w1 != w2 and (w1 + w2) in u.visible) implies (no w1.ids & w2.ids and w1.source != w2.source)
inv4 O: all u:User, w1,w2:Work | ((w1=w2) and (w1 in u.visible)) implies w2 not in u.visible

