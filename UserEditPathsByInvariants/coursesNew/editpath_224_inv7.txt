inv7 U: all s: Student | (all c : s.enrolled | lone (c.projects &  s.projects)  )
inv7 U: all s: Student | (all c : s.enrolled | lone (c.projects &  s.projects)  )
inv7 S: all s : Student | (all c : p.enrolled | #(c.projects) <= 1 )
inv7 B: all s : Student | (all c : s.enrolled | #(c.projects) <= 1 )
inv7 S: all s : Student | (all x,y : s.projects.c | x != y)
inv7 S: all s : Student | (all p,q : Projects | (some c : s.enrolled | p in c implies q not in c))
inv7 B: all s : Student | (all p,q : Project | (some c : s.enrolled | p in c implies q not in c))
inv7 B: all s : Student | (all p,q : Project | (some c : s.enrolled | p in c.projects implies q not in c.projects))
inv7 B: all s : Student | (all p,q : Project | (all c : s.enrolled | p in c.projects implies q not in c.projects))
inv7 B: all s : Student | (all p,q : s.projects | (all c : s.enrolled | p in c.projects implies q not in c.projects))

