inv5 B: all s: Student, p: Person, pr: Project | p = s && s in pr.~projects
inv5 B: all s: Student, p: Person, pr: Project | p != s && s in pr.~projects
inv5 B: all s: Student, p: Person, pr: Project | p in s && s in pr.~projects
inv5 T: all s: Student, p: Person, pr: Project | p = s && s in pr.~projects	  	all pr: Project, s: Student | #(s in pr.~projects)>0
inv5 T: all s: Student, p: Person, pr: Project | p = s && s in pr.~projects	  	all pr: Project, s: Student | some pr.~projects
inv5 T: all s: Student, p: Person, pr: Project | p = s && s in pr.~projects	  	all pr: Project, s: Student | some pr.~projects
inv5 B: all s: Student, p: Person, pr: Project | p = s && s in pr.~projects	  	all pr: Project, s: Student | some s.projects
inv5 B: all s: Student, p: Person, pr: Project | p = s && s in pr.~projects	  	all s: Student | some s.projects
inv5 B: all s: Student, p: Person, pr: Project | p = s && s in pr.~projects	  	all s: Student | #s.projects>0
inv5 T: all p: Person, pr: p.projects | p not Student => p not in pr	  	all s: Student | #s.projects>0
inv5 B: all p: Person, pr: p.projects | p not in Student => p not in pr	  	all s: Student | #s.projects>0
inv5 B: all p: Person, pr: Project | p not in Student => p not in pr.~projects	  	all s: Student | #s.projects>0
inv5 B: all p: Person, pr: Project | p not in Student => p not in pr.~projects	  	all s: Person | #s.projects>0
inv5 T: all p: Person, pr: Project | p not in Student => p not in pr.~projects	  	all s: Project | #s.~projects>0
inv5 B: all p: Person, pr: Project | p not in Student => p not in pr.~projects	  	all s: Project | #s.~projects.~enrolled>0

