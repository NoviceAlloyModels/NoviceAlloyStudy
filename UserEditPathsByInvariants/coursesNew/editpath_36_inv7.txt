inv7 E:
inv7 E:
inv7 B: all c: Course | all x : Student| c in x.enrolled => one p: Project | p in c.projects && p in x.projects
inv7 B: all c: Course | all s: Student | one p: Project | p in c.projects && p in s.projects
inv7 B: all c: Course | all s: Student | one p: Project | p in c.projects && s in projects.p
inv7 S: all c: Course | all s: Student | one (p in c.projects && s in projects.p)
inv7 B: all c: Course | all s: Student | one p: Project | (p in c.projects && s in projects.p)
inv7 T: all x : Student | all c :  Course | some y, z : Project | y -> x in c.projects and z -> x in c.projects implies y = z
inv7 T: all x : Student | all c :  Course | some y, z : Project | y -> x in c.projects && z -> x in c.projects => y = z
inv7 T: all x : Student | all c :  Course | some y, z : Project | (y -> x in c.projects) && (z -> x in c.projects) => y = z
inv7 B: all s: Person | all c: Course | one p: Project | p in s.projects && s in Student && p in c.projects => c in s.enrolled

