inv6 B: all c: Course, s: Student, p: Project | s->p in projects iff s->c in enrolled and c->p in projects
inv6 B: all c: Course, s: Student, p: Project | s->p in projects iff s->c in enrolled and c->p in projects
inv6 B: all c: Course, s: Student, p: Project | p in s.projects implies c in s.enrolled
inv6 B: all c: Course, p: Person, proj: Project | p in Student and proj in p.projects implies c in p.enrolled
inv6 T: all c: Course, p: Person, proj: Project | p in Student and proj in projects.p implies c in enrolled.p
inv6 B: all c: Course, p: Person, proj: Project | p in Student and proj in p.projects implies c in p.enrolled
inv6 B: all c: Course, s: Student, proj: Project | proj in s.projects implies c in s.enrolled
inv6 B: all s: Student| some s.enrolled.projects
inv6 U: all s: Student, proj: Project | proj in s.projects implies proj in s.enrolled.projects
inv6 U: all s: Student, proj: Project | proj in s.projects implies proj in s.enrolled.projects

