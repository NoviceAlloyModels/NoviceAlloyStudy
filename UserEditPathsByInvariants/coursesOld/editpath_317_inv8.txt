inv8 U: all p : Professor | all c: Course | c in p.teaches implies c not in p.enrolled
inv8 T: all p : Professor | all c: Course | c in p.teaches implies c not in p.enrolled	}		fun colleagues[p : Professor] : set Professor{	  	(Professor-p).(p.teaches)
inv8 T: all p : Professor | all c: Course | c in p.teaches implies c not in p.enrolled	}		fun colleagues[p : Professor] : set Professor{	  	(Professor-p).teaches in (p.teaches)
inv8 T: all p : Professor | all c: Course | c in p.teaches implies c not in p.enrolled	}		fun colleagues[p : Professor] : set Professor{	  	p implies (Professor-p).teaches = (p.teaches)
inv8 T: all p : Professor | all c: Course | c in p.teaches implies c not in p.enrolled	}		fun colleagues[p : Professor] : set Professor{		p implies (Professor-p).teaches = (p.teaches)
inv8 T: all p : Professor | all c: Course | c in p.teaches implies c not in p.enrolled	}		fun colleagues[p : Professor] : set Professor{		all p : Professor | p implies (Professor-p).teaches = (p.teaches)
inv8 T: all p : Professor | all c: Course | c in p.teaches implies c not in p.enrolled	}		fun colleagues[p : Professor] : set Professor{		all p1 : Professor | p1 implies (Professor-p).teaches = (p.teaches)
inv8 T: all p : Professor | all c: Course | c in p.teaches implies c not in p.enrolled	}		fun colleagues[p : Professor] : set Professor{		all p1 : Professor | p1 implies p1.teaches = (p.teaches)
inv8 T: all p : Professor | all c: Course | c in p.teaches implies c not in p.enrolled	}		fun colleagues[p : Professor] : set Professor{		Professor-p.teaches = (p.teaches)
inv8 U: all p : Professor | all c: Course | c in p.teaches implies c not in p.enrolled
inv8 U: all p : Professor | all c: p.teaches | c not in p.enrolled

