inv7 B: all s: Student | some c: Course | s.projects in c.projects
inv7 B: all s: Student | some c: Course | c in s.enrolled and c.projects in s.projects
inv7 B: all s: Student | some c: Course | c.projects in s.projects
inv7 S: all s: Student, c:Course | some p: Projects | (s.enrolled).projects in s.projects
inv7 B: all s: Student, c:Course | some p: Project | (s.enrolled).projects in s.projects
inv7 T: all s: Student| some (s.enrolled).projects in s.projects
inv7 S: all s: Student, c:Course | c->s in enrolled implies (some p: Projects | c->p in projects and s->p in projects)
inv7 U: all s: Student, c:Course | c->s in enrolled implies (some p: Project | c->p in projects and s->p in projects)
inv7 U: all s: Student, c:Course | c->s in enrolled implies (some p: Project | c->p in (Course <: projects) and s->p in (Person <: projects))
inv7 S: all s: Student, c:Course | c->s in enrolled implies (some p: c.projects&s.projects)
inv7 U: all s: Student, c:Course | c->s in enrolled implies (some p: Project | p in c.projects&s.projects)
inv7 U: all s: Student, c:Course | c->s in enrolled implies (some p: Project | p in (c.projects)&(s.projects))
inv7 U: all s: Student, c:Course | c->s in enrolled implies (some p: Project | p in c.(Course <: projects)&s.(Person <: projects))
inv7 B: all s: Student, c:Course | s->c in enrolled implies (some p: Project | p in c.(Course <: projects)&s.(Person <: projects))
inv7 B: all s: Student, c:Course | s->c in enrolled implies (some p: Project | p in c.projects and p in s.projects)
inv7 B: all s: Student, c:Course | s->c in enrolled implies (one p: Project | p in c.projects and p in s.projects)
inv7 U: all s: Student, c:Course | s->c in enrolled implies (lone p: Project | p in c.projects and p in s.projects)
inv7 T: all s: Student, c:Course | s->c in enrolled implies (lone p: Project | p in c.projects.~(s.projects))
inv7 U: all s: Student, c:Course | s->c in enrolled implies (lone p: Project | p in c.projects&s.projects)

