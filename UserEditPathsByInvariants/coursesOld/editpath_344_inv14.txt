inv14 S: all s : Student | 1,p2 : Project| p1!=p2 and (p1+p2) in s.projects
inv14 S: all s : Student | 1,p2 : Project| p1!=p2 and p1 in s.projects
inv14 S: all s : Student | p1,p2 : Project| p1!=p2 and p1 in s.projects
inv14 B: all s : Student , p1,p2 : Project| p1!=p2 and p1 in s.projects
inv14 B: all s : Student , p1,p2 : Project| p1!=p2 and (p1+p2) in s.projects
inv14 T: all s : Student , p1,p2 : Project| p1!=p2 and (p1+p2) in s.projects implies not p1.~projects & p2.~projects
inv14 T: all s : Student , p1,p2 : Project| p1!=p2 and (p1+p2) in s.projects implies (not p1.~projects & p2.~projects)
inv14 T: all s : Student , p1,p2 : Project| (p1!=p2 and (p1+p2) in s.projects) implies (not p1.~projects & p2.~projects)
inv14 T: all s : Student , p1,p2 : Project| (p1!=p2 and ({p1}+{p2}) in s.projects) implies (not p1.~projects & p2.~projects)
inv14 T: all s : Student , p1,p2 : Project| (p1!=p2 ) implies (not p1.~projects & p2.~projects)
inv14 T: all s : Student , p1,p2 : Project| (p1!=p2 and (p1+p2) in s.projects) implies (not p1)
inv14 T: all s : Student | all p1,p2 : Project | (p1!=p2 and (p1+p2) in s.projects) implies (not p1.~projects & p2.~projects)
inv14 T: all s : Student , p1,p2 : Project | (p1!=p2 and ((p1+p2) in s.projects)) implies (not p1.~projects & p2.~projects)
inv14 T: all s : Student , p1,p2 : Project | (p1!=p2 and ((p1+p2) in s.projects)) implies (not p1.projects & p2.~projects)
inv14 T: all s : Student , p1,p2 : Project | (p1!=p2 and ((p1+p2) in s.projects)) implies (not p1.projects & p2.projects)
inv14 B: all s : Student , p1,p2 : Project | (p1!=p2 and ((p1+p2) in s.projects))
inv14 T: all s : Student , p1,p2 : Project | (p1!=p2 and ((p1+p2) in s.projects)) implies (not (p1.~projects)-{s} & (p2.~projects)-{s})
inv14 E:
inv14 T: all s : Student , p1,p2 : Project | (p1!=p2 and p1 in s.projects and p2 in s.projects) implies (not p1.~projects & p2.~projects )
inv14 T: all s : Student , p1,p2 : Project | (p1!=p2 and p1 in s.projects and p2 in s.projects) implies (not (Person :> projects.p1) & (Person :> projects.p2) )
inv14 S: all s : Student ,p,p1: Project | (p+p1) in s.projects implies not p.projects
inv14 S: all s : Student , p,p1: Project | (p+p1) in s.projects implies not p.projects
inv14 S: all s : Student , p,p1: Project | (p+p1) in s.projects implies (not p.projects & p1.projects)
inv14 S: all s : Student, p,p1: Project | (p+p1) in s.projects
inv14 S: all s : Student, p,p1: Project | (p) in s.projects
inv14 S: all s : Student, p,p1: Project | (p+p1) in s.projects implies (p!=p1)
inv14 S: all s : Student, p,p1: Project | (p+p1) in s.projects
inv14 S: all s : Student, p,p1: Project | p in s.projects implies p1 in s.projects

