inv9 B: all p : Professor | all person : Person | all c : Course | c in p.enrolled and c in person.enrolled implies p.teaches&person.enrolled=none
inv9 B: all p,person : Person | all c : Course | c in p.enrolled and c in person.enrolled implies p.teaches&person.enrolled=none
inv9 B: all p1,p2 : Person | all c : Course | c in p1.enrolled and c in p2.enrolled implies (p1.teaches&p2.enrolled)=none
inv9 B: all p1,p2 : Person | all c,c2 : Course | c in p1.teaches and c in p2.enrolled and c != c2 implies (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 O: all p1,p2 : Person | all c,c2 : Course | c in p1.teaches and c in p2.enrolled  implies (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 O: all p1,p2 : Person | all c,c2 : Course | c in p1.teaches and c in p2.enrolled implies (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 B: all p1,p2 : Person | all c,c2 : Course | c in p1.teaches and c in p2.enrolled implies (c2 not in p1.enrolled and c2 not in p2.enrolled) or c=c2
inv9 U: all p1,p2 : Person | all c,c2 : Course | c in p1.teaches and c in p2.enrolled implies (c2 not in p1.enrolled and c2 not in p2.enrolled) or c=c2 or c!= c2
inv9 B: all p1,p2 : Person | all c,c2 : Course | (c in p1.teaches and c in p2.enrolled) and c!=c2 implies (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 B: all p1,p2 : Person | all c,c2 : Course | (c in p1.teaches and c in p2.enrolled) and c!=c2 iff (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 B: all p1,p2 : Person | all c,c2 : Course | (c in p1.teaches and c in p2.enrolled) and c!=c2 <=> (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 O: all p1,p2 : Person | all c,c2 : Course | (c in p1.teaches and c in p2.enrolled) <=> (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 B: all p1,p2 : Person | all c,c2 : Course | (c in p1.teaches and c in p2.enrolled) and c!=c2 implies (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 B: all p1,p2 : Person | all c,c2 : Course | (c in p1.teaches and c in p2.enrolled) and c!=c2 implies (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 B: all p1,p2 : Person | all c,c2 : Course | (c2 not in p1.enrolled and c2 not in p2.enrolled) implies ((c in p1.teaches and c in p2.enrolled) and c!=c2)
inv9 B: all p1,p2 : Person | all c,c2 : Course | (c in p1.teaches and c in p2.enrolled) and c!=c2 and p1!=p2 implies (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 B: all p1,p2 : Person | all c,c2 : Course |  (c2 not in p1.enrolled and c2 not in p2.enrolled) implies ((c in p1.teaches and c in p2.enrolled) and c!=c2 and p1!=p2)
inv9 B: all p1,p2 : Person | all c,c2 : Course | (c2 not in p1.enrolled and c2 not in p2.enrolled) implies ((c in p1.teaches and c in p2.enrolled) and c!=c2 and p1!=p2)
inv9 B: all p1,p2 : Person | all c,c2 : Course | (c2 not in p1.enrolled and c2 not in p2.enrolled) <=> ((c in p1.teaches and c in p2.enrolled) and c!=c2 and p1!=p2)
inv9 B: all p1,p2 : Person | all c,c2 : Course | (c in p1.teaches and c in p2.enrolled) and c!=c2 and p1!=p2 implies (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 O: all p1,p2 : Person | all c,c2 : Course | c in p1.enrolled and c in p2.teaches implies c2 not in p1.enrolled and c2 not in p2.enrolled
inv9 O: all p1,p2 : Person | all c,c2 : Course | c in p1.enrolled and c in p2.teaches implies (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 S: all p1 : Student | p2 : Professor | all c,c2 : Course | c in p1.enrolled and c in p2.teaches implies (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 S: all p1 : Student | p2 : Professor | all c,c2 : Course | c in p1.enrolled and c in p2.teaches implies (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 S: all s : Student | all p : Professor | all c,c2 : Course | c in p1.enrolled and c in p2.teaches implies (c2 not in p1.enrolled and c2 not in p2.enrolled)
inv9 B: all s : Student | all p : Professor | all c,c2 : Course | c in s.enrolled and c in p.teaches implies (c2 not in p.enrolled and c2 not in s.enrolled)
inv9 B: all s : Student | all p : Professor | all c,c2 : Course | c in s.enrolled and c in p.teaches implies (c2 not in p.enrolled and c2 not in s.enrolled)
inv9 B: all p1,p2: Professor | all c : Course | c in p1.teaches implies c not in p2.enrolled
inv9 B: all p1,p2: Professor | all c,c2 : Course | c in p1.enrolled and c in p2.enrolled implies not(c2 in p1.teaches and c2 in p2.enrolled)
inv9 B: all s : Student | all p : Professor | all c,c2 : Course | c in s.enrolled and c in p.teaches implies not(c2 in p.enrolled and c2 in s.enrolled)
inv9 B: all s : Student | all p : Professor | all c,c2 : Course | c in s.enrolled and c in p.teaches implies not(c2 in p.enrolled and c2 in s.enrolled)
inv9 B: all s : Student | all p : Professor | all c,c2 : Course | c in s.enrolled and c in p.enrolled implies not(c2 in p.teaches and c2 in s.enrolled)
inv9 B: all p1,p2 : Professor | all c,c2 : Course | (c in p1.enrolled and c in p2.enrolled) implies not(c2 in p1.teaches and c2 in p2.enrolled)
inv9 B: all p1,p2 : Professor | all c,c2 : Course | (c in p1.teaches and c in p2.teaches) or (c in p1.enrolled and c in p2.enrolled) implies not(c2 in p1.teaches and c2 in p2.enrolled)
inv9 B: all p1,p2 : Professor | all c,c2 : Course | (c in p1.teaches and c in p2.teaches) or (c in p1.enrolled and c in p2.enrolled) and c != c2 implies not(c2 in p1.teaches and c2 in p2.enrolled)
inv9 B: all p1,p2 : Professor | all c,c2 : Course | (c in p1.teaches and c in p2.teaches) or (c in p1.enrolled and c in p2.enrolled) and c != c2 and p1!=p2 implies not(c2 in p1.teaches and c2 in p2.enrolled)
inv9 B: all p1,p2 : Professor | all c,c2 : Course | (c in p1.teaches and c in p2.teaches) or (c in p1.enrolled and c in p2.enrolled) implies not(c2 in p1.teaches and c2 in p2.enrolled)
inv9 U: all p1,p2 : Professor | all c1:Course | (p1!=p2 and p1->c1 in teaches and p2->c1 in teaches) implies (all c2 : Course | p1->c2 in teaches implies p2->c2 not in enrolled)
inv9 U: all p1,p2 : Professor | all c1:Course | (p1!=p2 and p1->c1 in teaches and p2->c1 in teaches) implies (all c2 : Course | c2 in p1.teaches implies p2->c2 not in enrolled)
inv9 U: all p1,p2 : Professor | all c1:Course | (p1!=p2 and p1->c1 in teaches and p2->c1 in teaches) implies (all c2 : Course | c2 in p1.teaches implies c2 not in p2.enrolled)

