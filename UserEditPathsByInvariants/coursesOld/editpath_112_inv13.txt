inv13 S: all c : Course | some s : (c .~enrolled) | {	  	 max[Person . (c . grades)] = (s . (c . grades))	  	some (c . projects & s . projects)
inv13 B: all c : Course | some s : (c .~enrolled) | {	  	 max[Person . (c . grades)] = (s . (c . grades))	  	some (c . projects & s . projects)	   }
inv13 B: all c : Course | some s : (c.~enrolled) | 	  	 max[Person.(c.grades)] = (s.(c . grades)) implies	  	some (c . projects & s . projects)
inv13 B: all c : Course, s: (c.~enrolled) | 	  	 max[Person.(c.grades)] = (s.(c.grades)) implies	  	some (c . projects & s . projects)
inv13 B: all c : Course, s: (c.~enrolled) | 	  	 max[Student.(c.grades)] = (s.(c.grades)) implies	  		some (c.projects & s.projects)
inv13 B: all c : Course, s: (c.~enrolled) | 	  	 (s.(c.grades)) = max[Student.(c.grades)] implies	  		some (c.projects & s.projects)
inv13 B: all c: Course, s: (c.~enrolled) | 	  	 (s.(c.grades)) = max[Student.(c.grades)] implies	  		some (c.projects & s.projects)
inv13 B: all c: Course, s: (c.~enrolled) | 	  	 (s.(c.grades)) = max[Student.(c.grades)] &&	  		some (c.projects & s.projects)
inv13 B: all c: Course, s: (c.~enrolled) | 	  	 (s.(c.grades)) = max[Student.(c.grades)] iff	  		some (c.projects & s.projects)
inv13 S: all c: Course s: Student | 	  	 (s.(c.grades)) = max[Student.(c.grades)] 	  		some (c.projects & s.projects)
inv13 S: all c: Course, s: Student | 	  	 (s.(c.grades)) = max[Student.(c.grades)] 	  		some (c.projects & s.projects)
inv13 B: all c: Course, s: Student | 	  	 (s.(c.grades)) = max[Student.(c.grades)] and	  		some (c.projects & s.projects)
inv13 B: all c: Course, s: Student | 	  	 (s.(c.grades)) = max[Student.(c.grades)] implies	  		some (c.projects & s.projects)
inv13 B: all c: Course, s: Student | 	  	 (s.(c.grades)) = max[Student.(c.grades)] implies	  		some (c.projects & s.projects) && s in c.enrolled
inv13 B: all c: Course, s: Student | 	  	 (s.(c.grades)) = max[Student.(c.grades)] implies	  		some (c.projects & s.projects) && c in s.enrolled
inv13 B: all c: Course, s: Student | 	  	 c in s.enrolled && (s.(c.grades)) = max[Student.(c.grades)] implies	  		some (c.projects & s.projects)

