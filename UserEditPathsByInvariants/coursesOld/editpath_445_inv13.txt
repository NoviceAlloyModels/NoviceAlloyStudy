inv13 B: all s:Student, c: Course | some (s.projects & c.projects)
inv13 T: all s:Student, c: Course | c.grades.Person.first implies some (s.projects & c.projects)
inv13 T: all s:Student, c: Course | c.grades.s.first implies some (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first[c.grades.s] implies some (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first[c.grades.s] implies (s.projects & c.projects)
inv13 T: all s:Student, c: Course | c.grades.s implies (s.projects & c.projects)
inv13 B: all s:Student, c: Course | some (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first.c.grades.s implies some (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first.c.grades = s implies some (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first.c.grades implies some (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first.c.grades.s implies some (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first.c.grades.Student implies some (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first.c.grades.Grade implies some (s.projects & c.projects)
inv13 T: all s:Student, c: Course | c.grades implies (s.projects & c.projects)
inv13 T: all s:Student, c: Course | c.grades -> s implies (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first.c.grades implies (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first.c.grades.Grade implies (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first.c.grades.Person implies (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first.(s.c.grades) implies (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first.(s.c.grades) = s implies (s.projects & c.projects)
inv13 T: all s:Student, c: Course | first.(s.c.grades) = s implies (s.projects & c.projects)
inv13 T: all s:Student, c: Course | (first.(s.c.grades) & s) implies (s.projects & c.projects)
inv13 T: all s:Student, c: Course | (s.c.grades) & s implies (s.projects & c.projects)
inv13 T: all s:Student, c: Course | (s.c.grades) implies (s.projects & c.projects)
inv13 T: all s:Person, c: Course | ((s.c.grades) & s)implies (s.projects & c.projects)
inv13 T: all s:Person, c: Course | some (s.projects & c.projects & s.c.grades)
inv13 T: all s:Person, c: Course | some (s.projects & c.projects && s.c.grades)
inv13 T: all s:Person, c: Course | s->Grade implies (s.projects & c.projects)
inv13 T: all s:Person, c: Course | first.(s->Grade) implies (s.projects & c.projects)
inv13 O: all s:Person, c: Course | some (s.projects & c.projects)
inv13 T: all s:Person, c: Course | s.(c.grades) = last implies  (s.projects & c.projects)
inv13 U: all s:Person, c: Course | s.(c.grades) = last implies some (s.projects & c.projects)

