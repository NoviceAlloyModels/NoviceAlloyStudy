inv7 S: all s : Student, c : Course, p1, p2 : Project | s->c in enrolled and 	  s->p1 in Person<:projects and 	  c->p1 in Course<:projects and 	  s->p2 in Person<:projects and 	  c->p2 in Course<:projects implies p1 = p2
inv7 U: all s : Student, c : Course, p1, p2 : Project | s->c in enrolled and 	  s->p1 in Person<:projects and 	  c->p1 in Course<:projects and 	  s->p2 in Person<:projects and 	  c->p2 in Course<:projects implies p1 = p2
inv7 S: all s : Student, c : Course |lone p : Project | s->c in enrolled and 	  s->p in Person<:projects and 	  c->p in Course<:projects
inv7 S: all s : Student, c : Course | lone p : Project | s->c in enrolled and 	  s->p in Person<:projects and 	  c->p in Course<:projects
inv7 U: all s : Student, c : Course | lone p : Project | s->c in enrolled and 	  s->p in Person<:projects and 	  c->p in Course<:projects
inv7 B: all s : Student, c : Course | lone p : Project | c in s.enrolled and p in s.projects+c.projects
inv7 B: all s : Student, c : Course | lone p : Project | s->c in enrolled and p in s.projects+c.projects
inv7 T: all s : Student, c : Course | lone p : Project | s->c in enrolled and p in s.Person<:projects + c.Course<:projects
inv7 U: all s : Student, c : Course | lone p : Project | s->c in enrolled and s->p in Person<:projects and c->p in Course<:projects
inv7 U: all s : Student, c : Course | lone p : Project | s in enrolled.c and s in Person<:projects.p and c->p in Course<:projects
inv7 U: all s : Student, c : Course | lone p : Project | s->c in enrolled and s->p in Person<:projects and c->p in Course<:projects
inv7 S: all s : Student, c : s.enrolled | lone p in (s.projects)+(c.projects)
inv7 U: all s : Student, c : s.enrolled | lone  (s.projects&c.projects)
inv7 U: all s : Student, c : s.enrolled | lone s.projects & c.projects

