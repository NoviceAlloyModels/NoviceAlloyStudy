inv7 B: all s : Student | lone p : Project | p in s.projects implies p in s.enrolled.projects
inv7 T: all s : Student | all c : Course | lone s.projects in c.projects
inv7 T: all s : Student | all c : Course | lone (s.projects in c.projects)
inv7 T: lone (Student.projects in Course.projects)
inv7 B: lone (Student.projects&Course.projects)
inv7 B: lone Student.projects&Course.projects
inv7 B: lone Student.projects&Course.projects
inv7 B: lone Student.projects&Course.projects
inv7 T: all s : Student | all p1, p2 : projects | all c : Course | p1 in s.projects and p2 in s.projects and p1 in c.projects implies p2 not in c.projects
inv7 T: all s:Student|all p1,p2:projects|all c:Course|p1 in s.projects and p2 in s.projects and p1 in c.projects implies p2 not in c.projects
inv7 T: all p : Project | all c : Course | all s : Student | c in p.enrolled and s in p.projects implies lone p.projects&c.projects
inv7 U: all s : Student | all p1,p2 : Project | all c : Course | (p1 + p2) in s.projects and (p1 + p2) in c.projects implies p1=p2
inv7 U: all s : Student | all p : Project | all c : Course | p in s.projects and p in c.projects implies lone p
inv7 B: all s : Student | all p : Project | all c : Course | p in s.projects and p in c.projects
inv7 B: all s : Student | lone p : Project | all c : Course | p in s.projects and p in c.projects
inv7 U: all s : Student | all c : Course | lone p : Project | p in s.projects and p in c.projects
inv7 U: all s : Student | all c : Course | lone p : Project | p in s.projects&c.projects
inv7 U: all s : Student | all c : Course | lone s.projects&c.projects
inv7 B: all s : Student | lone s.projects&Course.projects
inv7 U: all s : Student | all c : Course | lone s.projects&c.projects

