inv15 T: all c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies s2 in s1.grades.next or s1 in s2.grades.next
inv15 T: all c: Course, p: Project, s1,s2: Student | p in c.projects and p in s1.projects&s2.projects implies s2 in s1.grades.next or s1 in s2.grades.next
inv15 T: all c: Course, p: Project, s1,s2: Student | p in c.projects and p in s1.projects and p ins2.projects implies s2 in s1.grades.next or s1 in s2.grades.next
inv15 T: all c: Course, p: Project, s1,s2: Student | p in c.projects and p in s1.projects and p in s2.projects implies s2 in s1.grades.next or s1 in s2.grades.next
inv15 B: all c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies s2 in c.grades.s1.next or s1 in c.grades.s2.next
inv15 B: all c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies s2 in c.grades.s1.next or s2 in c.grades.s1.prev
inv15 B: all c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (s2 in c.grades.s1.next or s2 in c.grades.s1.prev)
inv15 U: all c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (s2 in c.grades.s1.next or s2 in c.grades.s1.prev or c.grades.s1.next=c.grades.s1.prev)
inv15 B: all c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (s2 in c.grades.s1.next or s2 in c.grades.s1.prev)
inv15 U: all c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (c.grades.s2 in c.grades.s1.next or c.grades.s2 in c.grades.s1.prev)
inv15 U: all c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (c.grades.s2 in c.grades.s1.next or c.grades.s2 in c.grades.s1.prev)
inv15 U: all disj c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (c.grades.s2 in c.grades.s1.next or c.grades.s2 in c.grades.s1.prev)
inv15 U: all disj c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (c.grades.s2 in c.grades.s1.next or c.grades.s2 in c.grades.s1.prev)
inv15 U: all disj c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (c.grades.s2 in c.grades.s1.next or c.grades.s2 in c.grades.s1.prev)
inv15 U: all disj c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (~(c.grades).s2 in c.grades.s1.next or c.grades.s2 in c.grades.s1.prev)
inv15 B: all disj c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (~(c.grades).s2 in c.grades.s1.next or ~(c.grades).s2 in c.grades.s1.prev)
inv15 B: all disj c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (~(c.grades).s2 in ~(c.grades).s1.next or ~(c.grades).s2 in ~(c.grades).s1.prev)
inv15 B: all disj c: Course, p: Project, s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (~(c.grades).s2 in ~(c.grades).s1.next+~(c.grades).s1.prev+~(c.grades).s1)
inv15 S: all p: Project, disj s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (~(c.grades).s2 in ~(c.grades).s1.next+~(c.grades).s1.prev+~(c.grades).s1)
inv15 S: all p: Project, disj s1,s2: Student | p in (s1.enrolled+s2.enrolled).projects&s1.projects&s2.projects implies (~(c.grades).s2 in ~(c.grades).s1.next+~(c.grades).s1.prev+~(c.grades).s1)
inv15 S: all c: Courses, p: Project, disj s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (~(c.grades).s2 in ~(c.grades).s1.next+~(c.grades).s1.prev+~(c.grades).s1)
inv15 B: all c: Course, p: Project, disj s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (~(c.grades).s2 in ~(c.grades).s1.next+~(c.grades).s1.prev+~(c.grades).s1)
inv15 B: all c: Course, p: Project, disj s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (~(c.grades).s2 in ~(c.grades).s1.next+~(c.grades).s1.prev+~(c.grades).s1)
inv15 S: all disj s1,s2: Student | some s1.projects&s2.projects implies ~(c.grades).s2 in ~(c.grades).s1.next+~(c.grades).s1.prev+~(c.grades).s1)
inv15 S: all disj s1,s2: Student | some s1.projects&s2.projects implies ~(c.grades).s2 in ~(c.grades).s1.next+~(c.grades).s1.prev+~(c.grades).s1)
inv15 S: all disj s1,s2: Student | some s1.projects&s2.projects implies ~(c.grades).s2 in ~(c.grades).s1.next+~(c.grades).s1.prev+~(c.grades).s1)
inv15 S: all disj s1,s2: Student | some s1.projects&s2.projects implies (~(c.grades).s2 in ~(c.grades).s1.next+~(c.grades).s1.prev+~(c.grades).s1)
inv15 S: all disj s1,s2: Student | some s1.projects&s2.projects implies (~(c.grades).s2 in ~(c.grades).s1.next+~(c.grades).s1.prev+~(c.grades).s1)
inv15 S: all disj s1,s2: Student | some s1.projects&s2.projects implies (~(c.grades).s2 in ~(c.grades).s1.next+~(c.grades).s1.prev+~(c.grades).s1)
inv15 B: all c: Course, p: Project, disj s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (~(c.grades).s2 in ~(c.grades).s1.next + ~(c.grades).s1.prev + ~(c.grades).s1)
inv15 B: all c: Course, p: Project, disj s1,s2: Student | p in c.projects&s1.projects&s2.projects implies (~(c.grades).s2 in ~(c.grades).s1.next + ~(c.grades).s1.prev + ~(c.grades).s1)
inv15 S: all p: Project, disj s1,s2: Student | p in s1.projects&s2.projects implies (~(c.grades).s2 in ~(Course.grades).s1.next + ~(Course.grades).s1.prev + ~(Course.grades).s1)
inv15 B: all p: Project, disj s1,s2: Student | p in s1.projects&s2.projects implies (~(Course.grades).s2 in ~(Course.grades).s1.next + ~(Course.grades).s1.prev + ~(Course.grades).s1)
inv15 S: all p: Project, disj s1,s2: Student | p in s1.projects&s2.projects implies s2.(Course.grades) in s1.(Course.grades).next + s1.(Course.grades).prev + s1.(Course.grades))
inv15 B: all p: Project, disj s1,s2: Student | p in s1.projects&s2.projects implies (~(Course.grades).s2 in ~(Course.grades).s1.next + ~(Course.grades).s1.prev + ~(Course.grades).s1)
inv15 O: all c: Course, p: c.projects, disj s1,s2: (Person<:projects).p | s1.(c.grades) = s2.(c.grades) or s1.(c.grades) in s2.(c.grades).next+s2.(c.grades).prev
inv15 O: all c: Course, p: c.projects, disj s1,s2: (Person<:projects).p | s1.(c.grades) = s2.(c.grades) || s1.(c.grades) in s2.(c.grades).next+s2.(c.grades).prev
inv15 O: all c: Course, p: c.projects, disj s1,s2: (Person<:projects).p | s1.(c.grades) = s2.(c.grades) || s1.(c.grades) in s2.(c.grades).(next+prev)
inv15 O: all c: Course, p: c.projects, disj s1,s2: (Person<:projects).p | (some s1.(c.grades) and some s2.(c.grades)) implies s1.(c.grades) = s2.(c.grades) || s1.(c.grades) in s2.(c.grades).(next+prev)

