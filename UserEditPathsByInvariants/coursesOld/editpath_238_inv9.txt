inv9 B: all disj p1,p2 : Professor, c : Course | c in p1.teaches => c not in p2.enrolled
inv9 B: all disj p1,p2 : Professor, c : Course | c in p1.enrolled => c not in p2.teaches
inv9 B: all disj p0,p1 : Professor, c : Course | c in p0.teaches => c not in p1.enrolled
inv9 U: all disj p0,p1 : Professor, c : Course | c in p0.teaches => c not in p1.enrolled && c in p1.teaches => c not in p0.enrolled
inv9 B: all disj p0,p1 : Professor, c : Course | (c in p0.teaches => c not in p1.enrolled) && c in p1.teaches => c not in p0.enrolled
inv9 B: all disj p0,p1 : Professor, c : Course | (c in p0.teaches => c not in p1.enrolled) && (c in p1.teaches => c not in p0.enrolled)
inv9 B: all  c : Course, disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled
inv9 B: all  c : Course, disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled
inv9 S: all c1,c2 : Course, disj p0,p1 : Professor | c in p0.teaches && c in p1.enrolled => c1!=c2
inv9 B: all c1,c2 : Course, disj p0,p1 : Professor | c1 in p0.teaches && c2 in p1.enrolled => c1!=c2
inv9 B: all c : Course, disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled && c not in p0.enrolled
inv9 B: all c : Course, disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled && c not in p0.enrolled && c not in p1.teaches
inv9 B: one c : Course, disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled && c not in p0.enrolled && c not in p1.teaches
inv9 B: one c : Course| all disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled && c not in p0.enrolled && c not in p1.teaches
inv9 B: all disj p0,p1 : Professor | one c : Course | c in p0.teaches => c not in p1.enrolled && c not in p0.enrolled && c not in p1.teaches
inv9 B: all disj p0,p1 : Professor | one c : Course | c in p0.teaches => c not in p1.enrolled
inv9 O: all c : Course, disj p0,p1 : Person | c in p0.teaches => c not in p1.enrolled
inv9 B: all c : Course, disj p0,p1 : Person | c in p0.teaches && c in p1.enrolled => p0 in Professor && p1 in Student
inv9 B: all c : Course, disj p0,p1 : Person | (c in p0.teaches && c in p1.enrolled) => (p0 in Professor && p1 in Student)
inv9 S: all c : Course, disj p0,p1 : Person | ((c in p0.teaches && c in p1.enrolled) => (p0 in Professor && p1 in Student)) && ((c in p1.teaches && c in p0.enrolled) => ((p1 in Professor && p0 in Student)
inv9 S: all c : Course, disj p0,p1 : Person | ((c in p0.teaches && c in p1.enrolled) => (p0 in Professor && p1 in Student)) && ((c in p1.teaches && c in p0.enrolled) => ((p1 in Professor && p0 in Student))
inv9 S: all c : Course, disj p0,p1 : Person | ((c in p0.teaches && c in p1.enrolled) => (p0 in Professor && p1 in Student)) && ((c in p1.teaches && c in p0.enrolled) => ((p1 in Professor && p0 in Student))
inv9 S: all c : Course, disj p0,p1 : Person | ((c in p0.teaches && c in p1.enrolled) => (p0 in Professor  && p1 in Student)) && ((c in p1.teaches && c in p0.enrolled) => ((p1 in Professor && p0 in Student))
inv9 B: all c : Course, disj p0,p1 : Person | ((c in p0.teaches && c in p1.enrolled) => (p0 in Professor && p1 in Student)) && ((c in p1.teaches && c in p0.enrolled) => (p1 in Professor && p0 in Student))
inv9 B: all c : Course, disj p0,p1 : Person | p0 in Professor and c in p0.teaches and p1 in Professor => c not in p1.enrolled
inv9 B: all c : Course, disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled
inv9 B: all c : Course, disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled and c not in p1.teaches
inv9 B: all c : Course, disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled
inv9 B: all p : Professor | p not in Student
inv9 T: all disj p1,p2 : Professor | (p1 and p2) not in Student
inv9 B: all disj p1,p2 : Professor | p1 not in Student and p2 not in Student
inv9 S: all p : Professor, s : Student, c : Course | c in p.teaches and c in s.enrolled => s not in Professor
inv9 S: all p : Professor, s : Student, c : Course | c in p.teaches and c in s.enrolled => s not in Professor
inv9 B: all p : Professor, s : Student, c : Course | c in p.teaches and c in s.enrolled => s not in Professor
inv9 B: all p : Professor, s : Student, c : Course | p!=s and c in p.teaches and c in s.enrolled => s not in Professor
inv9 B: all p : Professor, s : Student, c : Course | p!=s and c in p.teaches and c in s.enrolled => s not in Professor and c not in s.teaches
inv9 B: all c : Course, p0,p1 : Professor | c in p0.teaches and c in p1.enrolled => p0=p1
inv9 B: all c : Course, disj p0,p1 : Professor | c in p0.teaches and c in p1.enrolled => p0=p1
inv9 B: all c : Course, disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled	    all c : Course, disj p0,p1 : Professor | c in p0.enrolled and c in p1.enrolled => c not in p0.teaches and c not in p1.teaches
inv9 B: all c : Course, disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled	    all c : Course, disj p0,p1 : Professor | c in p0.enrolled and c in p1.enrolled => c not in p0.teaches and c not in p1.teaches	    all c : Course, disj p0,p1 : Professor | c in p0.teaches and c in p1.teaches => c not in p0.enrolled and c not in p1.enrolled
inv9 B: all c : Course, disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled
inv9 B: all c : Course, disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled
inv9 B: all c : Course, disj p0,p1 : Professor | c in p0.teaches => c not in p1.enrolled
inv9 B: all disj p0,p1 : Professor | one c : Course | c in p0.teaches => c not in p1.enrolled
inv9 B: one disj p0,p1 : Professor | one c : Course | c in p0.teaches => c not in p1.enrolled
inv9 S: all disj p1,p2 Person, c : Course | c in p1.teaches => c not in p2.enrolled
inv9 O: all disj p1,p2 : Person, c : Course | c in p1.teaches => c not in p2.enrolled
inv9 B: all disj p1,p2 : Person, c : Course | c in p1.teaches and c in p2.enrolled => p1 in Professor and p2 not in Professor
inv9 B: all disj p1,p2 : Person, c : Course | c in p1.teaches and c in p2.enrolled => p1 in Professor and p2 in Student
inv9 U: all disj p1,p2 : Person, c : Course | c in p1.teaches and c in p2.enrolled => c not in p2.teaches
inv9 B: all disj p1,p2 : Person, c : Course | c in p1.teaches and c in p2.enrolled => p2 not in Professor
inv9 B: all disj p1,p2 : Person, c : Course | c in p1.teaches and c in p2.enrolled => p2 in Student
inv9 B: all disj p1,p2 : Professor, c : Course | c in p1.teaches => p2.enrolled not in p1.teaches
inv9 B: all disj p1,p2 : Professor, c : Course | p2.enrolled not in p1.teaches
inv9 B: all disj p1,p2 : Professor, c : Course | (p2.enrolled not in p1.teaches) and (p1.enrolled not in p2.teaches)
inv9 B: all disj p1,p2 : Person, c : Course | (p2.enrolled not in p1.teaches) and (p1.enrolled not in p2.teaches)
inv9 T: all disj p1,p2 : Professor, c : Course | p1.teaches
inv9 T: all disj p1,p2 : Professor, c : Course | p1.teaches
inv9 T: all disj p1,p2 : Professor, c : Course | not(p1.teaches & p2.enrolled)
inv9 T: all disj p1,p2 : Professor, c : Course | (p1.teaches & p2.enrolled)
inv9 B: all disj p1,p2 : Professor, c : Course | (p1.teaches = p1.teaches - p2.enrolled)
inv9 B: all disj p1,p2 : Professor, c : Course | c in p1.teaches => c not in p2.enrolled
inv9 B: all disj p1,p2 : Professor, c : Course | c in p1.teaches or c in p2.teaches => c not in p2.enrolled
inv9 B: all disj p1,p2 : Professor, c : Course | c in p1.teaches => c not in Professor.enrolled
inv9 B: all disj p1,p2 : Professor, c : Course | c in Professor.teaches => c not in Professor.enrolled

