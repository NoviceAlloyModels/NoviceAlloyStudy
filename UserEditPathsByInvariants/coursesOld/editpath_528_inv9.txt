inv9 B: all p,p1: Person, c:Course | p->c in teaches and p1->c in teaches implies p1->c not in enrolled
inv9 E:
inv9 B: all p: Person, c:Course, ps:Professor | p->c in teaches implies ps->c not in enrolled
inv9 B: all p: Person, c,c1:Course, ps:Professor | p->c in teaches and ps->c1 in teaches implies ps->c not in enrolled
inv9 T: all p: Person, c,c1:Course, ps:Professor | p->c in teaches and ps->c1 in teaches implies ps->c not in enrolled and p->c not enrolled
inv9 B: all p: Person, c,c1:Course, ps:Professor | p->c in teaches and ps->c1 in teaches implies ps->c not in enrolled and p->c not in enrolled
inv9 B: all p: Professor, c,c1:Course, ps:Professor | p->c in teaches and ps->c1 in teaches implies ps->c not in enrolled and p->c not in enrolled
inv9 S: all p,p1: Professor, c,c1:Course | p->c in teaches implies ps->c not in enrolled
inv9 B: all p,p1: Professor, c,c1:Course | p->c in teaches implies p1->c not in enrolled
inv9 O: all p,p1: Person, c,c1:Course | p->c in teaches implies p1->c not in enrolled
inv9 O: all p,p1: Person, c:Course | p->c in teaches implies p1->c not in enrolled
inv9 O: all p,p1: Person, c:Course | p->c in teaches and p!=p1 implies p1->c not in enrolled
inv9 B: all p,p1: Professor, c:Course | p->c in teaches and p!=p1 implies p1->c not in enrolled
inv9 B: enrolled.Course not in Student
inv9 B: enrolled.Course not in Professor

