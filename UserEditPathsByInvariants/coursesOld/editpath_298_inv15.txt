inv15 S: all s1,s2 : Student | one p : Project | p in s1.projects and p in s2.projects implies (s1.projects.grades+1 == s2.projects.grades or s1.projects.grades-1 == s2.projects.grades or s1.projects.grades == s2.projects.grades or s1.projects.grades == s2.projects.grades+1 or s1.projects.grades == s2.projects.grades-1)
inv15 S: all s1,s2 : Student | all p : Project | p in s1.projects and p in s2.projects implies (s1.projects.grades+1 == s2.projects.grades or s1.projects.grades-1 == s2.projects.grades or s1.projects.grades == s2.projects.grades or s1.projects.grades == s2.projects.grades+1 or s1.projects.grades == s2.projects.grades-1)
inv15 T: all p : Project | all s1,s2 : Student | all c : Course |s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects implies (all g1, g2 : Grade | g1 in s1.c.grades and g2 in s2.c.grades implies (g1 = prev[g2] or g2 = prev[1] or g1=g2))
inv15 T: all p : Project | all s1,s2 : Student | all c : Course |s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects implies (all g1, g2 : Grade | g1 in s1.c.grades and g2 in s2.c.grades implies (g1 = prev[g2] or g2 = prev[g1] or g1=g2))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects implies (all g1, g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1 = prev[g2] or g2 = prev[g1] or g1=g2))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects implies (all g1, g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1 = prev[g2] or g1 = next[g2] or g1=g2))

