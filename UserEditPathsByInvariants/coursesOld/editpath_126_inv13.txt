inv13 B: all c : Course, s : Student | s.(c.grades) = max[Student.(c.grades)] implies one (c.projects & s.projects)
inv13 B: all c : Course, s : Student | s.(c.grades) = max[Student.(c.grades)] implies lone (c.projects & s.projects)
inv13 B: all c : Course, s : Student | s.(c.grades) = max[Student.(c.grades)] implies one (c.projects & s.projects)
inv13 B: all c : Course, s : Student | s.(c.grades) = max[Student.(c.grades)] implies one (c.projects & s.projects)
inv13 B: all c : Course, s : Student | s.enrolled = c and s.(c.grades) = max[Student.(c.grades)] implies one (c.projects & s.projects)
inv13 B: all c : Course, s : Student | s.(c.grades) = max[Student.(c.grades)] implies some (c.projects & s.projects)
inv13 B: all c : Course, s : Student | s.(c.grades) = max[Student.(c.grades)] implies some (c.projects & s.projects)
inv13 B: all c : Course | lone s : Student | s.(c.grades) = max[Student.(c.grades)] implies some (c.projects & s.projects)
inv13 B: all c : Course | lone s : Student | s.(c.grades) = max[Student.(c.grades)] iff some (c.projects & s.projects)
inv13 B: all c : Course | lone s : Student | s.(c.grades) = max[Student.(c.grades)] implies some (c.projects & s.projects)
inv13 B: all c : Course, s : enrolled.c | s.(c.grades) = max[Student.(c.grades)] implies some (c.projects & s.projects)
inv13 B: all c : Course, s : enrolled.c | s.(c.grades) in max[Student.(c.grades)] implies some (c.projects & s.projects)
inv13 B: all c : Course, s : (Student & enrolled.c) | s.(c.grades) in max[Student.(c.grades)] implies some (c.projects & s.projects)
inv13 B: all c : Course| one s : (Student & enrolled.c) | s.(c.grades) in max[Student.(c.grades)] implies some (c.projects & s.projects)
inv13 T: all c : Course, s : c.grades.max[Student.(c.grades)] | one (c.projects & s.projects)
inv13 B: all c : Course, s : c.grades.(max[Student.(c.grades)]) | one (c.projects & s.projects)
inv13 B: all c : Course, s : c.grades.(max[Student.(c.grades)]) | one (c.projects & s.projects)
inv13 B: all c : Course | lone s : c.grades.(max[Student.(c.grades)]) | one (c.projects & s.projects)
inv13 B: all c : Course, s : c.grades.(max[Student.(c.grades)]) | one (c.projects & s.projects)
inv13 B: all c : Course, s : c.grades.(max[Student.(c.grades)]) | some (c.projects & s.projects)
inv13 C: all c : Course, s : c.grades.(max[Grade]) | some (c.projects & s.projects)
inv13 S: grades.max[Grade] in c.projects.~projects :> student
inv13 T: grades.max[Grade] in Course <: projects.~projects :> Student
inv13 T: grades.max[Grade] in Course <: projects.~projects :> Student
inv13 T: grades.max[Grade] in (Course <: (projects.~projects) :> Student)
inv13 T: grades.max[Grade] in (Course <: projects).(~projects :> Student)
inv13 T: (grades.max[Grade]) in (Course <: projects).(~projects :> Student)
inv13 T: (grades.max[Grade]) in (Course <: projects).(~projects :> Student)
inv13 O: grades.Grade in (Course <: projects).(~projects :> Student)
inv13 O: grades.(max[Grade]) in (Course <: projects).(~projects :> Student)
inv13 T: grades.max[Grade] in (Course <: projects).(~projects :> Student)
inv13 O: grades.(max[Grade]) in (Course <: projects).(~projects :> Student)
inv13 O: grades.(max[Grade]) in projects.(~projects :> Student)
inv13 C: grades.(max[Grade]) in projects.~projects

