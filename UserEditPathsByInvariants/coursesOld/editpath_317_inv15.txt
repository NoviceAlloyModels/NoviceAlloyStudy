inv15 E:
inv15 B: all s1, s2: Student | all c : Course | s1!=s2 and c in s1.enrolled+s2.enrolled and working2gether[s1,s2,c]	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | p in s1.projects+s2.projects
inv15 S: all s1, s2: Student | all c : Course | s1!=s2 and c in s1.enrolled+s2.enrolled and working2gether[s1,s2,c] implies 	}			pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects |  c in s1.enrolled+s2.enrolled and p in s1.projects+s2.projects
inv15 B: all s1, s2: Student | all c : Course | s1!=s2 and c in s1.enrolled+s2.enrolled and working2gether[s1,s2,c]	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | c in s1.enrolled+s2.enrolled and p in s1.projects+s2.projects
inv15 T: all s1, s2: Student | all c : Course | s1!=s2 and working2gether[s1,s2,c] implies s1(c.grades) = s2.(c.grades)	}			pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | c in s1.enrolled+s2.enrolled and p in s1.projects+s2.projects
inv15 T: all s1, s2: Student | all c : Course | s1!=s2 and working2gether[s1,s2,c] implies s1(c.grades) = prev[s2.(c.grades)]	}			pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | c in s1.enrolled+s2.enrolled and p in s1.projects+s2.projects
inv15 T: all s1, s2: Student | all c : Course | s1!=s2 and working2gether[s1,s2,c] implies s1(c.grades)=prev[s2.(c.grades)]	}			pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | c in s1.enrolled+s2.enrolled and p in s1.projects+s2.projects
inv15 T: all s1, s2: Student | all c : Course |  working2gether[s1,s2,c] implies s1(c.grades)=prev[s2.(c.grades)]	}			pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled+s2.enrolled and p in s1.projects+s2.projects
inv15 B: all s1, s2: Student | all c : Course | working2gether[s1,s2,c]	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled+s2.enrolled and p in s1.projects+s2.projects
inv15 S: all s1, s2: Student | all c : Course | all g1,g2 : Grades | working2gether[s1,s2,c] and s1->g1 and s2->g2	}			pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled+s2.enrolled and p in s1.projects+s2.projects
inv15 T: all s1, s2: Student | all c : Course | all g1,g2 : Grade | working2gether[s1,s2,c] and s1->g1 and s2->g2	}			pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled+s2.enrolled and p in s1.projects+s2.projects
inv15 B: all s1, s2: Student | all c : Course | all g1,g2 : Grade | working2gether[s1,s2,c] and s1->g1 + s2->g2 in c.grades	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled+s2.enrolled and p in s1.projects+s2.projects
inv15 B: all s1, s2: Student | all c : Course | all g1,g2 : Grade | working2gether[s1,s2,c] and s1->g1 + s2->g2 in c.grades implies consecGrades[g1,g2]	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled+s2.enrolled and p in s1.projects+s2.projects	}		pred consecGrades[g1,g2:Grade]{		g1!=g2 and g1 = prev[g2]
inv15 B: all s1, s2: Student | all c : Course | all g1,g2 : Grade | working2gether[s1,s2,c] and (s1->g1)+(s2->g2) in c.grades implies consecGrades[g1,g2]	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled+s2.enrolled and p in s1.projects+s2.projects	}		pred consecGrades[g1,g2:Grade]{		g1!=g2 and g1 = prev[g2]
inv15 B: all s1, s2: Student | all c : Course | all g1,g2 : Grade | working2gether[s1,s2,c] and (s1->g1)+(s2->g2) in c.grades implies consecGrades[g1,g2]	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled&s2.enrolled and p in s1.projects+s2.projects	}		pred consecGrades[g1,g2:Grade]{		g1!=g2 and g1 = prev[g2]
inv15 U: all s1, s2: Student | all c : Course | some g1,g2 : Grade | working2gether[s1,s2,c] and (s1->g1)+(s2->g2) in c.grades implies consecGrades[g1,g2]	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled&s2.enrolled and p in s1.projects+s2.projects	}		pred consecGrades[g1,g2:Grade]{		g1!=g2 and g1 = prev[g2]
inv15 B: some s1, s2: Student | all c : Course | some g1,g2 : Grade | working2gether[s1,s2,c] and (s1->g1)+(s2->g2) in c.grades implies consecGrades[g1,g2]	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled&s2.enrolled and p in s1.projects+s2.projects	}		pred consecGrades[g1,g2:Grade]{		g1!=g2 and g1 = prev[g2]
inv15 U: all s1, s2: Student | all c : Course | some g1,g2 : Grade | working2gether[s1,s2,c] and (s1->g1)+(s2->g2) in c.grades implies consecGrades[g1,g2]	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled&s2.enrolled and p in s1.projects+s2.projects	}		pred consecGrades[g1,g2:Grade]{		g1!=g2 and g1 = prev[g2]
inv15 B: all s1, s2: Student | all c : Course | some g1,g2 : Grade | working2gether[s1,s2,c] and (s1->g1)+(s2->g2) in c.grades implies consecGrades[g1,g2]	  	  	all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled&s2.enrolled and p in s1.projects+s2.projects	}		pred consecGrades[g1,g2:Grade]{		g1!=g2 and g1 = prev[g2]
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects and p in s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects+s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects&s2.projects and p in c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects&s2.projects&c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv15 U: all s1, s2: Student | all c : Course | some g1,g2 : Grade | working2gether[s1,s2,c] and (s1->g1)+(s2->g2) in c.grades implies consecGrades[g1,g2]	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled&s2.enrolled and p in s1.projects&s2.projects	}		pred consecGrades[g1,g2:Grade]{		g1!=g2 and g1 = prev[g2]
inv15 B: all s1, s2: Student | all c : Course | all g1,g2 : Grade | working2gether[s1,s2,c] and (s1->g1)+(s2->g2) in c.grades implies consecGrades[g1,g2]	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled&s2.enrolled and p in s1.projects&s2.projects	}		pred consecGrades[g1,g2:Grade]{		g1!=g2 and g1 = prev[g2]
inv15 B: all p : Project | all s1,s2 : Student | all c : Course |	  	(s1!=s2 and p in s1.projects&s2.projects&c.projects) implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))
inv15 B: all s1,s2 : Student | all c : Course |	  	working2gether[s1,s2,c] implies	  	(all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) 	  	implies (g1=prev[g2] or g2=prev[g1] or g1=g2))	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and p in s1.projects&s2.projects&c.projects
inv15 B: all s1,s2 : Student | all c : Course |	  	working2gether[s1,s2,c] implies consecGrades[s1,s2,c]	}		pred consecGrades[s1,s2:Student,c:Course]{		all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1=prev[g2] or g2=prev[g1] or g1=g2)	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and p in s1.projects&s2.projects&c.projects
inv15 B: all s1,s2 : Student | all c : Course | working2gether[s1,s2,c] implies consecGrades[s1,s2,c]	}		pred consecGrades[s1,s2:Student,c:Course]{		all g1,g2 : Grade | g1 in s1.(c.grades) and g2 in s2.(c.grades) implies (g1=prev[g2] or g2=prev[g1] or g1=g2)	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and p in s1.projects&s2.projects&c.projects
inv15 U: all s1,s2 : Student | all c : Course | working2gether[s1,s2,c] implies consecGrades[s1,s2,c]	}		pred consecGrades[s1,s2:Student,c:Course]{		all g1,g2 : Grade | s1->g1 in c.grades and g2->s2 in c.grades implies (g1=prev[g2] or g2=prev[g1] or g1=g2)	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and p in s1.projects&s2.projects&c.projects
inv15 B: all s1,s2 : Student | all c : Course | working2gether[s1,s2,c] implies consecGrades[s1,s2,c]	}		pred consecGrades[s1,s2:Student,c:Course]{		all g1,g2 : Grade | s1->g1 in c.grades and s2->g2 in c.grades implies (g1=prev[g2] or g2=prev[g1] or g1=g2)	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and p in s1.projects&s2.projects&c.projects
inv15 B: all s1,s2 : Student | all c : Course | working2gether[s1,s2,c] implies consecGrades[s1,s2,c]	}		pred consecGrades[s1,s2:Student,c:Course]{		all g1,g2 : Grade | s1->g1 + s2->g2 in c.grades implies (g1=prev[g2] or g2=prev[g1] or g1=g2)	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and p in s1.projects&s2.projects&c.projects
inv15 S: all s1, s2: Student | all c : Course | all g1,g2 : Grade | working2gether[s1,s2,c] and (s1->g1)+(s2->g2) in c.grades implies consecGrades[g1,g2]	}			pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled&s2.enrolled and p in s1.projects&s2.projects	}		pred consecGrades[g1,g2:Grade]{		g1==g2 or g1 = prev[g2] or g2 = prev[g1]
inv15 B: all s1, s2: Student | all c : Course | all g1,g2 : Grade | working2gether[s1,s2,c] and (s1->g1)+(s2->g2) in c.grades implies consecGrades[g1,g2]	}		pred working2gether[s1,s2:Student,c:Course]{		all p : c.projects | s1!=s2 and c in s1.enrolled&s2.enrolled and p in s1.projects&s2.projects	}		pred consecGrades[g1,g2:Grade]{		g1=g2 or g1 = prev[g2] or g2 = prev[g1]

