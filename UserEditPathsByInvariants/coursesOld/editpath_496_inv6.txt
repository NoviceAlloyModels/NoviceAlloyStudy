inv6 B: all p : Person - Student , c : Course | p.projects not in c.projects
inv6 S: all p : Person - Student , c : Course | pno (p.projects & c.projects)
inv6 B: all p : Person - Student , c : Course | no (p.projects & c.projects)
inv6 B: all p : Person - Student| p.projects not in p.enrolled.projects
inv6 S: all s : Students , c : Course | no (s.enrolled & c) implies c not in (s.projects & c.projects)
inv6 T: all s : Student , c : Course | no (s.enrolled & c) implies c not in (s.projects & c.projects)
inv6 T: all s : Student , c : Course | no (s.enrolled & c) implies c not in (s.projects & c.projects)
inv6 T: all s : Student , c : Course | no (s.enrolled & c) implies c not in (s.projects & c.projects)
inv6 T: all s : Student , c : Course | no (s.enrolled & c) implies c not in (s.projects & c.projects)
inv6 T: all s : Student , c : Course | no (s.enrolled & c) implies c not in (s.projects & c.projects)
inv6 T: all s : Student , c : Course | no (s.enrolled & c) implies c not in (s.projects & c.projects)
inv6 B: all s : Student , c : Course | no (s.enrolled & c) implies no (s.projects & c.projects)

