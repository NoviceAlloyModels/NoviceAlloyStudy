inv4 S: some File eventually in Trash
inv4 T: eventually some File in Trash
inv4 B: eventually File in Trash
inv4 T: eventually File not Protected in Trash
inv4 T: eventually File not Protected implies File in Trash
inv4 T: eventually File and File not in Protected implies File in Trash
inv4 B: eventually some File and File not in Protected implies File in Trash
inv4 B: some f: File | f not in Protected implies f in Trash
inv4 B: some f: File | always f not in Protected implies f in Trash
inv4 S: some f: File | (always f not in ProtectedI ) implies f eventually in Trash
inv4 S: some f: File | (always f not in ProtectedI ) implies eventually f in Trash
inv4 B: some f: File | (always f not in Protected) implies eventually f in Trash
inv4 O: some f: File | eventually f in Trash
inv4 B: some f: File | (f not in Protected) implies eventually f in Trash
inv4 B: some f: File | (always f not in Protected) implies eventually f in Trash
inv4 B: some f: File | (always f not in Protected) implies eventually f in Trash
inv4 B: some f: File | (f not in Protected) implies eventually f in Trash
inv4 O: some f: File | eventually f in Trash
inv4 S: some f: File | f not in PRotected implies eventually f in Trash
inv4 B: some f: File | f not in Protected implies eventually f in Trash
inv4 B: some f: File | f not in Protected implies eventually f in Trash and no f.link
inv4 O: some f: File | f not in Protected and eventually f in Trash
inv4 O: some f: File | eventually f in Trash
inv4 S: some f: File | f not in Protected eventually f in Trash
inv4 O: some f: File | f not in Protected and eventually f in Trash
inv4 S: some f: File | f not in Protected eventually f in Trash
inv4 O: some f: File | eventually always f in Trash
inv4 B: some f: File | f not in Protected implies eventually always f in Trash
inv4 O: some f: File | eventually always f in Trash
inv4 O: some f: File | always eventually f in Trash
inv4 O: some f: File | eventually always  f in Trash
inv4 O: some f: File | eventually always f in Trash
inv4 B: some f: File | f not in Protected implies eventually always f in Trash
inv4 B: some f: File | after f not in Protected implies eventually always f in Trash
inv4 B: some f: File | once f not in Protected implies eventually always f in Trash
inv4 O: some f: File | f not in Protected and eventually always f in Trash
inv4 O: some f: File | once f not in Protected and eventually always f in Trash
inv4 S: some f: File | since f not in Protected and eventually always f in Trash
inv4 B: some f: File | eventually always f in Trash since f not in Protected
inv4 B: some f: File | eventually f in Trash since f not in Protected
inv4 B: some f: File | always eventually f in Trash since f not in Protected
inv4 B: some f: File | eventually (always f in Trash) since f not in Protected
inv4 O: some f: File | eventually (always f in Trash)
inv4 O: some f: File | eventually (always f in Trash) and eventually (always f.link in Trash)
inv4 B: some f: File | f not in Protected implies eventually (always f in Trash) and eventually (always f.link in Trash)
inv4 B: some f: File | always f not in Protected implies eventually (always f in Trash) and eventually (always f.link in Trash)
inv4 B: some f: File | (always f not in Protected) implies eventually (always f in Trash) and eventually (always f.link in Trash)
inv4 B: some f: File | (once f not in Protected) implies eventually (always f in Trash) and eventually (always f.link in Trash)
inv4 B: some f: File | always( f in Trash implies always f in Trash)
inv4 B: some f: File | always( eventually f in Trash implies always f in Trash)
inv4 O: some f: File | eventually always f in Trash
inv4 O: some f: File | eventually f in Trash
inv4 B: some f: File | eventually f in Trash implies f not in Protected
inv4 S: some f: File | always none none implies eventually f in Trash implies
inv4 S: some f: File | always no none implies eventually f in Trash implies
inv4 O: some f: File | eventually f in Trash
inv4 O: some f: File | eventually f in Trash

