inv11 B: all c : Class | some t : Teacher | 	  		t->c in Teaches => (some p : Person, g : Group | c->p->g in Groups)
inv11 O: all c : Class | some t : Teacher | 	  		t->c in Teaches <=> (some p : Person, g : Group | c->p->g in Groups)
inv11 B: all c : Class | some t : Teacher | 	  		t->c not in Teaches => (some p : Person, g : Group | c->p->g not in Groups)
inv11 B: all c : Class | some t : Teacher | t->c not in Teaches => (some p : Person, g : Group | c->p->g not in Groups)
inv11 B: all c : Class | lone t : Teacher | 	  		t->c not in Teaches => (some p : Person, g : Group | c->p->g not in Groups)
inv11 B: all c : Class | some t : Teacher | 	  		t->c in Teaches => (some p : Person, g : Group | c->p->g in Groups)
inv11 O: all c : Class | some t : Teacher | 	  		t->c in Teaches <=> (some p : Person, g : Group | c->p->g in Groups)
inv11 B: all c : Class | some t : Teacher | 	  		t->c in Teaches => (some p : Person, g : Group | c->p->g in Groups)
inv11 B: all c : Class | some t : Teacher | 	  		t->c in Teaches => (some p : Person, g : Group | c->p->g not in Groups)
inv11 B: all c : Class | some t : Teacher | 	  		t->c in Teaches => (some p : Person, g : Group | c->p->g in Groups)
inv11 B: all c : Class | some t : Teaches.c | (some p : Person, g : Group | c->p->g in Groups)
inv11 B: all c : Class | some t : Teacher | 	  		t->c in Teaches => (some p : Person, g : Group | c->p->g in Groups)
inv11 T: all c : Class | some t : Teacher | no (t->c in Teaches) => no c.Groups
inv11 B: all c : Class | some t : Teacher | (t->c in Teaches) => no c.Groups
inv11 B: all c : Class | some t : Teacher | t->c in Teaches => no c.Groups
inv11 O: all c : Class | some t : Teacher | no (t->c & Teaches) => no c.Groups
inv11 T: all c : Class | some t : Teacher | no (t.Teaches.c) => no c.Groups
inv11 O: all c : Class | some t : Teacher | no (t <: Teaches).c => no c.Groups
inv11 C: all c : Class | no (Teacher <: Teaches).c => no c.Groups
inv11 C: all c : Class | no (Teacher <: Teaches).c => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t.Teaches).c => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teaches) => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teacher.Teaches) => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teacher->Teaches) => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teacher.Teaches) => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teacher->Teaches) => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teaches) => no c.Groups
inv11 B: all c : Class, t : Teacher | t->c in Teaches => no c.Groups
inv11 T: all c : Class, t : Teacher | no (t->c in Teaches) => no c.Groups
inv11 B: all c : Class, t : Teacher | t->c not in Teaches => no c.Groups
inv11 B: all c : Class, p : Person | p->c not in Teaches => no c.Groups
inv11 B: all c : Class, t : Teacher | t->c not in Teaches => no c.Groups
inv11 O: all c : Class | some t : Teacher | t->c not in Teaches => no c.Groups
inv11 B: all c : Class, t : Teacher | t->c not in Teaches => no c.Groups

