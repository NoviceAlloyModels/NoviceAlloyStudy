inv14 S: all s : Student, c : Class, g : Group | (c -> s -> g in Groups => some t : Teacher | t -> c in Teaches and t -> s in Tutors
inv14 B: all s : Student, c : Class, g : Group | (c -> s -> g in Groups => some t : Teacher | t -> c in Teaches and t -> s in Tutors)
inv14 B: all s : Student, c : Class, g : Group | c -> s -> g in Groups => some t : Teacher | t -> c in Teaches and t -> s in Tutors
inv14 B: all s : Student, c : Class, g : Group | (c -> s -> g in Groups => some t : Teacher | t -> c in Teaches and t -> s in Tutors)
inv14 B: all s : Student, c : Class, g : Group | c -> s -> g in Groups => some t : Teacher | t -> c in Teaches and t -> s in Tutors
inv14 B: all s : Student, c : Class, g : Group | (c -> s -> g in Groups => some t : Teacher | t -> c in Teaches and t -> s in Tutors)
inv14 B: all s : Student, c : Class, g : Group | (c -> s -> g in Groups => some t : Teacher | t -> c in Teaches and t -> s in Tutors)
inv14 B: all s : Student, c : Class, g : Group | (c -> s -> g in Groups => all t : Teacher | t -> c in Teaches and t -> s in Tutors)
inv14 B: all s : Student, c : Class, g : Group | (c -> s -> g in Groups => some t : Teacher | t -> c in Teaches and t -> s in Tutors)
inv14 B: all s : Student, c : Class, g : Group | (c -> s -> g in Groups and all t : Teacher | t -> c in Teaches => t -> s in Tutors)
inv14 B: all s : Student, c : Class, g : Group | (c -> s -> g in Groups and some t : Teacher | t -> c in Teaches => t -> s in Tutors)
inv14 S: all s : Student, c : Class, g : Group | (c -> s -> g in Groups and some t : Teacher | t -> c in Teaches) => t -> s in Tutors
inv14 B: all s : Student, c : Class, g : Group | c -> s -> g in Groups and some t : Teacher | t -> c in Teaches => t -> s in Tutors
inv14 U: all s : Student, c : Class, g : Group, t : Teacher | (c -> s -> g in Groups and t -> c in Teaches) => t -> s in Tutors
inv14 B: all s : Student, c : Class, g : Group | some t : Teacher | (c -> s -> g in Groups and t -> c in Teaches) => t -> s in Tutors
inv14 U: all s : Student, c : Class, g : Group, t : Teacher | (c -> s -> g in Groups and t -> c in Teaches) => t -> s in Tutors

