inv13 B: all t:Teacher, s:Student | t->s in Tutors and s->t not in Tutors
inv13 B: all t:Teacher, s:Student | s->t not in Tutors
inv13 S: all p1:Person | isTutored [p1] implies p1 in Student
inv13 S: all p1:Person | isTutored [p1] implies p1 in Student
inv13 B: all p1:Person | isTutored [p1] implies p1 in Student	}		pred isTutored (p1:Person){		some p2:Person | p1->p2 in Tutors
inv13 S: all p1:Person | (isTutored [p1] implies p1 in Student and isTutor [p2] implies p2 in Teacher	}		pred isTutored (p1:Person){		some p2:Person | p2->p1 in Tutors
inv13 S: all p1:Person | (isTutored [p1] implies p1 in Student	}		pred isTutored (p1:Person){		some p2:Person | p2->p1 in Tutors
inv13 U: all p1:Person | isTutored [p1] implies p1 in Student	}		pred isTutored (p1:Person){		some p2:Person | p2->p1 in Tutors
inv13 S: all p1:Person | isTutored [p1] implies p1 in Student and isTutor [p2] implies p2 in Teacher	}		pred isTutored (p1:Person){		some p2:Person | p2->p1 in Tutors	}		pred isTutor (p1:Person){		some p2:Person | p1->p2 in Tutors
inv13 U: all p1, p2:Person | isTutored [p1] implies p1 in Student and isTutor [p2] implies p2 in Teacher	}		pred isTutored (p1:Person){		some p2:Person | p2->p1 in Tutors	}		pred isTutor (p1:Person){		some p2:Person | p1->p2 in Tutors
inv13 O: all p1, p2:Person | (isTutored [p1] implies p1 in Student and p1 not in Teacher) and (isTutor [p2] implies p2 in Teacher and p2 not in Student)	}		pred isTutored (p1:Person){		some p2:Person | p2->p1 in Tutors	}		pred isTutor (p1:Person){		some p2:Person | p1->p2 in Tutors
inv13 B: all p1, p2:Person | (isTutored [p1] implies p1 not in Teacher) and (isTutor [p2] implies p2 not in Student)	}		pred isTutored (p1:Person){		some p2:Person | p2->p1 in Tutors	}		pred isTutor (p1:Person){		some p2:Person | p1->p2 in Tutors
inv13 C: all p1,p2:Person | p1->p2 in Tutors implies p1 in Teacher and p2 in Student

