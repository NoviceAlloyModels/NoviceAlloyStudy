inv9 S: not some c :Class, all t1,t2 : Teacher | t1->c in Teaches and t2->c in Teaches and t1 = t2
inv9 B: not some c :Class | all t1,t2 : Teacher | t1->c in Teaches and t2->c in Teaches and t1 = t2
inv9 B: not some c :Class | all t1,t2 : Teacher | t1->c in Teaches and t2->c in Teaches and t1 != t2
inv9 S: all some c :Class | all t1,t2 : Teacher | t1->c in Teaches and t2->c in Teaches => t1 = t2
inv9 S: all some c :Class | all t1,t2 : Teacher | (t1->c in Teaches and t2->c in Teaches) => t1 = t2
inv9 C: all c :Class | all t1,t2 : Teacher | (t1->c in Teaches and t2->c in Teaches) => t1 = t2
inv9 B: not some c :Class | all t1,t2 : Teacher | (t1->c in Teaches and t2->c in Teaches) and t1 != t2
inv9 C: not some c :Class | some t1,t2 : Teacher | (t1->c in Teaches and t2->c in Teaches) and t1 != t2

