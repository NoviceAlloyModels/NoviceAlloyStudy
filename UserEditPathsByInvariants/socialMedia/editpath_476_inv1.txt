inv1 B: all u: User | one u.posts
inv1 B: all u: User | one p: Photo| u.posts = p
inv1 B: all u: User | one p: Photo| p = u.posts
inv1 S: all u: User , one p: Photo| p = u.posts
inv1 B: all u: User , p: Photo| p = u.posts
inv1 U: all p: Photo, u: User.posts | p = Photo => p = u
inv1 B: all p: Photo, u: User.posts | p in Photo => p = u
inv1 B: all p: Photo, u: User.posts | p in Photo => p in u
inv1 T: all p: Photo, u: User.posts | p in Photo => one (p = u)
inv1 B: one p: Photo, u: User.posts | p in Photo => (p = u)
inv1 U: all p: Photo | one u: User.posts | p in Photo => (p = u)
inv1 B: all u:User,f:Photo|one posts.u
inv1 T: all u:User,f:Photo|posts.u
inv1 B: all u:User,f:Photo|one posts.u
inv1 S: all u:User,f:Photo|one posts.u and post in f
inv1 B: all u:User,f:Photo|one posts.u and u.sees in f
inv1 S: all u:User,f:Photo|one u.post
inv1 U: all u:User,f:Photo| posts.u in f
inv1 T: all u:User| posts.u >=1
inv1 T: all u:User| u.posts >=1

