inv9 U: all ws : Workstation | ws.succ = none => ws = end	all ws : Workstation | succ.ws = none => ws = begin	all ws : Workstation | (ws.succ != none) => (all wr : Workstation | wr in ws.succ => (wr.succ = none) => wr = end)
inv9 U: all ws : Workstation | ws !in ws.succ	all ws : Workstation | ws.succ = none => ws = end	all ws : Workstation | succ.ws = none => ws = begin	all ws : Workstation | (ws.succ != none) => (all wr : Workstation | wr in ws.succ => (wr.succ = none) => wr = end)
inv9 U: all ws : Workstation | ws !in ws.^succ	all ws : Workstation | ws.succ = none => ws = end	all ws : Workstation | succ.ws = none => ws = begin	all ws : Workstation | (ws.succ != none) => (all wr : Workstation | wr in ws.succ => (wr.succ = none) => wr = end)
inv9 O: all ws : Workstation | ws !in ws.*succ	all ws : Workstation | ws.succ = none => ws = end	all ws : Workstation | succ.ws = none => ws = begin	all ws : Workstation | (ws.succ != none) => (all wr : Workstation | wr in ws.succ => (wr.succ = none) => wr = end)
inv9 U: all ws : Workstation | ws.succ = none => ws = end	all ws : Workstation | succ.ws = none => ws = begin	all ws : Workstation | (ws.succ != none) => (all wr : Workstation | wr in ws.succ => (wr.succ = none) => wr = end)
inv9 U: all ws : Workstation | ws !in ws.*succ => ws = end	all ws : Workstation | ws.succ = none => ws = end	all ws : Workstation | succ.ws = none => ws = begin	all ws : Workstation | (ws.succ != none) => (all wr : Workstation | wr in ws.succ => (wr.succ = none) => wr = end)
inv9 U: all ws : Workstation | ws !in ws.*succ => ws = begin	all ws : Workstation | ws.succ = none => ws = end	all ws : Workstation | succ.ws = none => ws = begin	all ws : Workstation | (ws.succ != none) => (all wr : Workstation | wr in ws.succ => (wr.succ = none) => wr = end)
inv9 U: all ws : Workstation | ws.succ = none => ws = end	all ws : Workstation | succ.ws = none => ws = begin	all ws : Workstation | (ws.succ != none) => (all wr : Workstation | wr in ws.succ => (wr.succ = none) => wr = end)
inv9 U: all ws : Workstation | ws.succ = none => ws = end	all ws : Workstation | succ.ws = none => ws = begin	all ws : Workstation | (ws.succ != none) => (all wr : Workstation | wr in ws.succ => (wr != ws) and (wr.succ = none) => wr = end)
inv9 S: all ws : Workstation | (ws.succ = none) => ws = end	all ws : Workstation | (ws.succ != none) => ws = begin	all ws : Workstation | (ws.succ != none) => all ws' : Workstation | ws' in ws.succ => (ws' != ws) implies (ws'.succ = none) => ws' = end
inv9 B: all ws : Workstation | (ws.succ = none) => ws = end	all ws : Workstation | (ws.succ != none) => ws = begin	all ws : Workstation | (ws.succ != none) => all wr : Workstation | wr in ws.succ => (wr != ws) implies (wr.succ = none) => wr = end
inv9 B: all ws : Workstation | (ws.succ = none) => ws = end	all ws : Workstation | (ws.succ != none) => ws = begin	all ws : Workstation | (ws.succ != none) => all wr : Workstation | wr in ws.succ => (wr != ws) implies (wr.*succ = none) => wr = end
inv9 B: all ws : Workstation | (ws.succ = none) => ws = end	all ws : Workstation | (ws.succ != none) => ws = begin	all ws : Workstation | (ws.succ != none) => all wr : Workstation | wr in ws.succ => (wr != ws) implies (wr.^succ = none) => wr = end

