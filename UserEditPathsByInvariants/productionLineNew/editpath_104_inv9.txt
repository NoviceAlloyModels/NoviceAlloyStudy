inv9 B: begin.^succ = Workstation
inv9 U: begin.*succ = Workstation
inv9 B: begin.^succ = Workstation or begin = end
inv9 B: begin.^succ = Workstation
inv9 U: begin.*succ = Workstation
inv9 U: #begin.*succ = #Workstation
inv9 B: #begin.*succ = 1
inv9 S: all w1, w2 : Worstation | w2 in w1.*succ implies w1 not in w2.*succ
inv9 O: all w1, w2 : Workstation | w2 in w1.*succ implies w1 not in w2.*succ
inv9 B: #succ = #Workstation - 1
inv9 T: no succ.begin	all w : Workstation | succ.w
inv9 U: no succ.begin	all ws : Workstation-begin | one w : Workstation | ws in w.succ
inv9 U: no succ.begin	#(begin.*succ) = #Workstation
inv9 U: no succ.begin	no end.succ	#(begin.*succ) = #Workstation
inv9 U: no succ.begin	no end.succ	#(begin.*succ) = #Workstation	all w : Workstation | w not in w.succ
inv9 U: all w : Workstation-end | one ws: Workstation-w | ws in w.succ
inv9 B: all w : Workstation | one ws: Workstation-w | ws in w.succ
inv9 O: no end.succ	all w : Workstation | one ws: Workstation-w | ws in w.succ
inv9 U: #(*succ.end) = #Workstation
inv9 B: #(*succ.end) = #Workstation	all w : Workstation | one s : Workstation | s = w.succ
inv9 B: #(*succ.end) = #Workstation	all w : Workstation | some s : Workstation | s = w.succ
inv9 U: #(*succ.end) = #Workstation	#(begin.*succ) = #Workstation
inv9 B: #(*succ.end) = #Workstation	#(begin.*succ) = #Workstation	all w : Workstation | #w.succ=1
inv9 U: #(*succ.end) = #Workstation	#(begin.*succ) = #Workstation	all w : Workstation-end | # w.succ = 1
inv9 U: #(*succ.end) = #Workstation	#(begin.*succ) = #Workstation	all w : Workstation-end | # w.succ = 1	all w: Workstation | w not in w.succ

